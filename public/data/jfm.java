import java.text.ParseException;
import java.text.SimpleDateFormat;

import org.apache.commons.chain.Command;
import org.apache.commons.chain.Context;
import org.apache.commons.chain.impl.ContextBase;
import org.apache.commons.lang.StringUtils;

import com.boco.fmhandler.config.ConfigUtil;
import com.boco.fmhandler.util.FindUtil;
import com.boco.fmhandler.util.JCRC32;
import com.boco.fmhandler.util.Util;
import com.boco.fmhandler.util.ParseUtil;
import com.boco.fmhandler.wl.init.StaticData;
import com.boco.fmhandler.wl.init.chain.SimpleFindUtil;
import com.boco.fmhandler.wl.init.chain.cache.command.AlarmStandCommand;
import com.boco.fmhandler.wl.init.chain.cache.command.BaseCommand;
import com.boco.fmhandler.wl.init.chain.cache.command.standard.PowerStandardIdCommand;

import com.boco.gdau.commonalarm.CommonAlarm;
import com.boco.jfmhandler.cache.model.Circuit;
import com.boco.jfmhandler.cache.model.Gcss;
import net.sf.ehcache.Cache;
import net.sf.ehcache.CacheManager;
import net.sf.ehcache.Element;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
//redis缓存外挂
// import com.boco.gd.ejc.redis.RedisFindUtil

// 故障管理自采告警：rt脚本逻辑
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;
import java.text.DateFormat;

/**
 * 广东移动JFMHandler本地逻辑
 * <pre>
 * 2014-09-01 Lupeng 处理GCP告警
 * 2018-10-24 Lupeng 增加最新标准化处理(setNewAlarmStandard())/最新网络分类处理(setNewNetworkType())
 * 2018-12-11 Lupeng 修改动环标准化(setNewAlarmStandard())
 * </pre>
 * @author wang
 * @version 1.8.8
 */
class Pre_Local_gd {
	private Logger log;
	private static final String CUSTOMCACHE="customCache";
	private static final String CUSTOMCACHEHour="customCacheHour";
	private static final String ALARMSTANDARDCACHE="alarmStandardCache";
	private static final String PORTCACHE="portCache";
	private FindUtil util = SimpleFindUtil.getInstance();
	//redis缓存外挂
	// private RedisFindUtil rutil = RedisFindUtil.getInstance();
	private JCRC32 jcrc = new JCRC32();
	private Map eqpObjectClassMap = new HashMap();
	private Map NetworkTypeMap = new HashMap();
	private Map deleteDupMap = new HashMap();
	private Map boardMap = new HashMap();
	private Map regionMap = new HashMap();
	private Map cityMap = new HashMap();
	private Map otherProvinceMap = new HashMap();

	def o_fp0, o_fp1, o_fp2, o_fp3, o_c_fp0, o_c_fp1, o_c_fp2, o_c_fp3, o_time_stamp, o_int_id, o_object_class, o_vendor_id, o_alarm_title, o_event_time;
	def o_org_severity, o_redefine_severity, o_group_severity, o_region_severity, o_vendor_severity, o_org_type, o_redefine_type, o_vendor_type;
	def o_active_status, o_cancel_time, o_alarm_text, o_omc_id, o_omc_alarm_id, o_probable_cause, o_probable_cause_txt, o_locate_info, o_related_tkgp;
	def o_corr_str, o_type_keycode, o_severity_keycode, o_title_text, o_event_id, o_event_cat, o_vendor_name, o_ne_label, o_ne_location, o_city_name;
	def o_city_id, o_region_id, o_region_name, o_channel_type, o_special_field0, o_special_field1, o_special_field2, o_special_field3, o_special_field4;
	def o_special_field5, o_special_field6, o_special_field7, o_special_field8, o_special_field9, o_special_field10, o_special_field11, o_special_field12;
	def o_special_field13, o_special_field14, o_special_field15, o_special_field16, o_special_field17, o_special_field18, o_special_field19, o_special_field20;
	def o_special_field21, o_special_field22, o_special_field23, o_ParentIntId, o_ParentObjectClass, o_alarm_unit, o_alarm_content, o_sub_alarm_type;
	def o_alarm_origin, o_province_id, o_province_name, o_ack_flag, o_ack_user, o_ack_time, o_ack_terminal, o_network_type, o_tmsc_cat, o_stp_cat;
	def o_resource_status, o_alarm_resource_status, o_professional_type, o_nms_name, o_extra_string1, o_extra_string2, o_extra_string3, o_extra_id1;
	def o_extra_id2, o_extra_id3, o_site_no, o_circuit_no, o_link_office, o_alarm_source, o_sys_vendor_id, o_eqp_int_id, o_eqp_object_class, o_eqp_version;
	def o_eqp_label, o_eqp_alias, o_ne_alias, o_ne_status, o_ne_admin_status, o_alarm_ne_status, o_logic_alarm_type, o_logic_sub_alarm_type;
	def o_standard_alarm_name, o_standard_alarm_id, o_attachment, o_effect_ne, o_effect_service, o_alarm_value, o_preprocess_manner, o_province_process_flag;
	def o_department_process_flag, o_ticket_confirm_manner, o_send_jt_flag, o_port_num, o_channel_num, o_locate_name, o_remote_int_id, o_remote_eqp_label;
	def o_remote_eqp_alias, o_remote_resource_status, o_remote_proj_sub_status, o_proj_name, o_alarm_eqp_status, o_proj_oa_file_id, o_standard_flag;
	def o_business_region_ids, o_business_regions, o_remote_object_class, o_eoms_network_type, o_object_level, o_gcss_client, o_gcss_client_num;
	def o_gcss_client_name, o_gcss_client_level, o_gcss_service, o_gcss_service_num, o_gcss_service_type, o_gcss_service_level;
	def o_alarm_act_count, o_nms_alarm_id, o_correlate_alarm_flag, o_circuit_id, o_standard_alarm_name_id, o_gcss_client_grade, o_gcss_client_grade_mgt;
	def t_related_bsc, t_related_omc;
	def o_no_has_source_table, o_alarm_fp, o_alarm_c_fp, o_eqp_ip, o_eqp_severity, o_maintain_man, o_eqp_operation_status;
	def o_alarm_locate_object, o_alarm_object_severity, o_related_information, o_alarm_memo, o_business_area;
	//新增传输电路级别业务字段信息 --[add][20130613][wujian][需求提出人:luocheng]
	def o_circuit_level;
	def i_alarm_ne_status;//保留原始标工状态 add by liuaiyong@2013103109

	//gd
	def i_ne_label,i_special_field16,i_special_field18,i_vendor_name,i_VendorId,i_network_type,i_extra_id2,i_extra_id3,i_special_field17,i_int_id,i_eqp_int_id,i_title_text,i_city_name;
	// GCP告警新增字段 add by Lupeng 2014-09-01
	def o_idn,o_eqp_idn,o_board_type,o_alarm_explanation,o_signal_rate,o_alarm_explanation_addition,o_alarm_id,o_alarm_intend_send_source,o_alarm_intend_send_time,o_eqp_object_class_text,o_group_id,o_ne_model;
	//5+2,by liuciayong@20141127
	def o_ems_id;
	def o_layer_rate;
	def o_fm_int_id,o_fm_eqp_int_id;

	//高铁,add by liuaiyong@20150624
	def o_alarm_important_level,o_effect_circuit_num,o_interrupt_circuit_id,o_interrupt_circuit_no,o_interrupt_circuit_state,o_interrupt_gcss_client_level,o_network_type_top,o_remark_exist,o_service_crossdomain_type,o_site_info,o_site_type;
	def o_rlocate_ne_int_id,o_rlocate_ne_name,o_rlocate_ne_type,o_ne_sub_type;
	//新增家客,add by liucaiyong@20160412
	def o_link_onu_num,o_home_client_num;
	def o_alarm_check;
	//退服原因,场景类型,add by liucaiyong@20171025
	def o_alarm_reason,o_scence_type,o_site_poweroff;
	//NB告警接入,add by liucaiyong@20180501
	def o_business_type;
	//暂存放端口类型：pstr ,add by lgy@20180522
	def i_pstr;
	// 存放产品号码  add by lgy@20180625
	def o_business_system_id,o_business_system;
	//OLT脱管场景一 by yjb@20190214
	def o_hotel_flag;
	def o_town_id,o_township;//lcy@20190322
	def o_vm_ids,o_pr_ids;//lcy@20190517
	def o_area_type;//lcy@20191223
	def o_ne_ip;//lcy@20200228
	def o_gcss_service_sub_type; // 云专线资源字段接入
	def o_gcss_service_code; // 集客业务编码字段

	def o_msgserial; // 区分故障管理自采告警和统一采集告警
	def o_proj_time; // 告警工程标记时间
	def o_group_name; // 组名称

	// 存放产品号码 add by lgy@20180625
	String product_no="";
	//String is_uplink = "";
	Date event_time;
	String object_class;
	String gcss_service_region;
	String t_gc_service_id;
	String t_gc_client_id;

	private Context context = new ContextBase();
	// (最新)标准化
	private BaseCommand alarmStandCommand      = new AlarmStandCommand();
	private BaseCommand powerStandardIdCommand = new PowerStandardIdCommand();


	// long count=0;
	// long counttime=0;
	// int page=1000;
	// long sc1=0;long sc2=0;long sc3=0;long sc4=0;long sc5=0;long sc6=0;long sc7=0;long sc8=0;long sc9=0;long sc10=0;long sc11=0;long sc12=0;long sc13=0;long sc14=0;long sc15=0;long sc16=0;long sc17=0;long sc18=0;

	private void setLog(CommonAlarm src){
		if(log==null){
			String qname = src.getString("QNAME");
			if(qname==null||qname.equals("")){
				log = LoggerFactory.getLogger("groovy");
			} else {
				log = LoggerFactory.getLogger("local_"+qname);
			}
			/*
			String instance="";
			new File("../prjConf/ucmpconfig.yaml").eachLine{
				if(it.startsWith("instance:")){
					instance = it.substring(9).trim();
				}
			}

			if(instance.equals("")){
				log = LoggerFactory.getLogger("local_"+qname);
				println "log-2";
				return;
			}
			instance+="_";
			log = LoggerFactory.getLogger("local_"+instance+qname);
			println "log-3:local_" + instance+qname;
			*/
		}
	}

	/**
	 * JFMHandler 调用的入口方法
	 * @param src 代表 120消息的数据
	 * @param dest 代表1406消息的数据
	 */
	public void localHandle(CommonAlarm src,CommonAlarm dest) {
		// count++;
		this.setLog(src);
		o_msgserial = dest.getString("MsgSerial"); // 优先初始化o_msgserial，以便下面逻辑可以判断
		o_fp0 = dest.getString("fp0"); // 优先初始化o_fp0，以便下面逻辑可以记录日志
		log.debug("[MsgSerial], fp0={}, msgserial={}", o_fp0, o_msgserial);
		// long step0 = System.currentTimeMillis();
		if(StringUtils.isBlank(o_msgserial)) {
			// 故障管理自采告警：rthandler逻辑（原69.128、69.128逻辑）
			this.initRthandler(src,dest);
			log.debug("[MsgSerial isBlank], fp0={}, professional_type={}, vendor_id={}, object_class={}, int_id={}, idn={}, msgserial={}", o_fp0, o_professional_type, o_vendor_id, o_object_class, o_int_id, o_idn, o_msgserial);
			// long step1 = System.currentTimeMillis();
			// sc1=sc1+(step1-step0);
			if(!this.checkDataRthandler()) {
			  return;
			}
			// long step2 = System.currentTimeMillis();
			// sc2=sc2+(step2-step1);
			this.PreCookIntidRthandler(); //某些告警需要先获取int_id

			String filterOmcId=",6101,6102,6601,6602,6607,6608,6109,1502,";
			if( filterOmcId.contains(","+o_omc_id+",")||o_professional_type == "3")
			{
			  this.addResourceForOmcIdRthandler(o_city_id,o_city_name);
			  if(o_alarm_title in ["98","99"]){
				this.AddResourceInfoRthandler();
			  }
			}
			else
			{
			  this.AddResourceInfoRthandler();
			  this.zhiNengXunJianRthandler();
			}
			// long step3 = System.currentTimeMillis();
			// sc3=sc3+(step3-step2);
			this.setEquipmentInfoRthandler();
			this.gdZhuDongJianKongRthandler();
			// long step4 = System.currentTimeMillis();
			// sc4=sc4+(step4-step3);
			this.alarmTitleTranslateRthandler();
			// long step5 = System.currentTimeMillis();
			// sc5=sc5+(step5-step4);
			this.setNewNetworkTypeRthandler(dest);
			this.setNewAlarmStandardRthandler(src, dest);
			//this.setAlarmStandard();
			this.setStandardAlarmNameIdRthandler();
			// long step6 = System.currentTimeMillis();
			// sc6=sc6+(step6-step5);
			this.setPrepareProcessorRthandler();
			// long step7 = System.currentTimeMillis();
			// sc7=sc7+(step7-step6);
			this.setRemoteAlarmAddResourceRthandler();
			// long step8 = System.currentTimeMillis();
			// sc8=sc8+(step8-step7);
			this.setSubAlarmTypeRthandler();
			this.setProjectStatusRthandler(); // 同步修改标工函数setProjectStatus和疑似标工函数setProjectStatusSuspect
			// long step9 = System.currentTimeMillis();
			// sc9=sc9+(step9-step8);
			this.setEomsNetWorkTypeRthandler();
			// long step10 = System.currentTimeMillis();
			// sc10=sc10+(step10-step9);
			this.setSignalingRthandler();
			// long step11 = System.currentTimeMillis();
			// sc11=sc11+(step11-step10);
			this.setJikeInfoRthandler();
			// long step12 = System.currentTimeMillis();
			// sc12=sc12+(step12-step11);
			this.setTransPortToCircuitRthandler();
			// long step13 = System.currentTimeMillis();
			// sc13=sc13+(step13-step12);
			this.setTransportRelatedJikeRthandler();
			this.setJikeServiceRegionRthandler();
			// long step14 = System.currentTimeMillis();
			// sc14=sc14+(step14-step13);
			//this.setAffectUserNum();
			this.verifyCircuitNoRthandler();
			this.setSiteNoRthandler();
			this.alarmAddGroupInfoRthandler(dest);//告警分组20131108
			this.SetJiKeEffectServiceRthandler();//传输网集客告警处理时限
			// long step15 = System.currentTimeMillis();
			// sc15=sc15+(step15-step14);
			this.setScenecAlarmRthandler();
			this.setPostProcessorRthandler();
			// long step16 = System.currentTimeMillis();
			// sc16=sc16+(step16-step15);

			//处理网元业务地市信息
			this.redefineCityFromYWRthandler();
			this.otherRthandler();
			// add by daixueyue on 20130912
			this.handlerAddAFieldRthandler();
			this.JikePwTunnelRthandler();
			this.MarkStarsRthandler();
			this.SubProbableCauseRthandler();
			this.setVendorTypeRthandler();
			// long step17 = System.currentTimeMillis();
			// sc17=sc17+(step17-step16);
		} else {
			// 统一采集推送告警（原69.143、109.29、109.30、109.200逻辑）
			this.init(src,dest);
			log.debug("[MsgSerial isNotBlank], fp0={}, professional_type={}, vendor_id={}, object_class={}, int_id={}, idn={}, msgserial={}", o_fp0, o_professional_type, o_vendor_id, o_object_class, o_int_id, o_idn, o_msgserial);
			this.idn2Intid();
			// long step1 = System.currentTimeMillis();
			// sc1=sc1+(step1-step0);
			if(!this.checkData()) {
				return;
			}
			// long step2 = System.currentTimeMillis();
			// sc2=sc2+(step2-step1);
			this.PreCookIntid(); //某些告警需要先获取int_id

			String filterOmcId=",6101,6102,6601,6602,6607,6608,6109,1502,";
			String filterNFV=",20,508,1515,1516,1521,1614,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,";
			if( filterOmcId.contains(","+o_omc_id+",")||o_professional_type == "3"||filterNFV.contains(","+o_object_class+","))
			{
				this.addResourceForOmcId(o_city_id,o_city_name);
				if(o_alarm_title in ["98","99"]){
					this.AddResourceInfo();
				}
			}
			else
			{
				this.AddResourceInfo();
				this.zhiNengXunJian();
			}
			// long step3 = System.currentTimeMillis();
			// sc3=sc3+(step3-step2);
			this.setEquipmentInfo();
			this.gdZhuDongJianKong();
			// long step4 = System.currentTimeMillis();
			// sc4=sc4+(step4-step3);
			this.alarmTitleTranslate();
			// long step5 = System.currentTimeMillis();
			// sc5=sc5+(step5-step4);
			this.setPrepareProcessor();
			this.setNewNetworkType(dest);
			this.setNewAlarmStandard(src, dest);

			//this.setAlarmStandardCS();
			//this.setAlarmStandardNotCS();
			this.setStandardAlarmNameId();
			// long step6 = System.currentTimeMillis();
			// sc6=sc6+(step6-step5);
			// long step7 = System.currentTimeMillis();
			// sc7=sc7+(step7-step6);
			this.setRemoteAlarmAddResource();
			// long step8 = System.currentTimeMillis();
			// sc8=sc8+(step8-step7);
			this.setSubAlarmType();
			this.setProjectStatus(); // 同步修改标工函数setProjectStatus和疑似标工函数setProjectStatusSuspect
			// long step9 = System.currentTimeMillis();
			// sc9=sc9+(step9-step8);
			this.setEomsNetWorkType();
			// long step10 = System.currentTimeMillis();
			// sc10=sc10+(step10-step9);
			this.setSignaling();
			// long step11 = System.currentTimeMillis();
			// sc11=sc11+(step11-step10);
			this.setJikeInfo();
			// long step12 = System.currentTimeMillis();
			// sc12=sc12+(step12-step11);
			this.setTransPortToCircuit();
			// long step13 = System.currentTimeMillis();
			// sc13=sc13+(step13-step12);
			this.setTransportRelatedJike();
			this.setJikeServiceRegion();
			// long step14 = System.currentTimeMillis();
			// sc14=sc14+(step14-step13);
			this.setAffectUserNum();
			this.verifyCircuitNo();
			this.setSiteNo();
			this.alarmAddGroupInfo(dest);//告警分组20131108
			//this.SetJiKeEffectService();//传输网集客告警处理时限
			// long step15 = System.currentTimeMillis();
			// sc15=sc15+(step15-step14);
			this.setScenecAlarm();
			this.setPostProcessor();
			//处理网元业务地市信息
			this.redefineCityFromYW();
			this.other();
			// add by daixueyue on 20130912
			this.handlerAddAField(src, dest);
			//this.JikePwTunnel();
			this.SetJiKeEffectService();
			this.MarkStars();
			this.SetNFValarm();
			this.SubProbableCause();
		}

		// if(StringUtils.isEmpty(o_province_id)){
		// 	log.debug("alarmProvinceIdFp0={},province_id={}.msgserial={},professional_type={}",o_fp0,o_province_id,o_msgserial,o_professional_type);
		// }
		// if(StringUtils.isEmpty(o_org_severity)){
		// 	log.debug("alarmOrgSeverityFp0={},province_id={}.msgserial={},professional_type={}",o_fp0,o_province_id,o_msgserial,o_professional_type);
		// }
		// 设置其他省份信息：解决故障中心自定义视图权限问题：无province_id则省份权限客户无法呈现该告警，需提圈到全国权限
		if ((!(o_province_name in ["广东", "广东省"]) && StringUtils.isNotBlank(o_province_name)) || (o_province_id != "-1489894494" && StringUtils.isNotBlank(o_province_id))) {
		  this.addOtherProvinceInfo(o_province_name, o_province_id);
		}
		// 设置广东省id默认值：解决故障中心自定义视图权限问题：无province_id则省份权限客户无法呈现该告警，需提圈到全国权限
		if (StringUtils.isBlank(o_province_name) || o_province_name in ["广东", "广东省"]) {
			// o_province_name = "广东省";
			o_province_id   = "-1489894494";
			// log.debug("setDefaultProvinceId-fp0={}, province_name={}, province_id={}, city_name={}, city_id={}, region_name={}, region_id={}", o_fp0, o_province_name, o_province_id, o_city_name, o_city_id, o_region_name, o_region_id);
		}

		this.thresholdCtrlJtFlag();
		this.set1406Value(dest);
	}

	/**
	 * 先用城市ID再用城市名称查询地区信息
	 * @param city_id
	 * @param city_name
	 */
	private void addResourceForOmcId(String city_id,String city_name)
	{
		this.addRegionInfo(city_id,city_name);
	}

	/**
	 * 在此完成变量的初始化1406消息的过程
	 * 正常只需要从dest这里面进行取值，即1406消息，1.7即使关闭了公共逻辑120到1406的赋值也已经完成
	 * 如果只能从120的消息里面才能取到值可以从dest这个里面取如：
	 * o_SyncCType = dest.getString("SyncCType");
	 * @param src 代表 120消息的数据
	 */
	private void init(CommonAlarm src,CommonAlarm dest) {
			o_fp0                   	=dest.getString("fp0");
			o_fp1                   	=dest.getString("fp1");
			o_fp2                  	 	=dest.getString("fp2");
			o_fp3                   	=dest.getString("fp3");
			o_c_fp0                 	=dest.getString("c_fp0");
			o_c_fp1                 	=dest.getString("c_fp1");
			o_c_fp2                 	=dest.getString("c_fp2");
			o_c_fp3                 	=dest.getString("c_fp3");
			o_time_stamp            	=dest.getString("time_stamp");
			o_int_id                	=dest.getString("int_id");
			o_object_class          	=dest.getString("object_class");
			o_alarm_title           	=dest.getString("alarm_title");
			o_event_time            	=dest.getString("event_time");
			o_org_severity          	=dest.getString("org_severity");
			o_redefine_severity     	=dest.getString("redefine_severity");
			o_group_severity        	=dest.getString("group_severity");
			o_region_severity       	=dest.getString("region_severity");
			o_vendor_severity       	=dest.getString("vendor_severity");
			o_org_type              	=dest.getString("org_type");
			o_redefine_type         	=dest.getString("redefine_type");
			o_vendor_type           	=dest.getString("vendor_type");
			o_active_status         	=dest.getString("active_status");
			o_alarm_text            	=dest.getString("alarm_text");
			o_omc_id                	=dest.getString("omc_id");
			o_omc_alarm_id          	=dest.getString("omc_alarm_id");
			o_probable_cause        	=dest.getString("probable_cause");
			o_probable_cause_txt    	=dest.getString("probable_cause_txt");
			o_locate_info           	=dest.getString("locate_info");
			o_related_tkgp          	=dest.getString("related_tkgp");
			o_corr_str              	=dest.getString("corr_str");
			o_type_keycode          	=dest.getString("type_keycode");
			o_channel_type          	=dest.getString("channel_type");
			o_special_field0        	=dest.getString("special_field0");
			o_special_field1        	=dest.getString("special_field1");
			o_special_field2        	=dest.getString("special_field2");
			o_special_field3        	=dest.getString("special_field3");
			o_special_field4        	=dest.getString("special_field4");
			o_special_field5        	=dest.getString("special_field5");
			o_special_field6        	=dest.getString("special_field6");
			o_special_field7        	=dest.getString("special_field7");
			o_special_field8        	=dest.getString("special_field8");
			o_special_field9        	=dest.getString("special_field9");
			o_special_field10       	=dest.getString("special_field10");
			o_special_field11       	=dest.getString("special_field11");
			o_special_field12       	=dest.getString("special_field12");
			o_special_field13       	=dest.getString("special_field13");
			o_special_field14       	=dest.getString("special_field14");
			o_special_field15       	=dest.getString("special_field15");
			o_special_field16       	=dest.getString("special_field16");
			o_special_field17       	=dest.getString("special_field17");
			o_special_field18       	=dest.getString("special_field18");
			o_special_field19       	=dest.getString("special_field19");
			o_special_field20       	=dest.getString("special_field20");
			o_special_field21       	=dest.getString("special_field21");
			o_special_field22       	=dest.getString("special_field22");
			o_special_field23       	=dest.getString("special_field23");
			o_ParentIntId           	=dest.getString("ParentIntId");
			o_ParentObjectClass     	=dest.getString("ParentObjectClass");
			o_alarm_unit            	=dest.getString("alarm_unit");
			o_alarm_content         	=dest.getString("alarm_content");
			o_sub_alarm_type        	=dest.getString("sub_alarm_type");
			o_alarm_origin          	=dest.getString("alarm_origin");
			o_port_num              	=dest.getString("port_num");
			o_channel_num           	=dest.getString("channel_num");
			o_site_no               	=dest.getString("site_no");
			o_circuit_no            	=dest.getString("circuit_no");
			o_link_office           	=dest.getString("link_office");
			o_alarm_source          	=dest.getString("alarm_source");
			o_professional_type     	=dest.getString("professional_type");
			o_locate_name           	=dest.getString("locate_name");
			o_title_text            	=dest.getString("title_text");
			o_vendor_id             	=dest.getString("vendor_id");
			o_province_name         	=dest.getString("province_name");
			o_city_name             	=dest.getString("city_name");
			o_resource_status       	=dest.getString("resource_status");
			o_ne_label              	=dest.getString("ne_label");
			o_ne_alias              	=dest.getString("ne_alias");
			o_severity_keycode          	=dest.getString("severity_keycode");
			o_network_type    				= dest.getString("network_type");
			i_network_type = o_network_type;
			o_region_id             	=dest.getString("region_id");
			o_region_name           	=dest.getString("region_name");
			o_extra_string1         	="";
			//o_extra_string2       		="";
			o_extra_string2       		=dest.getString("extra_string2");
			o_extra_string3       		=dest.getString("extra_string3");
			o_extra_id1             	=dest.getString("extra_id1");
			o_extra_id2             	=dest.getString("extra_id2");
			o_extra_id3             	=dest.getString("extra_id3");
			o_province_id           	=dest.getString("province_id");
			o_city_id               	=dest.getString("city_id");
			o_event_id              	=dest.getString("event_id");
			o_event_cat             	=dest.getString("event_cat");
			o_tmsc_cat             		=dest.getString("tmsc_cat");
			o_stp_cat               	=dest.getString("stp_cat");
			o_vendor_name           	=dest.getString("vendor_name");
			o_alarm_resource_status 	=dest.getString("alarm_resource_status");
			o_nms_name              	=dest.getString("nms_name");
			o_ne_location           	=dest.getString("ne_location");
			o_standard_flag				=dest.getString("standard_flag");
			o_object_level          	=dest.getString("object_level");
			o_circuit_id				=dest.getString("circuit_id");
			o_standard_alarm_name_id	=dest.getString("standard_alarm_name_id");
			o_gcss_client  				=dest.getString("gcss_client");
			o_gcss_client_num  			=dest.getString("gcss_client_num");
			o_gcss_client_name  		=dest.getString("gcss_client_name");
			o_gcss_client_level  		=dest.getString("gcss_client_level");
			o_gcss_service  			=dest.getString("gcss_service");
			o_gcss_service_num  		=dest.getString("gcss_service_num");
			o_gcss_service_type  		=dest.getString("gcss_service_type");
			o_gcss_service_level  		=dest.getString("gcss_service_level");
			o_gcss_client_grade			=dest.getString("gcss_client_grade");
			o_gcss_client_grade_mgt		=dest.getString("gcss_client_grade_mgt");
			o_remote_resource_status	="";
			o_alarm_eqp_status			=dest.getString("alarm_eqp_status");
			o_remote_proj_sub_status	="";
			o_standard_alarm_name	  	=dest.getString("standard_alarm_name");
			o_eqp_int_id            	=dest.getString("eqp_int_id");
			o_eqp_version           	=dest.getString("eqp_version") ;
			o_eqp_label             	=dest.getString("eqp_label")  ;
			o_eqp_alias             	=dest.getString("eqp_alias")  ;
			o_eqp_object_class      	=dest.getString("eqp_object_class") ;
			o_ne_status             	=dest.getString("ne_status")  ;
			o_alarm_ne_status       	=dest.getString("alarm_ne_status")   ;
			i_alarm_ne_status       	=dest.getString("alarm_ne_status")   ;
			o_logic_alarm_type      	=dest.getString("logic_alarm_type");
			o_logic_sub_alarm_type  	=dest.getString("logic_sub_alarm_type");
			o_send_jt_flag          	=dest.getString("send_jt_flag");
			o_standard_alarm_id     	=dest.getString("standard_alarm_id");
			o_effect_ne             	=dest.getString("effect_ne");
			o_effect_service        	=dest.getString("effect_service");
			o_preprocess_manner      	=dest.getString("preprocess_manner");
			o_province_process_flag  	=dest.getString("province_process_flag");
			o_department_process_flag	=dest.getString("department_process_flag");
			o_alarm_act_count       	=dest.getString("alarm_act_count");
			o_nms_alarm_id		      	=dest.getString("nms_alarm_id");
			o_correlate_alarm_flag  	=dest.getString("correlate_alarm_flag");
			o_ne_admin_status       	=dest.getString("ne_admin_status");
			o_alarm_value            	=dest.getString("alarm_value");
			o_no_has_source_table    	=dest.getString("no_has_source_table");
			o_alarm_fp 					=dest.getString("alarm_fp");
			o_alarm_c_fp				=dest.getString("alarm_c_fp");
			o_sys_vendor_id				=dest.getString("sys_vendor_id");
			o_eqp_ip					=dest.getString("eqp_ip");
			o_eqp_severity				=dest.getString("eqp_severity");
			o_maintain_man				=dest.getString("maintain_man");
			o_eqp_operation_status		=dest.getString("eqp_operation_status");
			o_alarm_locate_object		=dest.getString("alarm_locate_object");
			o_alarm_object_severity		=dest.getString("alarm_object_severity");
			o_related_information		=dest.getString("related_information");
			o_alarm_memo				=dest.getString("alarm_memo");
			o_business_area				=dest.getString("business_area");
			o_cancel_time				=dest.getString("cancel_time");
			o_ack_flag					=dest.getString("ack_flag");
			o_ack_user					=dest.getString("ack_user");
			o_ack_time					=dest.getString("ack_time");
			o_ack_terminal				=dest.getString("ack_terminal");
			o_attachment				=dest.getString("attachment");
			o_ticket_confirm_manner		=dest.getString("ticket_confirm_manner");
			o_remote_int_id				=dest.getString("remote_int_id");
			o_remote_eqp_label			=dest.getString("remote_eqp_label");
			o_remote_eqp_alias			=dest.getString("remote_eqp_alias");
			o_proj_name					=dest.getString("proj_name");
			o_proj_oa_file_id			=dest.getString("proj_oa_file_id");
			o_business_region_ids		=dest.getString("business_region_ids");
			o_business_regions			=dest.getString("business_regions");
			o_remote_object_class		=dest.getString("remote_object_class");
			o_eoms_network_type			=dest.getString("eoms_network_type");
			//o_circuit_level = dest.getString("circuit_level");
			o_circuit_level = "";

			o_idn 				=dest.getString("idn");
			o_eqp_idn 			=dest.getString("eqp_idn");
			o_board_type 			=dest.getString("board_type");
			o_alarm_explanation 		=dest.getString("alarm_explanation");
			o_signal_rate 			=dest.getString("signal_rate");
			o_alarm_explanation_addition	=dest.getString("alarm_explanation_addition");
			o_alarm_id			=dest.getString("alarm_id");
			o_alarm_intend_send_source 	=dest.getString("alarm_intend_send_source");
			o_alarm_intend_send_time 	=dest.getString("alarm_intend_send_time");
			o_circuit_level 		=dest.getString("circuit_level");

			//5+2
			o_layer_rate = dest.getString("layer_rate");
			o_ems_id	=	dest.getString("ems_id");
			//高铁,add by liuaiyong@20150624
			o_alarm_important_level 	=dest.getString("alarm_important_level");
			o_effect_circuit_num 		=dest.getString("effect_circuit_num");
			o_interrupt_circuit_id	=	dest.getString("interrupt_circuit_id");
			o_interrupt_circuit_no	=	dest.getString("interrupt_circuit_no");
			o_interrupt_circuit_state	=	dest.getString("interrupt_circuit_state");
			o_interrupt_gcss_client_level	=	dest.getString("interrupt_gcss_client_level");
			o_network_type_top	=	dest.getString("network_type_top");
			o_remark_exist	=	dest.getString("remark_exist");
			o_service_crossdomain_type	=	dest.getString("service_crossdomain_type");
			o_site_info	=	dest.getString("site_info");
			o_site_type	=	dest.getString("site_type");

			o_rlocate_ne_int_id	=	dest.getString("rlocate_ne_int_id");
			o_rlocate_ne_name	=	dest.getString("rlocate_ne_name");
			o_rlocate_ne_type	=	dest.getString("rlocate_ne_type");
			o_ne_sub_type 		=	dest.getString("ne_sub_type");
			//新增家客,add by liucaiyong@20160412
			o_link_onu_num = dest.getString("link_onu_num");
			o_home_client_num = dest.getString("home_client_num");
			o_alarm_check = dest.getString("alarm_check");

			o_alarm_reason = dest.getString("alarm_reason");
			o_scence_type = dest.getString("scence_type");
			o_site_poweroff = dest.getString("site_poweroff");
			o_business_type = dest.getString("business_type");
			o_business_system_id = dest.getString("business_system_id");
			o_business_system = dest.getString("business_system");
			o_town_id = dest.getString("town_id");
			o_township = dest.getString("township");
			o_vm_ids = dest.getString("vm_ids");
			o_pr_ids = dest.getString("pr_ids");
			o_area_type = dest.getString("area_type");
			o_ne_ip = dest.getString("ne_ip");
			o_gcss_service_sub_type = dest.getString("gcss_service_sub_type");
			o_gcss_service_code = dest.getString("gcss_service_code");
			// o_msgserial = dest.getString("MsgSerial");
			o_proj_time = "";
			o_group_name = "";

			//o_network_type	= 	"";
			if(o_omc_id == "6601" || o_omc_id == "6602" || o_omc_id == "6607" || o_professional_type == "3"){
					o_special_field10       =o_no_has_source_table;
					//o_special_field11       =o_alarm_fp;
					o_special_field12       =o_alarm_c_fp;
					o_special_field13       =o_eqp_ip;
					o_special_field14       =o_eqp_severity;
					//o_special_field15       =o_maintain_man;
					o_special_field23       =o_eqp_operation_status;
					o_special_field17       =o_alarm_locate_object;
					if(o_omc_id != "6607"){
							o_special_field18   =o_alarm_object_severity;
					}
					if(o_omc_id != "6601" && o_omc_id != "6602"){
							o_special_field19       =o_related_information;
					}
					o_sys_vendor_id         =o_sys_vendor_id;
					o_corr_str              =o_business_area  ;

					o_nms_alarm_id		    =dest.getString("alarm_fp");
			}


			//if(o_omc_id == "15001" || o_omc_id == "15002" || o_omc_id == "15003")
			if(o_professional_type == "3")
			{
					o_ne_status       = o_resource_status;
					o_alarm_ne_status = o_alarm_resource_status;
					o_extra_string1   = dest.getString("extra_string1");
					o_extra_string2   = dest.getString("extra_string2");
					//o_nms_name        = o_extra_string1;
					//告警解释extra_string2,added by sunyuqiu@20140521
					//o_special_field6 = o_extra_string2;
					o_special_field6  = o_corr_str;
					o_special_field7  = o_extra_string3;
					//o_alarm_content   = o_ne_label ;
					//告警解释extra_string2,added by sunyuqiu@20140521
					//o_extra_string2="";
					o_extra_string3   = "";
			}
			if(o_omc_id == "6601" || o_omc_id == "6602")
			{
					o_alarm_ne_status = o_alarm_resource_status;
					o_extra_string2   = dest.getString("extra_string2");
					o_eqp_int_id      = o_eqp_int_id;
					o_eqp_object_class= o_eqp_object_class ;
					o_alarm_content   = o_ne_label ;
					o_extra_string1   = dest.getString("extra_string1");
			}
			if(o_omc_id == "1042")
			{
					o_extra_string1=dest.getString("extra_string1");
			}
			this.gdWlan();

			i_special_field16 = dest.getString("special_field16");
			i_special_field18 = dest.getString("special_field18");//1016
			i_vendor_name     = o_vendor_name;
			i_VendorId        = o_vendor_id ;

			i_extra_id2       = o_extra_id2;
			i_extra_id3       = o_extra_id3;
			i_special_field17 = o_special_field17;
			i_int_id          = dest.getString("int_id");
			i_eqp_int_id      = dest.getString("eqp_int_id");
			i_title_text      = dest.getString("title_text");
			i_ne_label        = dest.getString("ne_label");
			event_time        = dest.getDate("event_time");
			gcss_service_region="";
			t_gc_service_id   = "";
			t_gc_client_id    = "";
			i_city_name       = o_city_name;
			product_no				="";
			i_pstr  					="";
			t_related_bsc     ="";
			o_fm_eqp_int_id   ="";
			o_fm_int_id   		="";
			//is_uplink 				="";
			//OLT脱管场景一，初始化 by yjb@20190214
			o_hotel_flag = "";
	}

	/**
	 * Wlan 告警特殊赋值
	 */
	private void gdWlan()
	{
		if(o_omc_id == "1502")
		{
			o_special_field19 = o_related_information;
			o_special_field20 = o_alarm_memo;
			o_corr_str        = o_business_area;
			o_province_id     = "-1489894494";
			o_province_name   = "广东省";
		}
	}
	/**
	 * 检查业务需要数据是否可用，不可用直接退出
	 */
	private boolean checkData()
	{
		if(StringUtils.isBlank(o_int_id))
		{
			return false;
		}
		return true;
	}

	/**
	 * 将Objects表中的值封装到Map中以方便使用
	 * 直接通过字段的名辽get取值
	 * @param key
	 * @return
	 */
	private Map getObjectsValueWithMap(String key,String taskName)
	{
		Map map = new HashMap();
		Object[] objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,taskName);
		List olist= objects == null ? null : Arrays.asList(objects);
		if(olist!=null&&!olist.isEmpty())
		{
			map.put("int_id",         Util.getTempV(olist, 0));
			map.put("vendor_id",      Util.getTempV(olist, 1));
			map.put("network_type",   Util.getTempV(olist, 2));
			map.put("tmsc_cat",       Util.getTempV(olist, 3));
			map.put("stp_cat",        Util.getTempV(olist, 4));
			map.put("resource_status",Util.getTempV(olist, 5));
			map.put("userlabel",      Util.getTempV(olist, 6));
			map.put("locationname",   Util.getTempV(olist, 7));
			map.put("city_id",        Util.getTempV(olist, 8));
			map.put("province_id",    Util.getTempV(olist, 9));
			map.put("zh_label",       Util.getTempV(olist, 10));
			map.put("parent_int_id",  Util.getTempV(olist, 11));
			map.put("related_bsc",    Util.getTempV(olist, 12));
			map.put("related_omc",    Util.getTempV(olist, 13));
			map.put("version",        Util.getTempV(olist, 14));
			map.put("related_ne1",    Util.getTempV(olist, 15));
			map.put("related_ne2",    Util.getTempV(olist, 16));
			map.put("object_class",   Util.getTempV(olist, 17));
			map.put("mss_cat",        Util.getTempV(olist, 18));
			map.put("related_ne3",    Util.getTempV(olist, 19));
			map.put("machroom_id",    Util.getTempV(olist, 20));
			map.put("project_status", Util.getTempV(olist, 21));
			map.put("confirmed",      Util.getTempV(olist, 22));
			map.put("resourcesid", Util.getTempV(olist, 23));
			map.put("upd_flag", Util.getTempV(olist, 24));
		}
		return map;
	}
	/**
	 * 通过city_id查找地区信息
	 * @param city_id
	 */
	private void addVendorName(String vendor_id)
	{
		if(StringUtils.isNotBlank(vendor_id)){
			String vendorKey = "vendor_name:"+vendor_id;
			Object[] vendors =  (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, vendorKey,"vendor_name");
			List vendorList= vendors == null ? null : Arrays.asList(vendors);
			if(vendorList!=null&&!vendorList.isEmpty())
			{
				o_vendor_name=Util.getTempV(vendorList, 2);
			}
		}
	}

	/**
	 * 通过city_id查找地区信息
	 * @param city_id
	 */
	private void addRegionInfo(String city_id,String city_name)
	{
		if(StringUtils.isNotBlank(city_id)){
			// String cityKey="region_city_local:"+city_id;
			// Object[] city = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, cityKey,"region_city_local.1");
			// List cityList = city == null ? null : Arrays.asList(city);
			// if(cityList!=null&&!cityList.isEmpty()){
			// 	o_city_id       = Util.getTempV(cityList, 0);
			// 	o_province_name = Util.getTempV(cityList, 1);
			// 	o_province_id   = Util.getTempV(cityList, 2);
			// 	o_region_name   = Util.getTempV(cityList, 3);
			// 	o_region_id     = Util.getTempV(cityList, 4);
			// 	o_city_name     = Util.getTempV(cityList, 5);
			// }
			// 迁移到private void getCityInfoWithMap，取消从缓存中获取地市信息
			this.getCityInfoWithMap(city_id);
			if(!cityMap.isEmpty()){
			    o_province_id   = cityMap.get("province_id");
			    o_province_name = cityMap.get("province_name");
			    o_region_id     = cityMap.get("region_id");
			    o_region_name   = cityMap.get("region_name");
			    o_city_id       = cityMap.get("city_id");
			    o_city_name     = cityMap.get("city_name");
			}
		}
		else
		{
			if(StringUtils.isBlank(city_name))
			{
				return;
			}
			String per = "市";
			if(city_name.indexOf(per)==-1)
			{
				city_name=city_name+per;
			}
			// String keyRegion="region_city_local:"+city_name;
			// Map map = this.getRegionInfoWithMap(keyRegion,"region_city_local.2");
			// if(!map.isEmpty()){
			// 	o_province_id   = map.get("province_id");
			// 	o_province_name = map.get("province_name");
			// 	o_region_id     = map.get("region_id");
			// 	o_region_name   = map.get("region_name");
			// 	o_city_id       = map.get("city_id");
			// 	o_city_name     = map.get("city_name");
			// }
			// 迁移到private void getCityInfoWithMap，取消从缓存中获取地市信息
			this.getCityInfoWithMap(city_name);
			if(!cityMap.isEmpty()){
			    o_province_id   = cityMap.get("province_id");
			    o_province_name = cityMap.get("province_name");
			    o_region_id     = cityMap.get("region_id");
			    o_region_name   = cityMap.get("region_name");
			    o_city_id       = cityMap.get("city_id");
			    o_city_name     = cityMap.get("city_name");
			}
		}
	}

	/**
	 * 地区信息映射工具方法
	 * @param key
	 * @return
	 */
	// 迁移到private String getCityInfoWithMap，取消从缓存中获取地市信息
	// private Map getRegionInfoWithMap(String key,String taskName)
	// {
	// 	Map map = new HashMap();
	// 	Object[] city = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,taskName);
	// 	List cityList = city == null ? null : Arrays.asList(city);
	// 	if(cityList!=null&&!cityList.isEmpty())
	// 	{
	// 		map.put("city_id",       Util.getTempV(cityList, 0));
	// 		map.put("province_name", Util.getTempV(cityList, 1));
	// 		map.put("province_id",   Util.getTempV(cityList, 2));
	// 		map.put("region_name",   Util.getTempV(cityList, 3));
	// 		map.put("region_id",     Util.getTempV(cityList, 4));
	// 		map.put("city_name",     Util.getTempV(cityList, 5));
	// 	}
	// 	return map;
	// }

	/**
	 * 用于设置标准化信息
	 * 对不同厂家不同的Key进行查询
	 * @param key
	 */
	private void setAlarmStandardInfo(String key,String taskName)
	{
		Object[] stand = util.getObject(this.ALARMSTANDARDCACHE, key,taskName)
		List olist = stand==null?null:Arrays.asList(stand);
		if (olist != null&&!olist.isEmpty()) {
			o_severity_keycode           = Util.getTempV(olist, 1);
			o_org_severity           = Util.getTempV(olist, 2);
			o_redefine_type          = Util.getTempV(olist, 4);
			o_send_jt_flag           = Util.getTempV(olist, 3);
			o_logic_alarm_type       = Util.getTempV(olist, 5);
			o_logic_sub_alarm_type   = Util.getTempV(olist, 6);
			o_standard_alarm_name    = Util.getTempV(olist, 7);
			o_standard_alarm_id      = Util.getTempV(olist, 8);
			o_effect_ne              = Util.getTempV(olist, 9);
			o_effect_service         = Util.getTempV(olist, 10);
			o_alarm_value            = Util.getTempV(olist, 11);
			o_preprocess_manner      = Util.getTempV(olist, 12);
			o_province_process_flag  = Util.getTempV(olist, 13);
			o_department_process_flag= Util.getTempV(olist, 14);
			o_ticket_confirm_manner  = Util.getTempV(olist, 15);
			//o_eqp_object_class=Util.getTempV(olist, 20);
			o_standard_flag="2";

			//5+2
			if(o_professional_type == "3" && StringUtils.isNotBlank(o_idn))
			{
				o_alarm_explanation = Util.getTempV(olist, 27);
				o_extra_string2			=	o_alarm_explanation;
				o_extra_string3			=	"【"+key+"】";

				//o_severity_keycode			=	i_network_type;
				o_vendor_severity   = Util.getTempV(olist, 23);
			}
			//IT网管告警解释赋值 added by lgy@20180717  required by shanchunlan
			if((o_omc_id == "6601" || o_omc_id == "6602"|| o_omc_id == "6603")&&o_professional_type == "5" )
			{
				o_special_field20 = Util.getTempV(olist, 27);
			}
		}else if(o_omc_id=="6601"||o_omc_id=="6602"){
			o_org_severity  = "2";
			o_standard_flag = "3";
			o_redefine_type = o_org_type;
		}else {
			o_org_severity  = "1";
			o_standard_flag = "3";
			o_send_jt_flag  = "0";
			o_redefine_type = o_org_type;
		}
		o_redefine_severity = o_org_severity;
		//NFV告警network_type取自120消息  added by lgy@20180725  required by wangyingfeng
		if(o_network_type_top=="20"){
			//o_severity_keycode=i_network_type;
		}
	}

	/**
	 * 字典数据映射
	 * @param key
	 * @return
	 */
	private String getDictValue(String key,String taskName)
	{
		Object[] dict = util.getObject(this.CUSTOMCACHE, key,taskName)
		List olist = dict==null?null:Arrays.asList(dict);
		String id="";
		if(olist!=null&&!olist.isEmpty())
		{
			id=Util.getTempV(olist, 0);
		}
		return id;
	}
	/**
	 *分级派单标星
	 *added by lgy@20180419  CMCC-GD-DRITXQ-20180322-014
	 */
	private void MarkStars()
	{
		if(o_professional_type == "3" && o_group_id != null && o_group_id.contains("-2123195864")&&o_group_id.contains("-1378028327"))
		{
			if(o_gcss_service_level=="0"||o_gcss_service_level=="-1" ||o_group_id.contains("-303091744")||o_group_id.contains("313138458")){
				o_special_field0="★★★★★";
				return;
			}
			//查找大容量OLT（用户数300以上）
			String Keys=joinKey("res_largeOLT", o_eqp_int_id);
			Object[]  Objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,Keys,"res_largeOLT");
			if(Objects!=null&&Objects.length>0){
				o_special_field0="★★★★★";
				return;
			}

			//传输网元关联高铁基站业务
			String tkey = "";
			String task="circuit_area_relation";
			String[] cids = o_circuit_id.split(",");
			for(String cid:cids)
			{
				if(StringUtils.isBlank(cid))
					continue;
				tkey =this.joinKey(task,cid);
				List results = util.getObject(this.CUSTOMCACHE,tkey,task);
				if (results!=null && !results.isEmpty()){
					o_special_field0="★★★★★";
					break;
				}
			}
		}
	}
	/**
	 * 重点网点
	 */
	private void findImportandNode()
	{
		String key="tfa_alarm_ne_monitor@"+o_object_class+"@"+o_ne_label;
		Object[] neMonitor = util.getObject(this.CUSTOMCACHE, key,"tfa_alarm_ne_monitor");
		List nmlist = neMonitor==null?null:Arrays.asList(neMonitor);
		if(nmlist!=null&&!nmlist.isEmpty())
		{
			o_special_field0 = Util.getTempV(nmlist, 0);
			//o_special_field1 = Util.getTempV(nmlist, 1);
			//o_special_field2 = Util.getTempV(nmlist, 2);
			//o_special_field3 = Util.getTempV(nmlist, 3);
		}

		key="tfa_alarm_title_monitor:"+o_standard_alarm_id;
		neMonitor = util.getObject(this.CUSTOMCACHE, key,"tfa_alarm_title_monitor");
		nmlist = neMonitor==null?null:Arrays.asList(neMonitor);
		String ne_severity = "";
		if(nmlist!=null&&!nmlist.isEmpty())
		{
			ne_severity = Util.getTempV(nmlist, 0);
		}
		if(StringUtils.isNotBlank(ne_severity) && ne_severity.length()>o_special_field0.length())
		{
			o_special_field0 = ne_severity;
		}
		//基站市电告警，且共站机房属性=OLT共站  20160517 shanchunlan
		if (o_object_class in ["201","9210","8104","41011"] && o_sub_alarm_type in ["531"] && o_site_info == "1" )
		{
			o_special_field0="★★★★★";
		}
	}

	/**
	 * 主动监控处理
	 */
	private void gdZhuDongJianKong()
	{

		if (o_alarm_title =="2270081"||o_alarm_title =="2270089")
		{
			o_object_class     = "200";
			o_eqp_object_class = o_object_class;
		}

		//性能告警专业匹配，shichao @2014051317
		if(o_org_type=="2")
		{
			//HSS-话音网
			if(o_eqp_object_class in ["8109"])
			{
				o_professional_type = "1";
			}
			//MME\SGW\PGW-数据网
			if(o_eqp_object_class in ["8101", "8102", "8103"])
			{
				o_professional_type = "2";
			}
			//主动监控版本升级导致omc_alarm_id过长,shichao@20151204
			if(o_nms_name == "BOCO_WNMS"){
				if(o_omc_alarm_id.length()>9){
					o_omc_alarm_id = "";
				}
			}
		}
		//if (o_title_text in ["重点业务TCP建立连接成功率低（5分钟）","重点业务HTTP请求响应成功率低（5分钟）"])
		//{
		//   o_ne_label = o_locate_info;
		//  o_eqp_label = o_ne_label;
		//  o_int_id = Util.getCRC32(this.joinKey(o_object_class,o_ne_label));
		//  o_eqp_int_id = o_int_id;
		//}
	}

	/**
	 * bsc 的 ne_status赋值
	 */
	private void bscStatus()
	{
		//if ( (o_object_class == "201" || o_object_class == "300") )
		//updated by liucaiyong@2013122319,网优资源网元状态与objects表不一致
		if ( (o_object_class == "201" || o_object_class == "300")&& StringUtils.isBlank(o_ne_status))
		{
			if( t_related_bsc != null && t_related_bsc != "" ){
				String bscKey=joinKey("objects", t_related_bsc);
				Map map = this.getObjectsValueWithMap(bscKey,"objects");
				if(map.size()>0)
				{
					String bsc_label=map.get("userlabel");
					if( bsc_label !=null && bsc_label !="" ){
						String key=joinKey("neStatus", o_ne_label, bsc_label);
						Object[] objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,"bscStatus");
						if(objects != null){
							o_ne_status=""+objects[0]
						}
					}
				}
			}
		}
	}

	/**
	 * 智能巡检
	 */
	private void zhiNengXunJian()
	{
		if (o_vendor_type == "智能巡检告警" )
		{
			o_vendor_name = i_vendor_name;
			o_vendor_id = i_VendorId;
		}
	}
	/**
	 * 本地需要一些预处理的业务逻辑
	 */
	private void setPrepareProcessor()
	{
			//上报业务系统,lcy@190226
					//if(o_omc_id in ["6601","6602","6603","6607","6608"]){
						if(o_network_type_top == "12" && o_network_type == "1202" && o_vendor_id in ["101","104"] && o_eqp_object_class == "40090" ){
							o_business_system = "AAA";
						}else if(o_network_type_top == "3" && o_network_type == "302" && o_vendor_id == "995" && o_eqp_object_class == "3017"){
							o_business_system = "DNS";
						}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id == "1" && o_eqp_object_class == "1007"){
							o_business_system = "LBS";
						}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id == "1144" && o_eqp_object_class == "150919"){
							o_business_system = "MISC";
						}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id == "8" && o_eqp_object_class == "140"){
							o_business_system = "彩铃";
						}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id in ["7","8"] && o_eqp_object_class == "904"){
							o_business_system = "彩信";
						}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id == "8" && o_eqp_object_class == "1023"){
							o_business_system = "行业网关";
						}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id == "8" && o_eqp_object_class == "66038"){
							o_business_system = "来电提醒";
						}else if(o_network_type_top == "8" && o_network_type == "802" && o_vendor_id == "8" && o_eqp_object_class == "111"){
							o_business_system = "智能网平台";
						}
					//}

		if (o_org_type == "2")
		{
			this.gdZhuDongJianKong();
		}
		//else if( !(o_org_type=="4" && o_vendor_type =="网元挂牌监控告警" ) )
		//{
		//    o_org_type="1";
		//}

		//重点网元监控处理
		//if (o_object_class in [ "101","102","108","111","112","120","122","130","131","200","3302","9200"])
		//{
		//this.findImportandNode();
		//}
		//20121120 增加处理动环专业机房重要级别信息
		//if (o_omc_id=="6101")  //动环增加OMC，131107
		// if (o_professional_type=="4")
		// {
		// 	if(StringUtils.isNotBlank(o_special_field11)){
		// 		//sqlStr="select a.power_type, a.room_name, a.power_level from nrmdb.vw_machinery_room_dh a where a.room_name='"+o_special_field11+"'";
		// 		//list=Util.queryBySql("nmosdb", sqlStr);
		// 		String roomkey="vw_machinery_room_dh:"+o_special_field11;
		// 		Object[] room = util.getObject(CUSTOMCACHE, roomkey,"nrmdb.vw_machinery_room_dh");
		// 		List roomList = room==null?null:Arrays.asList(room);
		// 		o_special_field1= Util.getTempV(roomList,2);
		// 		//动环 将机房名称（SPECIAL_FIELD22）修改为综资机房名称 added  by lgy@20180510 required by wangyingfeng 需求:CMCC-GD-DRITXQ-20180112-008
		// 		o_special_field22= Util.getTempV(roomList,9);
		// 		String tmp_room_level = Util.getTempV(roomList,8);
		// 		//log.info(o_fp0+"  tmp_room_level :"+tmp_room_level);
		// 		if(StringUtils.isNotBlank(tmp_room_level)){
		// 			String dickey="tia_alarm_dict@100401@"+tmp_room_level;
		// 			tmp_room_level	=	this.getDictValue(dickey,"tia_alarm_dict.0");
		// 			//log.info(o_fp0+"  id :"+tmp_room_level);
		// 			if(StringUtils.isNotBlank(tmp_room_level)){
		// 				o_object_level	= tmp_room_level;
		// 			}
		// 			log.info(o_fp0+"  o_object_level :"+o_object_level);
		// 		}
		// 	}
		// 	else
		// 	{
		// 		o_special_field1="";
		// 	}
		// }

		if(o_eqp_int_id=="-869583732" && o_eqp_label =="WNMS-DAL-NODE")
		{
			o_standard_flag ="2";
			o_eqp_int_id = o_int_id;
			o_eqp_label  = o_ne_label;
			o_eqp_object_class=o_object_class;
			o_resource_status =o_ne_status;
			o_alarm_ne_status =o_ne_status;
		}


		//VIP属性功能合并到corr_str,by shanchunlan@2014061311
		//1.300[nrmdb.bts]\201[btssitemanager]->同一来源[btssitemanager];2.由仅华为到不限定厂家
		if(o_object_class == "201"||o_object_class == "300")
		{
			String key="myWixianBtssitemanager:";
			if(o_object_class == "300")
			{
				String tmpkey = "bts:"+o_int_id;
				Object[] bts_ = util.getObject(this.CUSTOMCACHE,tmpkey,"nrmdb.bts");
				List btsList_ = bts_==null?null:Arrays.asList(bts_);
				log.debug("fp0-{}, object_class={}, results={}",o_fp0,o_object_class,btsList_);
				if(btsList_!=null&&!btsList_.isEmpty())
				{
					o_special_field21 = vipCellMaping( Util.getTempV(btsList_, 3));
					o_object_level = vipCellLevelMaping(Util.getTempV(btsList_, 3));
					log.debug("nrmdb.bts-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
				}

				key+=o_ParentIntId;
			}
			else
			{
				key+=o_int_id;
			}
			Object[] bts = util.getObject(this.CUSTOMCACHE,key,"wuxianInfomationThree");
			List btsList = bts==null?null:Arrays.asList(bts);
			log.debug("fp0-{}, object_class={}, results={}",o_fp0,o_object_class,btsList);
			if(btsList!=null&&!btsList.isEmpty())
			{
				o_corr_str = Util.getTempV(btsList, 2);
				o_type_keycode	=	Util.getTempV(btsList, 5);
				if(o_object_class=="201"){
					o_special_field21 = vipSiteMaping( Util.getTempV(btsList, 6));
					o_object_level = vipSiteLevelMaping(Util.getTempV(btsList, 6));
					log.debug("wuxianInfomationThree-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
				}
			}
			else
			{
				o_corr_str="";
				o_type_keycode	=	"";
			}
		}

		//nodeb的告警增加下区县信息 , required by luocheng  ,edited by liucaiyong @2013111917
		if(o_object_class == "9201"||o_object_class == "9300")
		{
			String key="myWixianNodeb:";
			if(o_object_class == "9300")
			{
				String tmpkey = "utrancell:"+o_int_id;
				Object[] utrancell = util.getObject(this.CUSTOMCACHE,tmpkey,"nrmdb.utrancell");
				List utrancellList= utrancell==null?null:Arrays.asList(utrancell);
				log.debug("fp0-{}, object_class={}, results={}",o_fp0,o_object_class,utrancellList);
				if(utrancellList!=null&&!utrancellList.isEmpty())
				{
					o_special_field21 = vipCellMaping( Util.getTempV(utrancellList, 1));
					o_object_level = vipCellLevelMaping(Util.getTempV(utrancellList, 1));
					log.debug("nrmdb.utrancell-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
				}

				key+=o_ParentIntId;
			}
			else
			{
				key+=o_int_id;
			}
			Object[] nodebs = util.getObject(CUSTOMCACHE, key,"wuxianInfomationFour");
			List nodebList = nodebs==null?null:Arrays.asList(nodebs);
			log.debug("fp0-{}, object_class={}, results={}",o_fp0,o_object_class,nodebList);
			if(nodebList!=null&&!nodebList.isEmpty())
			{
				o_corr_str = Util.getTempV(nodebList, 2);
				o_type_keycode	=	Util.getTempV(nodebList, 5);
				if(o_object_class=="9201"){
					o_special_field21 = vipSiteMaping(Util.getTempV(nodebList, 6));
					o_object_level = vipSiteLevelMaping(Util.getTempV(nodebList, 6));
					log.debug("wuxianInfomationFour-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
				}
			}
			else
			{
				o_corr_str="";
				o_type_keycode	=	"";
			}
		}
		//EnodeB增加区县, shanchunlan@20140516
		//if(o_object_class == "8104"||o_object_class == "8105")
		if(o_object_class in ["8104","8105","41011","270"] )
		{
			String key="myWixianEnodeb:";
			if(o_object_class in ["8105","270"])
			{
			  String tmpkey = "eutrancell:"+o_int_id;
			  // Object[] eutrancell = util.getObject(this.CUSTOMCACHE,tmpkey,"nrmdb.eutrancell");
			  // 合并local-cache和redis外挂缓存资源，避免key值配置有重复
			  List results = util.getObject(CUSTOMCACHE, tmpkey, "eutrancell");
			  int size = results==null?0:results.size();
			  log.debug("fp0-{},key={},list.size={}",o_fp0,tmpkey,size);
			  if(size>0)
			  {
				// o_special_field21 = vipCellMaping( Util.getTempV(eutrancellList, 1));
				// o_object_level = vipCellLevelMaping(Util.getTempV(eutrancellList, 1));
				// 合并local-cache和redis外挂缓存资源，避免key值配置有重复
				o_special_field21 = vipCellMaping(Util.getTempV(results, 5));
				o_object_level = vipCellLevelMaping(Util.getTempV(results, 5));
				log.debug("eutrancell-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
			  }
			  key+=o_eqp_int_id;
			}
			else{
				key+=o_int_id;
			}

			Object[] enodebs = util.getObject(CUSTOMCACHE, key,"wuxianInfomationFive");
			List enodebList = enodebs==null?null:Arrays.asList(enodebs);
			log.debug("fp0-{}, object_class={}, results={}",o_fp0,o_object_class,enodebList);
			if(enodebList!=null&&!enodebList.isEmpty())
			{
				o_corr_str = Util.getTempV(enodebList, 2);
				o_type_keycode	=	Util.getTempV(enodebList, 4);
				if(o_object_class in ["8104","41011"]){
					o_special_field21 = vipSiteMaping(Util.getTempV(enodebList, 5));
					o_object_level = vipSiteLevelMaping(Util.getTempV(enodebList, 5));
					log.debug("wuxianInfomationFive-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
				}
				if (StringUtils.isBlank(o_special_field13)){
					//5+2 lte无线special_field13赋值ip
					o_special_field13 = Util.getTempV(enodebList, 6);
				}
			}
			else
			{
				o_corr_str="";
				o_type_keycode	=	"";
			}

		}
		//关于5G无线告警标准化的需求（CMCC-GD-DRITXQ-20190731-010,liucayong@20191223 by sunyuqiu
		if(o_object_class == "3201"||o_object_class == "3300")
		{
			String key="gnodeb:";
			if(o_object_class == "3300")
			{
				key+=o_ParentIntId;
			}
			else
			{
				key+=o_int_id;
			}
			Object[] bts = util.getObject(this.CUSTOMCACHE,key,"gnodeb");
			List btsList = bts==null?null:Arrays.asList(bts);
			if(btsList!=null&&!btsList.isEmpty())
			{
				o_corr_str = Util.getTempV(btsList, 2);
				//o_special_field21 = vipSiteMaping( Util.getTempV(btsList, 3));
				o_special_field21 = Util.getTempV(btsList, 3);
			}
			else
			{
				o_corr_str="";
				o_special_field21	=	"";
			}
		}

		//无线基站覆盖类型,by shanchunlan@20141217
		if (o_professional_type=="1" && o_object_class in ["201","300","9201","9300","8104","8105","41011","270"]){
			if(StringUtils.isNotBlank(o_type_keycode)){
				String dickey="tia_alarm_dict@1500@"+o_type_keycode;
				o_type_keycode	=	this.getDictValue(dickey,"tia_alarm_dict.0");
			}
			if(StringUtils.isBlank(o_type_keycode)){
				o_type_keycode	=	"0";
			}
		} else if (o_professional_type=="5" && o_object_class in ["201","300","9201","9300","8104","8105","41011","270"]){
			// 解决关注事件告警引起类别关键字（type_keycode）字段异常进而过滤器同步失败的问题，无法定位到哪套程序将professional_type解析成"5"
			if(StringUtils.isNotBlank(o_type_keycode)){
				String dickey="tia_alarm_dict@1500@"+o_type_keycode;
				o_type_keycode	=	this.getDictValue(dickey,"tia_alarm_dict.0");
			}
			if(StringUtils.isBlank(o_type_keycode)){
				o_type_keycode	=	"0";
			}
		}

		//动环获取区县,shanchunlan@2014070317
		// if(o_professional_type=="4")
		// {
		// 	String key="vw_machinery_room_dh:";
		// 	key+=o_special_field11;
		// 	Object[] dhroom = util.getObject(CUSTOMCACHE, key,"nrmdb.vw_machinery_room_dh");
		// 	List dhList = dhroom==null?null:Arrays.asList(dhroom);
		// 	if(dhList!=null&&!dhList.isEmpty())
		// 	{
		// 		o_corr_str = Util.getTempV(dhList, 6);
		// 		o_special_field21 = Util.getTempV(dhList, 0);
		// 		o_type_keycode = Util.getTempV(dhList,7);
		// 	}
		// 	else
		// 	{
		// 		o_corr_str="";
		// 	}
		// }

		//直放站,,shanchulan@20140721--调整o_corr_str以应急标工
		if(o_object_class=="11004")
		{
			o_corr_str=o_business_area;
		}

		//VIP属性-对象级别,by shanchunlan@2014061311
		//if (o_professional_type=="1" && o_object_class in ["201","300","9201","9300","8104","8105"])
		//{
		//	o_object_level = "0";
		//	if (o_special_field21 in ["VIP","VVIP","VVIP类型","超级VIP基站","一级VIP","二级VIP","三级VIP"])
		//	{
		//		o_object_level = "1";
		//	}
		//}

		if (o_object_class == "200" && o_vendor_id == "1" && o_sub_alarm_type == "87")
		{
			def t_sgsn_name;
			//sql = "select related_sgsn from nrmdb.bsc where int_id = " + o_int_id;
			//list = Util.queryBySql("nmosdb", sql);
			String key="bsc:"+o_int_id;
			Object[] bsc = util.getObject(CUSTOMCACHE, key,"nrmdb.bsc");
			List bscList = bsc==null?null:Arrays.asList(bsc);
			if(bscList!=null&&!bscList.isEmpty())
			{
				t_sgsn_name = Util.getTempV(bscList, 0);
			}
			if (StringUtils.isNotBlank(t_sgsn_name))
			{
				o_alarm_text = o_alarm_text + "\n" + "关联SGSN : " + t_sgsn_name;
			}
		}

		if(o_title_text=="SUSPECTED CLONE SIM CARD IN HLR")
		{
			o_special_field7 = o_alarm_unit;
			o_special_field8 = o_special_field22;
			o_special_field9 = o_special_field23;
			o_alarm_unit="";
			o_special_field22="";
			o_special_field23="";
			o_remote_int_id="";
			o_remote_eqp_label="";
			o_remote_eqp_alias="";
		}

		//liucaiyong@20181211，为标准化（动环赋值逻辑提前）
		//20121120 增加处理动环专业机房重要级别信息
		//if (o_omc_id=="6101")  //动环增加OMC，131107
		//动环获取区县,shanchunlan@2014070317
		if (o_professional_type=="4")
		{
			if(StringUtils.isNotBlank(o_special_field11)){
				String roomkey="vw_machinery_room_dh:"+o_special_field11;
				Object[] room = util.getObject(CUSTOMCACHE, roomkey,"nrmdb.vw_machinery_room_dh");
				List roomList = room==null?null:Arrays.asList(room);
				//动环 将机房名称（SPECIAL_FIELD22）修改为综资机房名称 added  by lgy@20180510 required by wangyingfeng 需求:CMCC-GD-DRITXQ-20180112-008
				if(roomList!=null&&!roomList.isEmpty()){
					o_special_field21 = Util.getTempV(roomList, 0);
					o_special_field22 = Util.getTempV(roomList,9);
					// 动环告警切换到统一采集后，因模型和128、129模型不同，special_field19原本在rt解析，而统一采集侧未推送special_field19，导致无法正常判断省管数据中心extra_id1 = "3"，改为从vw_machinery_room_dh的building_name获取
					o_special_field19 = Util.getTempV(roomList,10); // building_name
					o_special_field1	= Util.getTempV(roomList,2);
					o_corr_str = Util.getTempV(roomList, 6);
					o_type_keycode = Util.getTempV(roomList,7);
					o_object_level = Util.getTempV(roomList,8);
					log.info(o_fp0+"  o_object_level :"+o_object_level);
				}
				else{
					o_special_field1="";
					o_corr_str="";
				}
			}
			else
			{
				o_special_field1="";
				o_corr_str="";
			}
			////liucaiyong@20181211,动环对象级别映射告警辅助字段
			//if(o_object_level in ["47","48","49","50","51"]){
			//	o_alarm_explanation_addition = "通信基站";
			//}else if(o_object_level in ["41","42"]){
			//	o_alarm_explanation_addition = "通信机楼";
			//}else if(o_object_level in ["43","44","45","46"]){
			//	o_alarm_explanation_addition = "传输节点";
			//}else{
			//	o_alarm_explanation_addition = "传输节点";
			//}
			//dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
		}

		//if(o_omc_id == "6101")   //因移动视频侦测告警没有标识，扩展成动环专业
		if (o_professional_type=="4")
		{
			o_ne_label  = o_eqp_label;

			o_extra_id1 = "2" ;
			// String reg1=new String("广东南方通信大厦".getBytes(),"GBK");
			// String reg2=new String("广东东兴大厦".getBytes(),"GBK");
			// String reg3=new String("广东全球通大厦".getBytes(),"GBK");
			// String reg4 = new String("广州天河区新全球通大厦".getBytes(), "GBK");
			String reg5 = new String("广州黄埔区凤凰三横路中国移动A2栋".getBytes(), "GBK");
			String reg6 = new String("广州黄埔区凤凰三横路中国移动A3栋".getBytes(), "GBK");
			// if (o_special_field19 != null &&(o_special_field19==reg1|| o_special_field19==reg2|| o_special_field19==reg3))
			// {
				// o_extra_id1 = "1" ;
			// } else if (o_special_field19 != null && (o_special_field19 == reg4 || o_special_field19 == reg5 || o_special_field19 == reg6)) {
			if (o_special_field19 != null && (o_special_field19 == reg5 || o_special_field19 == reg6)) {
			  // 省管数据中心
			  o_extra_id1 = "3";
			  }
			o_alarm_content = o_ne_label ;
		}
		if(o_omc_id == "2601" )
		{
			o_alarm_content = o_ne_label ;
		}


		if (o_vendor_id == "81" )
		{
			o_vendor_name     = "";
			o_ne_label        = o_alarm_content;
			o_eqp_label       = o_alarm_content;
			o_eqp_object_class= o_object_class;
			o_alarm_resource_status = "1";
			o_ne_status       = "1";
			o_alarm_source    = "1";
			o_alarm_ne_status = "1";
			o_resource_status =  "1";
			o_province_id     = "-1489894494";
			o_province_name   = "";
			o_org_type        = "2";
		}

		//o_locate_info = i_LocateInfo;
		if(o_professional_type!="3" || o_omc_id !="6607"){
			if(o_send_jt_flag == null ||  o_send_jt_flag == ""){
				o_send_jt_flag = "0";
			}
		}

			/**
				 * 20200429 杨晓敏：去掉这段上报集团逻辑   by liucaiyong
		String tmp_key_value;
		String tmp_field_value;
		String tmp_vendor_severity;
		if (o_vendor_id == "1")
		{
			tmp_key_value = o_title_text;
			tmp_vendor_severity =o_org_severity;
		}
		else if (o_vendor_id == "8" || o_vendor_id == "7")
		{
			tmp_key_value = o_probable_cause;
			tmp_vendor_severity =o_org_severity;
		}
		else if(o_omc_id in  ["6101","6102"])
		{
			tmp_key_value = o_standard_alarm_id;
		}
		//LTE性能告警的redefine不需要重置，by shichao@20151027
		if(o_org_type=="2"	&&	o_object_class in ["8101","8102","8103","8105","270","8107","8109","10003"]){
			tmp_key_value = null;
		}

		if(tmp_key_value!=null && tmp_key_value!="" && o_vendor_id!=null && tmp_key_value!="WNMS-SYNC EAW NE FAIL")
		{
			String cur_redefine_type = "0";
			String key = "tfa_alarm_redefine_list:"+o_vendor_id+":"+o_eqp_object_class+":"+cur_redefine_type+":"+tmp_key_value;
			Object[] redefines = util.getObject(this.CUSTOMCACHE, key,"tfa_alarm_redefine_list.1");
			List redefineList = redefines==null?null:Arrays.asList(redefines);
			if(redefineList!=null&&!redefineList.isEmpty())
			{
				tmp_field_value=Util.getTempV(redefineList, 0);
			}
			if (tmp_field_value != null && tmp_field_value != "")
			{
				o_redefine_type = tmp_field_value;
			}
			else
			{
				o_redefine_type = o_org_type;
			}

			cur_redefine_type = "1";
			String redefinkey =this.joinKey("tfa_alarm_redefine_list",o_standard_alarm_id, o_vendor_id,o_eqp_object_class,cur_redefine_type,tmp_key_value+"");
			Object[] redefine2 = util.getObject(this.CUSTOMCACHE, redefinkey,"tfa_alarm_redefine_list.2");
			List redefineList2 = redefine2==null?null:Arrays.asList(redefine2);
			if(redefineList2!=null&&!redefineList2.isEmpty())
			{
				tmp_field_value=Util.getTempV(redefineList2, 0);
			}
			if (tmp_field_value != null && tmp_field_value != "")
			{
				if( o_tmsc_cat == "100" ){
					//[20121210][add]国际局 告警全部不上报集团
					o_send_jt_flag = "0";
					log.debug(o_fp0+" 国际局告警不上报集团: object_class="+o_object_class+" tmsc_cat="+o_tmsc_cat);
				}
				if( tmp_field_value == "98" || tmp_field_value == "97"){
					//[20131104][add]send_jt_flag不等于1,3的值不在枚举值中，默认复制成0
					o_send_jt_flag = "0";
				}
				else{
					o_send_jt_flag = tmp_field_value;
				}
			}
			//update by mhy standard_alarm_id值长度大于12时在进行逻辑否则java报错
			if(o_omc_id in ["6101","6102"] && o_standard_alarm_id.toString().length()>12)
			{
				//sql="SELECT msg_field_value FROM tfa_alarm_redefine_list WHERE is_valid=1 AND redefine_type=1 AND vendor_id = 61 AND standard_alarm_id = substr('" + o_standard_alarm_id + "',12)";
				//list=Util.queryByHSql(sql);
				String tmp = o_standard_alarm_id.toString().substring(12, o_standard_alarm_id.toString().length());
				int tmpLenth = tmp.length();
				switch(tmpLenth)
				{
					case 5:
						tmp ="0"+tmp;
						break;
					case 4:
						tmp="00"+tmp;
						break;
					case 3:
						tmp="000"+tmp;
						break;
					case 2:
						tmp="0000"+tmp;
						break;
					default:
						tmp=tmp;
				}
				String redKey = "tfa_alarm_redefine_list:"+tmp;
				Object[] red = util.getObject(CUSTOMCACHE, redKey,"tfa_alarm_redefine_list.0");
				List redList = red==null?null:Arrays.asList(red);
				if(redList!=null&&!redList.isEmpty())
				{
					tmp_field_value = Util.getTempV(redList, 0);
				}
				if (tmp_field_value != null && tmp_field_value != "")
				{
					o_send_jt_flag = tmp_field_value;
					def sqlStr,tmp_juzhan_type_flag;
					if(StringUtils.isNotBlank(o_special_field11) &&StringUtils.isNotBlank(tmp_field_value)){
						//sqlStr="select a.power_type from nrmdb.vw_machinery_room_dh a where a.room_name='"+o_special_field11+"'";
						//list=Util.queryBySql("nmosdb", sqlStr);
						String roomkey="vw_machinery_room_dh:"+o_special_field11;
						Object[] room = util.getObject(CUSTOMCACHE, roomkey,"nrmdb.vw_machinery_room_dh");
						List roomList = room==null?null:Arrays.asList(room);
						tmp_juzhan_type_flag=Util.getTempV(roomList,0);
						//if(tmp_juzhan_type_flag == "14")
						if(tmp_juzhan_type_flag in ["节点","一级汇聚节点","二级汇聚节点"])
						{
							o_send_jt_flag="0";
						}
					}
				}
			}
		}
		**/
		if (o_omc_id in ["6101","6102"] &&o_severity_keycode=="40")
		{

			if (o_extra_id1=="1" )
			{
				o_city_id = "1628882058";
				o_city_name = "广州";
				o_region_id = "609737586";

				if (o_standard_flag=="2")
				{
					o_province_process_flag="1";
					o_department_process_flag="3";
				}
				else
				{
					o_province_process_flag="1";
					o_department_process_flag="";
				}
			}
			else
			{
				o_province_process_flag="2";
				if (o_standard_flag=="2")
				{
					if (o_org_severity=="1")
					{
						o_department_process_flag="1";
					}
				}
				else
				{
					o_department_process_flag="";
				}
			}
		}
		//动环，仅上报站点类别是机楼的告警,update by liucaiyong@2013101720
		if (o_omc_id in ["6101","6102"]&&o_special_field9!="机楼")
		{
			o_send_jt_flag	=	"0";
		}

		if(o_vendor_id == "1" && o_eqp_object_class == "130" && o_title_text == "SWITCHING NETWORK TERMINAL FAULT")
		{
			def testFlag =  o_alarm_text =~/\n[ \t]*:EXTP\s+MG[^\n]*\n[ \t]*\S+[ \t]+(\w{2})/;
			if(testFlag.size()>0)
			{
				o_extra_string1 = testFlag[0][1] ;
			}
		}

		if(o_title_text=="小区退服(BCCH=0)" ||o_title_text=="[(BCCH=0)衍生告警]基站退服"||o_alarm_title =="669991" ||o_alarm_title =="669992" )
		{
			o_ne_label = i_ne_label;
			if (StringUtils.isBlank(o_ne_label))
			{
				o_ne_label = o_ne_alias;
			}
		}

				//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
		//汛期标工(话音无线),shanchunlan@20140512
		//if(o_object_class in ["201", "300"])
		//{
		//    //GSM无线
		//    o_severity_keycode="5274";
		//}
		//else if(o_object_class in ["9201", "9300"])
		//{
		//    //TD无线
		//    o_severity_keycode="5275";
		//}
		//else if(o_object_class in ["8104", "8105","41011","270"])
		//{
		//    //LTE无线
		//    o_severity_keycode="5276";
		//}
		//else if(o_object_class=="11004")
		//{
		//    //直放站
		//    o_severity_keycode="5277";
		//}
		//else if(o_omc_id=="1502")
		//{
		//    //wlan,shanchulan@20140721--调整o_severity_keycode以应急标工
		//    o_severity_keycode="150";
		//}

		//统一采集传输告警,5+2
		if(o_professional_type == "3")
		{
			//杰鑫二干光缆中断告警，告警正文加路由信息
			if(o_nms_name == "OLPScape" && o_title_text in ["EDFA/RFA输入光功率告警","OLP R1告警","OLP R2告警"]){
				int pos=0;
				pos = o_alarm_text.indexOf("nativeEMSName:")+14;
				String tmp="";
				if(pos>0){
					tmp += ",设备="+o_alarm_text.substring(pos,o_alarm_text.substring(pos).indexOf('\n')+pos);
					o_eqp_alias = o_alarm_text.substring(pos,o_alarm_text.substring(pos).indexOf('\n')+pos);
				}
				pos = o_alarm_text.indexOf('Path=')+5;
				if(pos>0){
					tmp += ",路由="+o_alarm_text.substring(pos,o_alarm_text.substring(pos).indexOf(':')+pos);
					o_site_info = o_alarm_text.substring(pos,o_alarm_text.substring(pos).indexOf(':')+pos);
				}

				if(StringUtils.isNotBlank(tmp)){
					o_extra_string3 += tmp;
				}
			}
			//20190329 保留GCP告警原文
			//o_alarm_text	=		"告警标题="		+	o_title_text;
			//o_alarm_text	+=	"\n告警解释="	+	o_alarm_explanation;
			//o_alarm_text	+=	"\n发生时间="	+	o_event_time;
			//o_alarm_text	+=	"\n城市="			+	o_city_name;
			//o_alarm_text	+=	"\n专业网管名称="	+	o_ems_id;
			//o_alarm_text	+=	"\n告警定位对象="	+	o_ne_label;
			//o_alarm_text	+=	"\n网元名称="	+	o_eqp_label;
			//o_alarm_text	+=	"\n设备厂家="	+	o_vendor_name;
		}

		this.bscStatus();
	}

	/**
	 * 自身告警处理
	 */
	private void processWNMSReal()
	{
	  //WNMS-REAL and WNMS-SYNC
	  String wnmsReal = "WNMS-REAL:";
	  String wnmsSync = "WNMS-SYNC:";
		if(o_title_text.toString().indexOf(wnmsReal)==0 || o_title_text.toString().indexOf(wnmsSync)==0)
		{
			o_object_class    = object_class;
			o_standard_flag   = "2";
			o_professional_type="1";
			o_resource_status = o_ne_status;
			o_eqp_int_id      = o_int_id;
			o_eqp_alias       = o_ne_alias;
			o_eqp_label       = o_ne_label;
			o_eqp_object_class= o_object_class;
			o_alarm_ne_status = o_alarm_resource_status;
			o_alarm_content   = o_eqp_label;
		}
		//罗成：亿阳自监控告警，设定 厂家改成亿阳 , added by liucaiyong@2013111821,
		//if(o_alarm_title in ["9729157","99","98","9645541","2112590","15199965","1517773","15199964","15199966","2167081","26441660","26445340"])
		//if(o_title_text in ["WNMS-REAL:告警采集源连接失败","WNMS-REAL:告警采集源长时间无心跳信号","WNMS-SYNC:连接NE失败","WNMS-SYNC:获取厂家设备告警失败","WNMS-SYNC:综合监控数据库连接或执行相关SQL失败","WNMS-SYNC:登录OSS/OMC/EMS账号密码过期","WNMS-ALARM:上报集团活动未标工告警数量已超过阀值且对后续上报告警自动标工","WNMS-SYNC:连接OSS/OMC/EMS失败","WNMS-SYNC:获取设备告警失败","WNMS-SYNC:连接综合监控数据库失败","[alarmdata][采集机和厂家连接中断]","[alarmdata][厂家长时间无告警]"])
		//{
		//	o_vendor_id = "150";
		//	o_vendor_name="亿阳";
		//}
		//GCP-OMC断链 by shanchunlan@20150623
		if(o_alarm_title in ["99","98","26441660","26445340"] && o_object_class == "100") {
			String info="\nOMC名称：";
			String tmpkey = this.joinKey("objects", o_int_id);
			String task = "objects";
			Map map = this.getObjectsValueWithMap(tmpkey,task);
			if(map.size()>0)
			{
				o_tmsc_cat = map.get("tmsc_cat");
				info += StringUtils.isNotBlank(map.get("zh_label"))?map.get("zh_label"):map.get("userlabel");
			}
			info+="\nOMC_IP：";

			tmpkey = this.joinKey("omcfunction", o_int_id);
			task = "omcfunction";
			o_severity_keycode = "";
			Object[] objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tmpkey,task);
			List list = objects == null ? null : Arrays.asList(objects);
			if (list != null && !list.isEmpty()) {
				info+=Util.getTempV(list, 2);
				//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
				//o_severity_keycode = Util.getTempV(list, 3);
			}

			info+="\n业务类型：";
			tmpkey 	= this.joinKey("tia_alarm_dict",o_tmsc_cat,"50");
			task 	= "tia_alarm_dict.2";
			objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tmpkey,task);
			list = objects == null ? null : Arrays.asList(objects);
			if (list != null && !list.isEmpty()) {
				info+=Util.getTempV(list, 2);
			}

						//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
			//if(o_severity_keycode == "1"){
			//    o_severity_keycode = "201";
			//}else if(o_network_type == "2"){
			//    o_severity_keycode = "202";
			//}else{
			//    o_severity_keycode = "0";
			//}
			info+="\n管理类型：";
			tmpkey 	= this.joinKey("tia_alarm_dict",o_severity_keycode,"1002");
			task 	= "tia_alarm_dict.2";
			objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tmpkey,task);
			list = objects == null ? null : Arrays.asList(objects);
			if (list != null && !list.isEmpty()) {
				info+=Util.getTempV(list, 2);
			}
			o_alarm_text += info;
			o_professional_type = "5";
		}
		if(o_alarm_title in ["26441660","26445340"] && o_object_class == "100") {
			o_title_text = o_title_text.replace("alarmdata", "统一采集");
		}
		String info="";
		if(o_title_text.startsWith("[网管监控]")){
			info+="\n1.检查sc（gcp）的采集进程和日志：是否为采集进程异常导致？";
			info+="\n2.检查rt进程和日志：解析进程异常导致？查询数据库异常导致？解析字段异常导致？";
			info+="\n3.检查JFM进程日志：JFM进程异常，JFM字段解析，响应MQ队列满？";
			info+="\n4.检查入库writefm日志，确定writefm进程以及入库失败";
		}else if(o_alarm_title == "98"){//WNMS-REAL:告警采集源连接失败
			info+="\n1.daladmin用户登陆采集机（根据OMC_ID和采集台账确认采集机IP，以及采集通道等等）";
			info+="\n2.进入采集日志目录:/opt/BOCO.DAL/NFM/LOG/{日期}/{小时}/scollector(sun平台，则为/opt/BOCO.DAL/NFM/bin/log/SCollectorLog_85021111)";
			info+="\n3.查看data日志，检测可能导致连接失败的原因，如账号密码问题，网络问题";
			info+="\n4.根据SC配置，检测可能导致连接失败的原因，如账号密码问题，网络问题";
		}else if(o_alarm_title == "99"){//WNMS-REAL:告警采集源长时间无心跳信号
			info+="\n1.daladmin用户登陆采集机（根据OMC_ID和采集台账确认采集机IP，以及采集通道等等）";
			info+="\n2.确定SC检测参数配置（no_alarm_second:时间（秒）;no_alarm_ta:心跳信号字符串）";
			info+="\n3.进入采集日志目录:/opt/BOCO.DAL/NFM/LOG/{日期}/{小时}/scollector(sun平台，则为/opt/BOCO.DAL/NFM/bin/log/SCollectorLog_85021111)";
			info+="\n4.查看data日志，检测可能导致长时间无心跳信号的原因，如账号密码问题，网络问题";
			info+="\n5.根据SC配置，检测可能导致长时间无心跳信号的原因，如账号密码问题，网络问题";
		}
		if(StringUtils.isNotBlank(info)){
			o_alarm_text+="\n"+info;
		}
	}

	/**
	 * 从objects表中查询资源
	 */
	private void AddResourceInfo()
	{
			//if(o_network_type_top=="20"){
		//	return;
			//}
		String key="objects:"+o_int_id;
		Object[] objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects");
		List list= objects == null ? null : Arrays.asList(objects);
		if(list!=null&& !list.isEmpty())
		{
			//o_vendor_id   = Util.getTempV(list,1);
			//nfv不赋值厂家ID by wangyingfeng, liucaiyong@20191114
			if(o_network_type_top!="20"){
				o_vendor_id   = Util.getTempV(list,1);
			}
			//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
			//o_severity_keycode = Util.getTempV(list,2);
			o_tmsc_cat    = Util.getTempV(list,3);
			o_stp_cat     = Util.getTempV(list,4);
			o_ne_status   = Util.getTempV(list,5);
			o_ne_alias    = Util.getTempV(list, 6);
			o_ne_location = Util.getTempV(list,7);
			o_city_id     = Util.getTempV(list,8);
			o_province_id = Util.getTempV(list,9);
			o_ne_label    = Util.getTempV(list, 10)==""?o_ne_alias:Util.getTempV(list, 10);
			//o_eqp_int_id= Util.getTempV(list,11);
			t_related_bsc = Util.getTempV(list,12);
			t_related_omc = Util.getTempV(list,13);
			o_eqp_version = Util.getTempV(list,14);
			object_class  = Util.getTempV(list,17);

			if(o_object_class in ["300","9300","8105","270","3300"]){
				o_ParentIntId = Util.getTempV(list,11);
			}
			o_business_type = Util.getTempV(list,24);
			if(StringUtils.isNotBlank(o_business_type)){
				o_business_type = (o_business_type.length()<2 ? "100":"10") + o_business_type;
			}
		}
		this.addVendorName(o_vendor_id);
		this.addRegionInfo(o_city_id,o_city_name);
		if(StringUtils.isBlank(o_professional_type))
		{
			o_professional_type="1";
		}


		if(o_org_type=="2" && o_object_class in ["130","131","200","108","102","8101","8102","8103","8107","8109","81091","121","122","124"]){
			String key_sn="short_name:"+o_int_id;
			Object[] neSName = util.getObject(this.CUSTOMCACHE, key_sn,"short_name");
			List nmlist = neSName==null?null:Arrays.asList(neSName);
			if(nmlist!=null&&!nmlist.isEmpty()){
				o_extra_string1 = Util.getTempV(nmlist, 2);
				log.info(o_fp0+ " get short_name o_extra_string1["+o_extra_string1+"]");
			}
		}
	}
	/**
	 * 从告警信息中提前更新int_id
	 */
	private void PreCookIntid()
	{
		//
		//o_special_field13="460-00-11400";
		//log.info(o_fp0+" pre set int_id :"+o_vendor_id+" "+o_org_type+" "+o_title_text+" "+o_alarm_text);
		if(o_vendor_id == "8" && o_org_type == "2" && o_title_text == "同类告警数量超出门限")
		{
			//o_special_field13 已存IP地址
			if((o_alarm_text.contains("告警名称=用户面承载链路故障告警") || o_alarm_text.contains("告警名称=SCTP链路故障告警")  )
					&& StringUtils.isNotBlank(o_special_field13) )
			{
				Object[] ips = util.getObject(CUSTOMCACHE, "myWixianEnodebIP:"+o_special_field13 ,"wuxianInfomationFiveByIP");
				List iplst = ips==null?null:Arrays.asList(ips);
				if(iplst!=null&&!iplst.isEmpty()){
					o_int_id = Util.getTempV(iplst, 1);
					o_org_type = "1";
					this.PreCookEqp();
					log.info(o_fp0+" preset int_id :"+o_int_id);
				}
			}

			//log.info(o_fp0+" preset int_id(o_special_field13) :"+o_special_field13);
			//o_special_field13 已存IP地址
			if(o_alarm_text.contains("告警名称=X2接口故障告警") && StringUtils.isNotBlank(o_special_field13) )
			{
				Object[] ips = util.getObject(CUSTOMCACHE, "myWixianEnodebEnbId:"+o_special_field13 ,"wuxianInfomationFiveBYENBID");
				List iplst = ips==null?null:Arrays.asList(ips);
				if(iplst!=null&&!iplst.isEmpty()){
					o_int_id = Util.getTempV(iplst, 1);
					o_org_type = "1";
					this.PreCookEqp();
					log.info(o_fp0+" preset int_id(enbid) :"+o_int_id);
				}
			}

		}
	}


	/**
	 * 提前更新object_class eqp_obj_class
	 */
	private void PreCookEqp()
	{
		String key="objects:"+o_int_id;
		Object[] objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects");
		List list= objects == null ? null : Arrays.asList(objects);
		if(list!=null&& !list.isEmpty())
		{
			o_object_class=Util.getTempV(list,17);
			o_eqp_object_class=o_object_class;
			o_eqp_int_id=Util.getTempV(list,11);
			o_eqp_label=Util.getTempV(list, 6);
		}
	}

	/**
	 * 告警标题翻译
	 */
	private void alarmTitleTranslate()
	{
		if(o_title_text in ["WNMS-REAL:告警采集源连接失败","WNMS-REAL:告警采集源长时间无心跳信号","WNMS-SYNC:连接NE失败","WNMS-SYNC:获取厂家设备告警失败","WNMS-SYNC:综合监控数据库连接或执行相关SQL失败","WNMS-SYNC:登录OSS/OMC/EMS账号密码过期","WNMS-ALARM:上报集团活动未标工告警数量已超过阀值且对后续上报告警自动标工","WNMS-SYNC:连接OSS/OMC/EMS失败","WNMS-SYNC:获取设备告警失败","WNMS-SYNC:连接综合监控数据库失败","[alarmdata][采集机和厂家连接中断]","[alarmdata][厂家长时间无告警]"])
		{
			o_vendor_id = "150";
			o_vendor_name="亿阳";
		}
		if(StringUtils.isBlank(o_vendor_id)) {
			o_vendor_id = "150";
		}
		String titleText= o_title_text;
		if(StringUtils.isBlank(titleText)) {
			titleText = "null";
		}

		if(o_sub_alarm_type=="967" || o_alarm_title in ["28864770","28864769"]){//解决地市关注事件厂家,liucaiyong@20170619
			o_vendor_id = "150";
			o_vendor_name="亿阳";
		}

		//因原tfu_alarm_title有重复title_id,增加根据vendor_id区别
		//if ((StringUtils.isBlank(o_alarm_title)||o_alarm_title=="0") && StringUtils.isNotBlank(o_title_text)) {
		//String key = "tfu_alarm_title:" + titleText + ":" + o_vendor_id;
		String key = "tfu_alarm_title@" + titleText + "@" + o_vendor_id;
		Object[] title  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,"gd.tfu_alarm_title");
		List titleList = title == null ? null : Arrays.asList(title);
		if (titleList != null && !titleList.isEmpty()) {
			o_alarm_title=Util.getTempV(titleList, 0);
		}else{
			String insertTileSql = "select nmosdb.get_title_id(" + o_vendor_id + ",'" + titleText + "') alarm_title from dual";
			List titlelist = Util.queryBySql(insertTileSql);
			if(titlelist != null && !titlelist.isEmpty()) {
				o_alarm_title = Util.getTempV(titlelist, 0);
				this.setTitleCache(o_alarm_title, titleText, o_vendor_id);
			}
		}
		log.debug("tfu_alarm_title-fp0={}, key={}, alarm_title={}", o_fp0, key, o_alarm_title);
		//}
	}

	private void setTitleCache(String titleId, String titleText, String vendorId) {
		Object value = new Object[3];
		value[0] = titleId;
		value[1] = titleText
		value[2] = vendorId
		// String key = "tfu_alarm_title:" + titleText + ":" + vendorId;
		String key = "tfu_alarm_title@" + titleText + "@" + vendorId;
		// Cache cache = util.getCache(SimpleFindUtil.CUSTOM_CACHE);
		// Cache cache = util.getObject(SimpleFindUtil.CUSTOM_CACHE);
		// Element element = new Element(key, value);
		// cache.put(element);
		// util.put(key, value, SimpleFindUtil.CUSTOM_CACHE);
		util.put(key, value);
		log.debug("setTitleCache-fp0={}, key={}, value={}", o_fp0, key, value);
	}

	/**
	 * eoms_network_type字段处理
	 */
	private void setEomsNetWorkType()
	{
	}

	//order by decode(temp_status,4,99,1,98,5,97,3,96,6,95,2,94,93),temp_status_time1 desc";
	//order by decode(temp_status,15,80,4,94,1,95,5,96,3,97,6,98,2,99,12,100,13,101,14,102,110)
	//网元工程EOMS工单优先级关系 add by wujian at 20130730
	//返回值 -1:优先级低  0:优先级相等  1:优先级高
	private int compareProjectStatusSort(String prj1, String start1, String prj2, String start2) {
		try {
			int stt1 = Integer.parseInt(prj1);
			int stt2 = Integer.parseInt(prj2);
			switch(stt1) {
				case 15:stt1=110;break;
				case 17:stt1=100;break;
				case 4:stt1=99;break;
				case 1:stt1=98;break;
				case 5:stt1=97;break;
				case 3:stt1=96;break;
				case 6:stt1=95;break;
				case 2:stt1=94;break;
				case 12:stt1=93;break;
				case 13:stt1=92;break;
				case 14:stt1=91;break;

				default: stt1=90;
			}
			switch(stt2) {
				case 15:stt2=110;break;
				case 17:stt2=100;break;
				case 4:stt2=99;break;
				case 1:stt2=98;break;
				case 5:stt2=97;break;
				case 3:stt2=96;break;
				case 6:stt2=95;break;
				case 2:stt2=94;break;
				case 12:stt2=93;break;
				case 13:stt2=92;break;
				case 14:stt2=91;break;

				default: stt2=90;
			}
			if (stt1<stt2) {
				return -1;
			}
			if (stt1>stt2) {
				return 1;
			}
			return start1.compareTo(start2);

		} catch (Exception ex) {}
		return -1;
	}
	private int compareProjectStatusSort(String prj1, Date start1, String prj2, Date start2) {
		try {
			int stt1 = Integer.parseInt(prj1);
			int stt2 = Integer.parseInt(prj2);
			switch(stt1) {
				case 15:stt1=110;break;
				case 17:stt1=100;break;
				case 4:stt1=99;break;
				case 1:stt1=98;break;
				case 5:stt1=97;break;
				case 3:stt1=96;break;
				case 6:stt1=95;break;
				case 2:stt1=94;break;
				case 12:stt1=93;break;
				case 13:stt1=92;break;
				case 14:stt1=91;break;

				default: stt1=90;
			}
			switch(stt2) {
				case 15:stt2=110;break;
				case 17:stt2=100;break;
				case 4:stt2=99;break;
				case 1:stt2=98;break;
				case 5:stt2=97;break;
				case 3:stt2=96;break;
				case 6:stt2=95;break;
				case 2:stt2=94;break;
				case 12:stt2=93;break;
				case 13:stt2=92;break;
				case 14:stt2=91;break;

				default: stt2=90;
			}
			if (stt1<stt2) {
				return -1;
			}
			if (stt1>stt2) {
				return 1;
			}
			return start1.compareTo(start2);

		} catch (Exception ex) {}
		return -1;
	}

	private boolean emgProjectStatus(){
		String preStatus ="-1";
		String preReport ="";
		String preOptType="";
		String preStart  ="";
		String queryKey  = this.joinKey("tts_task_ne_detail2:emg", o_corr_str,o_severity_keycode);
		List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_emg");
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<5) {
					break;
				}
				List olist = Arrays.asList(result);
				String prjStatus = Util.getTempV(olist, 0);
				String prjReport = Util.getTempV(olist, 1);
				String prjOptType= Util.getTempV(olist, 2);
				String prjStart  = Util.getTempV(olist, 3);
				String prjEnd    = Util.getTempV(olist, 4);
				if (prjStart==null || prjStart=="") {
					continue;
				}
				if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
					if (getDate(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDate(prjEnd).compareTo(event_time)>=0)) {
						preStatus = prjStatus;
						preReport = prjReport;
						preOptType= prjOptType;
					}
				}
			}
			if (preStatus!="-1") {
				o_alarm_ne_status=preStatus;
				o_special_field16=preReport;
				o_special_field3 =preOptType;
				o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
				return true;
			}
		}
		return false;
	}

	private boolean queryProjectStatusList(List list){
		String preStatus ="-1";
		String preReport ="";
		String preOptType="";
		String preStart  ="";

		list.each{
			Map map = it;
			String task=map.get("task");
			String key=map.get("key");
			String related=map.get("related");
			String wage=map.get("wage");

			if(StringUtils.isBlank(task)){
				task = "nrmdb.tts_task_ne_detail2_common";
			}
			if(StringUtils.isBlank(related)){
				related = "0";
			}
			if(StringUtils.isBlank(wage)){
				wage = "100";
			}

			String prjStatus ="-1";
			String prjReport ="";
			String prjOptType="";
			String prjStart="";
			String prjEnd="";

			List results = (List)util.getObject(this.CUSTOMCACHEHour,key,task);
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<5) {
						break;
					}
					List olist = Arrays.asList(result);
					prjStatus = Util.getTempV(olist, 0);
					prjReport = Util.getTempV(olist, 1);
					prjOptType= Util.getTempV(olist, 2);
					prjStart  = Util.getTempV(olist, 3);
					prjEnd    = Util.getTempV(olist, 4);
					String rel = Util.getTempV(olist, 12);

					if (prjStart==null || prjStart=="" || prjStart.compareTo(o_event_time)>0 || (StringUtils.isNotBlank(prjEnd) && prjEnd.compareTo(o_event_time)<0)||"1".equals(related) && !rel.equals(related)) {
						prjStatus = "-1";
						continue;
					}
					break;
				}
			}

			//比较
			if(prjStatus!="-1" && compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0){
				preStatus = prjStatus;
				preReport = prjReport;
				preOptType= prjOptType;
				log.debug("queryProjectStatusList-fp0={}, event_time={}, results=[{}, {}, {}, {}, {}]", o_fp0, o_event_time, prjStatus, prjReport, prjOptType, prjStart, prjEnd);
			}
		}
		if (preStatus!="-1") {
			o_alarm_ne_status=preStatus;
			o_special_field16=preReport;
			o_special_field3 =preOptType;
			o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
			// log.debug("queryProjectStatusList-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, key, results);

			return true;
		}
		return false;
	}

	//通用的INT_ID键值查询缓存内的网元临时工程状态 add by wujian at 20130730
	private boolean queryProjectStatusFromCache(String neIntId) {
		String preStatus ="-1";
		String preReport ="";
		String preOptType="";
		String preStart  ="";
		String queryKey  = "tts_task_ne_detail2:common:"+neIntId;
		List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_common");
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<5) {
					break;
				}
				List olist = Arrays.asList(result);
				String prjStatus = Util.getTempV(olist, 0);
				String prjReport = Util.getTempV(olist, 1);
				String prjOptType= Util.getTempV(olist, 2);
				String prjStart  = Util.getTempV(olist, 3);
				String prjEnd    = Util.getTempV(olist, 4);
				log.debug("queryProjectStatusFromCacheIntid_cache-fp0={}, prjStatus={}, prjReport={}, prjOptType={}, prjStart={}, prjEnd={}", o_fp0, prjStatus, prjReport, prjOptType, prjStart, prjEnd);
				if (prjStart==null || prjStart=="") {
					continue;
				}
				if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
					//if (prjStart.compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||prjEnd.compareTo(event_time)>=0)) {
					if (getDate(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDate(prjEnd).compareTo(event_time)>=0)) {
						preStatus = prjStatus;
						preReport = prjReport;
						preOptType= prjOptType;
					}
				}
				if (preStatus!="-1") {
				    log.debug("queryProjectStatusFromCacheIntid-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
				}
			}
			//log.debug(o_fp0+" queryProjectStatusFromCache——preStatus："+preStatus);
			if (preStatus!="-1") {
				o_alarm_ne_status=preStatus;
				o_special_field16=preReport;
				o_special_field3 =preOptType;
				o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
				//log.debug(o_fp0+" queryProjectStatusFromCache.key1(has):"+queryKey);
				// log.debug("queryProjectStatusFromCacheIntid-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, results);
				return true;
			}
		}
		//log.debug(o_fp0+" queryProjectStatusFromCache.key1(not):"+queryKey);
		return false;
	}
	//通过region_id查标工表获取工程信息
	private boolean LTEtuoguanProjectStatusList(String region_id) {
		String preStatus ="-1";
		String preReport ="";
		String preOptType="";
		String preStart  ="";
		String queryKey  = "nrmdb.tts_task_ne_detail2_4Gtuoguan:"+region_id;
		List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_4Gtuoguan");
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<5) {
					break;
				}
				List olist = Arrays.asList(result);
				String prjStatus = Util.getTempV(olist, 0);
				String prjReport = Util.getTempV(olist, 1);
				String prjOptType= Util.getTempV(olist, 2);
				String prjStart  = Util.getTempV(olist, 3);
				String prjEnd    = Util.getTempV(olist, 4);
				if (prjStart==null || prjStart=="") {
					continue;
				}
				if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
					//if (prjStart.compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||prjEnd.compareTo(event_time)>=0)) {
					if (getDate(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDate(prjEnd).compareTo(event_time)>=0)) {
						preStatus = prjStatus;
						preReport = prjReport;
						preOptType= prjOptType;
					}
				}
				if (preStatus!="-1") {
				    log.debug("LTEtuoguanProjectStatusList-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
				}
			}
			//log.debug(o_fp0+" queryProjectStatusFromCache——preStatus："+preStatus);
			if (preStatus!="-1") {
				o_alarm_ne_status=preStatus;
				o_special_field16=preReport;
				o_special_field3 =preOptType;
				o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
				//log.debug(o_fp0+" queryProjectStatusFromCache.key1(has):"+queryKey);
				// log.debug("LTEtuoguanProjectStatusList-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, results);
				return true;
			}
		}
		//log.debug(o_fp0+" queryProjectStatusFromCache.key1(not):"+queryKey);
		return false;
	}


	//通用的OMC_ID查询割接重启 add by fuwei at 20150820
	//omc正常 返回0 否则返回状态值 16:OMC割接  17：OMC重启
	private String  queryOmcStatusFromCache(String omcId) {
		String preStatus ="-1";
		String preReport ="";
		String preOptType="";
		String preStart  ="";
		String ret="0";
		String queryKey  = "tts_task_ne_detail2:common:"+omcId;
		List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_common");
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<5) {
					break;
				}
				List olist = Arrays.asList(result);
				String prjStatus = Util.getTempV(olist, 0);
				String prjReport = Util.getTempV(olist, 1);
				String prjOptType= Util.getTempV(olist, 2);
				String prjStart  = Util.getTempV(olist, 3);
				String prjEnd    = Util.getTempV(olist, 4);
				if (prjStart==null || prjStart=="") {
					continue;
				}
				//if (prjStart.compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||prjEnd.compareTo(event_time)>=0)) {
				if ( prjStatus in ["16","17"] && getDate(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDate(prjEnd).compareTo(event_time)>=0)) {
					ret=prjStatus;
					preReport = prjReport;
					preOptType= prjOptType;
				}
			}
		}
		//log.info(o_fp0+" queryKey:"+queryKey+" omcid:"+omcId+" prjStatus:"+ret);
		if(ret == "17"){
			o_special_field16=preReport;
			o_special_field3 =preOptType;
			o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
		}
		return ret;
	}

	//网元归属父的网元临时工程状态特殊查询逻辑 add by wujian at 20130730
	private boolean queryProjectStatusFromCache(String eqpIntId, String neClass) {
		if (o_ne_label==null || o_ne_label=="") {
			//log.debug(o_fp0+" queryProjectStatusFromCache.key2(not): ne_label is empty");
			return false;
		}
		String preStatus ="-1";
		String preReport ="";
		String preOptType="";
		String preStart  ="";
		String preNeName ="";
		String queryKey  = "tts_task_ne_detail2:chuanshu:"+neClass+":"+eqpIntId;
		List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_shuju");
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<6) {
					break;
				}
				List olist = Arrays.asList(result);
				String prjStatus = Util.getTempV(olist, 0);
				String prjReport = Util.getTempV(olist, 1);
				String prjOptType= Util.getTempV(olist, 2);
				String prjStart  = Util.getTempV(olist, 3);
				String prjEnd    = Util.getTempV(olist, 4);
				String prjNeName = Util.getTempV(olist, 5);

				if (prjStart==null || prjStart=="" || prjNeName==null || prjNeName=="") {
					continue;
				}

				if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
					//log.debug("baaaaaa:prjStart"+prjStart.toString()+" prjEnd:"+prjEnd.toString()+" event_time:"+event_time);
					if (getDate(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDate(prjEnd).compareTo(event_time)>=0)) {
						if (o_ne_label.indexOf(prjNeName)>=0) {
							preStatus = prjStatus;
							preReport = prjReport;
							preOptType= prjOptType;
							preNeName = prjNeName;
						}
					}
				}
				if (preStatus!="-1") {
				    log.debug("queryProjectStatusFromCacheEqpintid-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
				}
			}
			//log.debug("queryProjectStatusFromCache::preStatus"+preStatus);
			if (preStatus!="-1") {
				o_alarm_ne_status=preStatus;
				o_special_field16=preReport;
				o_special_field3 =preOptType;
				o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
				//log.debug(o_fp0+" queryProjectStatusFromCache.key2(has->{"+preNeName+"}):"+queryKey);
				// log.debug("queryProjectStatusFromCacheEqpintid-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, results);
				return true;
			}
		}
		//log.debug(o_fp0+" queryProjectStatusFromCache.key2(not):"+queryKey);
		return false;
	}

	//数据网正文端口标工,added by sunyuqiu@20140520
	private boolean shujuTxtsPortProjectStatus()
	{
		String proTxt="";
		def matcher = o_alarm_text =~ /.*\n\[(.+)\]/;
		if(matcher.size()>0)
		{
			proTxt = matcher[0][1];
		}
		if(proTxt!="")
		{
			String[] proTxts = proTxt.split(",");
			for(String txt:proTxts)
			{
				if(this.shujuTxtPortProjectStatusFromCache(txt))
				{
					break;
				}
			}
		}
		return false;
	}

	private boolean shujuTxtPortProjectStatusFromCache(String txt)
	{
		def matcher = txt=~ /(.+)\_([^0-9]*)(\d+\/)?(\d+\/)?(\d+)?(\:)?(\d+)?(\.)?(\d+)?/;
		if(matcher.size()>0)
		{
			String portstr=matcher[0][1]+":";

			if(matcher[0][3]!=null)
				portstr+=matcher[0][3];
			if(matcher[0][4]!=null)
				portstr+=matcher[0][4];
			if(matcher[0][5]!=null)
				portstr+=matcher[0][5];
			if(matcher[0][6]!=null)
				portstr+=matcher[0][6];
			if(matcher[0][7]!=null)
				portstr+=matcher[0][7];
			if(matcher[0][8]!=null)
				portstr+=matcher[0][8];
			if(matcher[0][9]!=null)
				portstr+=matcher[0][9];

			String portId = Util.getCRC32(portstr);
			if(this.queryProjectStatusFromCache(portId))
			{
				//special_fileld9有其他用途（承载网告警电路编号查询）,by sunyuqiu@20150920
				//o_special_field9 += ","+portstr+"@"+portId;
				return true;
			}
		}
		return false;
	}
	//数据网按大网元标工,add by liucaiyong@20140108
	private boolean shujuPortProjectStatus()
	{
		//if (o_professional_type=="2" && o_object_class=="706") {
		if (this.queryProjectStatusFromCache(o_eqp_int_id)) {
			return true;
		}
		//}
		return false;
	}

	//无线小区按基站标工，add by liucaiyong@20140110
	private boolean cellProjectStatus()
	{
		//if ( o_object_class in ['300', '9300', '8105']) {
		String btsId=o_ParentIntId;
		if (StringUtils.isNotBlank(btsId) && this.queryProjectStatusFromCache(btsId)) {
			return true;
		}
		//}
		return false;
	}

	//传输板卡和端口网元临时工程状态附加的特殊查询逻辑 add by wujian at 20130730
	private boolean chuanshuCTFProjectStatusFromCache() {
		//if (o_professional_type=="3") {
		//update by liucaiyong@20140711
		//if (o_object_class=="10011" || o_object_class=="706" || o_object_class=="150110") {
		if (o_object_class in ["10011","706","150110","2011","150111","150113","150114"]) {
			//if (o_object_class in ["10011","706","150110","2012","2011","150111","150113","150114"]) {
			if (this.queryProjectStatusFromCache(o_eqp_int_id)) {
				return true;
			}
		}

		if (o_object_class=="2012"){
			if (this.queryProjectStatusFromCache(o_eqp_int_id,"2012")) {
				return true;
			}
		}

		if (o_object_class=="706" || o_object_class=="150110") {
			if (this.queryProjectStatusFromCache(o_eqp_int_id,"10011")) {
				return true;
			}
		}

		if (o_object_class=="150110") {
			return this.queryProjectStatusFromCache(o_eqp_int_id,"706");
		}
		//}
		return false;
	}

	private String queryProjectTaskStatus(String neIntId){
		String queryKey  = "tts_task_ne_detail2:common:"+neIntId;
		List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_common");
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<5) {
					break;
				}
				List olist = Arrays.asList(result);
				String prjStart  = Util.getTempV(olist, 3);
				String prjStatus = Util.getTempV(olist, 6);
				String prjEnd    = Util.getTempV(olist, 11);
				if (prjStart==null || prjStart=="") {
					continue;
				}

				if("1".equals(prjStatus)){
					//工程中
					return "2";
				}
				else if("2".equals(prjStatus)&&StringUtils.isNotBlank(prjEnd)){
					//if event_time between realtime2 and realtime2+1 then return "3" else contine;
					Date realtime2	=	getDate(prjEnd);
					long rl2	=	realtime2.getTime()+24*60*60*1000;
					Date realtimeEnd	=	new Date();
					realtimeEnd.setTime(rl2);

					if(realtime2.compareTo(event_time)<=0&&event_time.compareTo(realtimeEnd)<=0)
					{
						//工程后
						return "3";
					}
				}
				else if("3".equals(prjStatus)&&StringUtils.isNotBlank(prjStart)){
					//if event_time between temp1-1/2 between temp1 then return "1" else continue;
					Date temptime1	=	getDate(prjStart);
					long tt2	=	temptime1.getTime()-12*60*60*1000;
					Date temptime2	=	new Date();
					temptime2.setTime(tt2);

					if(temptime2.compareTo(event_time)<=0&&event_time.compareTo(temptime1)<=0)
					{
						//工程前
						return "1";
					}
				}
			}
		}
		return "0";
	}

	/**
	 * 工程状态标注
	 */
	private void setProjectStatus()
	{
		boolean projecting = false;
		String tmpIntId = o_int_id.toString();

		if(o_omc_id=="6601"||o_omc_id=="6602")
		{
			//如果是数据网，则去special_fileld9中生成的ID
			if( StringUtils.isNotBlank(o_special_field9))
			{
				int t_index_intid = o_special_field9.toString().indexOf("@");
				if( t_index_intid > -1 )
				{
					tmpIntId = o_special_field9.toString().substring( t_index_intid+1 );
				}
			}
			//special_fileld9有其他用途（承载网告警电路编号查询）,by sunyuqiu@20150920
			o_special_field9 = o_special_field19;
		}
		//传输端口特殊标工 added by lgy@20180629  required by sunyuqiu
		if(o_professional_type=="3"&&o_object_class=="706"){
			tmpIntId=Util.getCRC32("706:"+o_ne_label);
		}
		o_alarm_ne_status="0";
		o_special_field16="";
		o_special_field3 ="";

				//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
		//应急标工先
		//if(o_severity_keycode in ["5274","5275","5276","5277","150","27"]){
		//    projecting = emgProjectStatus();
		//    log.info(o_fp0+"      emg-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
		//}

		//“OMC割接”范围涉及专业：话音、传输 , OMC割接时将未知状态的网元 设置为 OMC割接状态 20150820 fw
		//“OMC重启”范围涉及专业：话音、传输、动环
		if(o_professional_type in ["1","3","4"]){
			if(! StringUtils.isBlank(o_omc_id)){
				String OmcStatus_R = this.queryOmcStatusFromCache(o_omc_id)
				if(!projecting && OmcStatus_R=="17"){
					o_alarm_ne_status = "45";
					projecting=true;
					log.info("o_alarm_ne_status="+o_alarm_ne_status);
				}
				if(o_professional_type in ["1","3"]){
					if( o_ne_status == "0" && OmcStatus_R == "16" ){
						o_ne_status = "100";
					}
				}
			}
		}
		//正常标工
		if(!projecting){
			projecting = queryProjectStatusFromCache(tmpIntId);
			log.info(o_fp0+"   common-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
		}
		//传输标工
		if(!projecting&&o_professional_type=="3"){
			projecting = chuanshuCTFProjectStatusFromCache();
			log.info(o_fp0+" chuanshu-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
		}
		//数据网标工
		if(!projecting&&o_professional_type=="2"&&o_object_class=="706"){
			projecting = shujuPortProjectStatus();
			log.info(o_fp0+"    shuju-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
		}
		//无线小区按基站标工
		if(!projecting&&o_object_class in ["300","9300","8105","270","3300"]){
			projecting = cellProjectStatus();
			log.info(o_fp0+"     cell-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
		}
		if(!projecting&&o_professional_type=="4"){
			//增加动环按机房名+设备编码标工,sunyuqiu@20161108
			tmpIntId	=	Util.getCRC32(o_special_field11+"|"+o_ne_label);
			projecting = queryProjectStatusFromCache(tmpIntId);
			log.info(o_fp0+"       dhh-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
		}
		//动环机房标工
		if(!projecting&&o_professional_type=="4"){
			// 2013092918,增加动环 工程状态匹配逻辑，如果默认（机房名+设备编码）没有匹配上，再用 机房名+|+设备名 ，生成crc32检验码匹配
			tmpIntId	=	Util.getCRC32(o_special_field11);
			projecting = queryProjectStatusFromCache(tmpIntId);
			log.info(o_fp0+"       dh-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"],special_field11["+o_special_field11+"],project_int_id["+tmpIntId+"]");
		}
		//数据网正文端口标工
		if(!projecting&&o_professional_type=="2"	&&o_omc_id in ["6601","6602"]	&& o_extra_id3 in ["20","91","125","154","7","225"])
		{
			projecting = shujuTxtsPortProjectStatus();
			log.info(o_fp0+" shujport-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
		}

		//无线小区按基站标工
		//if(!projecting&&o_object_class in ["300","9300","8105"]){
		//	projecting = cellProjectStatus();
		//	log.info(o_fp0+"     cell-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
		//}
		if(!projecting && o_object_class in ["300","9300","8105","201","9201","8104","41011","270"]){
			List list = new ArrayList<Map>();
			Map map = new HashMap();
			//无线小区按基站标工
			String btsId="";
			String key="objects:";
			if(o_object_class in ["8105","270"]){
				btsId = o_eqp_int_id;
			}else if(o_object_class in ["300","9300"]){
				btsId = o_ParentIntId;
			}
			if(StringUtils.isNotBlank(btsId)){
				map = new HashMap();
				map.put("key","tts_task_ne_detail2:common:"+btsId);
				map.put("wage",99);
				list.add(map);
			}

			//级联标工
			if(o_object_class in ["8105","8104","41011","270"]){
				String queryKey  = "objects_relation:"+o_eqp_int_id+":8104";
				List results = (List)util.getObject(this.CUSTOMCACHE,queryKey,"objects_relation");
				if (results!=null && !results.isEmpty()) {
					for (Object item : results) {
						Object[] result = (Object[])item;
						List olist = Arrays.asList(result);
						String relatedId  = Util.getTempV(olist, 2);

						map = new HashMap();
						map.put("key","tts_task_ne_detail2:common:"+relatedId);
						map.put("related","1");
						map.put("wage",99);
						list.add(map);
					}
				}
			}else{
				map = new HashMap();
				map.put("key","tts_task_ne_detail2:common:"+o_eqp_int_id);
				map.put("related","1");
				map.put("wage",99);
				list.add(map);
			}
			projecting = this.queryProjectStatusList(list);
		}

		if(!projecting){//个性化标工 by shanchunlan ,added by liucaiyong@20160518
			List refList=this.redefineProjectsList();

			if(refList!=null){
				for(String one:refList){
					projecting = redefineProjectStatus(one);
					if(projecting){
						break;
					}
				}
				log.info(o_fp0+" redefine-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
		}
		//4G基站脱离告警标工 added by lgy@20180816  required by wangyinfeng
		//托管子类型调整成退服子类型改由标题加厂家限定, updated by liucaiyong@20191216 required by wangyinfeng
		//if(!projecting && o_eqp_object_class in ["8104","41011"] && o_sub_alarm_type == "973" ){
		if(!projecting && o_eqp_object_class in ["8104","41011"] && (
				(o_vendor_id == "1" && o_title_text == "Heartbeat Failure")||
				(o_vendor_id == "8" && o_title_text == "网元连接中断")||
				(o_vendor_id == "7" && o_title_text == "网元断链告警")||
				(o_vendor_id == "9" && o_title_text == "NEA和网元断连")||
				(o_vendor_id == "4" && o_title_text == "NE O&M CONNECTION FAILURE")
			)){
			projecting = this.LTEtuoguanProjectStatusList(o_region_id);
			log.info(o_fp0+"  LTEtuoguan: 是否标工["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
		} else if (!projecting && o_eqp_object_class == "3201" && (
			// “地市断链标工”工程识别
				(o_vendor_id == "1" && o_alarm_title == "510675")||
				(o_vendor_id == "8" && o_alarm_title == "846798")||
				(o_vendor_id == "7" && o_alarm_title == "9827073")
			)){
			projecting = this.LTEtuoguanProjectStatusList(o_region_id);
			log.info(o_fp0+"  5G地市断链: 是否标工["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
		}

		//对端标工
		String t_alarm_ne_status	=	o_alarm_ne_status;
		String t_special_field16	=	o_special_field16;
		String t_special_field3	=	o_special_field3;

		if(StringUtils.isNotBlank(o_remote_int_id))
		{
			boolean remote_projecting = false;
			remote_projecting	=	queryProjectStatusFromCache(o_remote_int_id);
			if(!remote_projecting){
				o_remote_proj_sub_status="0";
			}else{
				o_remote_proj_sub_status	=	o_alarm_ne_status;

				//还原
				o_alarm_ne_status	=	t_alarm_ne_status;
				o_special_field3	=	t_special_field3;

				if(projecting){
					o_special_field16	=	t_special_field16;
				}
			}
			log.info(o_fp0+"   remote-prj["+remote_projecting+"],remote_proj_sub_status["+o_remote_proj_sub_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
		}

		log.info("resoure-prj_begin, fp0={}, ne_label={}, eqp_label={}, remote_proj_sub_status={}, remote_resource_status={}, alarm_ne_status={}, alarm_resource_status={}, special_field16={}, special_field3={}", o_fp0, o_ne_label, o_eqp_label, o_remote_proj_sub_status, o_remote_resource_status, o_alarm_ne_status, o_alarm_resource_status, o_special_field16, o_special_field3);

		if(o_ne_label ==o_eqp_label)
		{
			o_alarm_ne_status        = this.projectRemoteMaping(o_alarm_ne_status, o_remote_resource_status, o_remote_proj_sub_status);
			o_remote_proj_sub_status = this.projectMaping(o_remote_proj_sub_status);
			o_alarm_resource_status  = o_alarm_ne_status;
		}
		else
		{
			o_alarm_ne_status        = this.projectRemoteMaping(o_alarm_ne_status, o_remote_resource_status, o_remote_proj_sub_status);
			o_remote_proj_sub_status = this.projectMaping(o_remote_proj_sub_status);

			//查询本端大网元标工状态
			boolean tmpProjecting = false;
			String tmpAlarmResourceStatus = o_alarm_resource_status;

			t_alarm_ne_status	=	o_alarm_ne_status;
			t_special_field16	=	o_special_field16;
			t_special_field3	=	o_special_field3;

			tmpProjecting	=	queryProjectStatusFromCache(o_eqp_int_id);
			if(!tmpProjecting){
				o_alarm_resource_status="0";
			}else{
				o_alarm_resource_status	=	o_alarm_ne_status;

				//还原
				o_alarm_ne_status	=	t_alarm_ne_status;
			}
			log.info(o_fp0+" resoure-prj["+tmpProjecting+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			o_alarm_resource_status  = this.projectMaping(o_alarm_resource_status);
		}

		if(o_professional_type=="3"&&!projecting)
		{
			//传输标工失败，置初始值
			o_alarm_ne_status = i_alarm_ne_status;//120消息初始值
		}

		// 0:未知 1:工程预约 2:工程实施 3:工程后观察
		if( projecting ){
			o_extra_id2="2";
		}
		else
		{
			o_extra_id2	=	queryProjectTaskStatus(o_int_id);
			if(o_extra_id2=="0")
			{
				o_extra_id2="";
			}
		}

		this.setProjectStatusSuspect(projecting); // 工程状态标注“疑似违规操作”标签，同步修改标工函数setProjectStatus和疑似标工函数setProjectStatusSuspect
	}

	/**
	 *获取当前
	 **/
	private List redefineProjectsList(){
		List refList;//自定义标工项
		Date refTime;
		//log.info(o_fp0+" getRedefineProjects-1");
		if(refList!=null && refTime!=null && (refTime.getTime()+60*60*24*1000)>(new Date()).getTime()){
			return refList;
		}
		//log.info(o_fp0+" getRedefineProjects-2");
		List results = (List)util.getObject(this.CUSTOMCACHEHour,"nrmdb.tts_task_ne_detail2_redef_type:10","nrmdb.tts_task_ne_detail2_redef_type");
		if(results!=null && !results.isEmpty()) {
			refList = new ArrayList<String>();
			refTime = new Date();
			for (Object item : results) {
				Object[] result = (Object[])item;
				List olist = Arrays.asList(result);
				String tmp = Util.getTempV(olist,1);
				if(StringUtils.isNotBlank(tmp)){
					refList.add(tmp);
					log.info(o_fp0+" set-ref-projects["+tmp+"]");
				}
			}
			return refList;
		}
		//log.info(o_fp0+" getRedefineProjects-3");
		return null;
	}
	private boolean redefineProjectStatus(String pattern){
		//LOCAL:TITLE:REMOTE
		String pkey = pattern.replace("TITLE", o_title_text).replace("REMOTE", o_remote_eqp_label).replace("LOCAL", o_eqp_label);

		String preStatus ="-1";
		String preReport ="";
		String preOptType="";
		String preStart  ="";
		List results = (List)util.getObject(this.CUSTOMCACHEHour,"nrmdb.tts_task_ne_detail2_redef@"+pattern,"nrmdb.tts_task_ne_detail2_redef");
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<5) {
					break;
				}
				List olist = Arrays.asList(result);
				String neName    = Util.getTempV(olist, 5);

				if(StringUtils.isBlank(neName)||!neName.equals(pkey)){
					continue;
				}
				String prjStatus = Util.getTempV(olist, 0);
				String prjReport = Util.getTempV(olist, 1);
				String prjOptType= Util.getTempV(olist, 2);
				String prjStart  = Util.getTempV(olist, 3);
				String prjEnd    = Util.getTempV(olist, 4);

				if (prjStart==null || prjStart=="") {
					continue;
				}
				if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
					if (getDate(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDate(prjEnd).compareTo(event_time)>=0)) {
						preStatus = prjStatus;
						preReport = prjReport;
						preOptType= prjOptType;
					}
				}
				if (preStatus!="-1") {
				    log.debug("redefineProjectStatus-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
				}
			}
			if (preStatus!="-1") {
				o_alarm_ne_status=preStatus;
				o_special_field16=preReport;
				o_special_field3 =preOptType;
				o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
				// log.debug("redefineProjectStatus-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, "nrmdb.tts_task_ne_detail2_redef@"+pattern, results);
				return true;
			}
		}
		return false;
	}
	/**
	 * 对端相关信息处理
	 */
	private void setRemoteAlarmAddResource()
	{
		//IP城域网与传输网元关联, by shichao@20160218
		//城域网告警对端解析,code-liucaiyong,by sunyuqiu@20160826
		//OLT:中兴-上联口链路中断，华为-上行以太端口连线故障或端口状态异常,
		//中兴-交换机-端口DOWN,华为-交换机-物理端口Down(Entity)
		//路由器:华为-物理端口DOWN(base),华为-物理端口DOWN,华为-物理端口Down(Entity),CISCO-PKT_INFRA-LINK-3-UPDOWN,CISCO-PKT_INFRA-LINEPROTO-5-UPDOWN
		//阿卡/CISCO：linkDown   华为 链路断开
		String dest="";
		if(o_object_class =="706" && o_eqp_object_class =="2011" && o_alarm_title in ["9827076","9608841"]){
			String portnoKey="port_no:"+o_ne_location+":"+o_eqp_int_id;
			if(o_eqp_object_class =="2011"){
				portnoKey="port_no:"+o_ne_label+":"+o_eqp_int_id;
			}
			log.info(o_fp0+" remote o_eqp_object_class["+o_eqp_object_class+"],o_title_text["+o_title_text+"],o_alarm_title["+o_alarm_title+"],key["+portnoKey+"]");
			List results = (List)util.getObject(this.CUSTOMCACHE,portnoKey,"port_port_no");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					List olist = Arrays.asList(result);
					o_remote_int_id = Util.getTempV(olist,2);
					o_remote_eqp_label = Util.getTempV(olist,3);
					o_rlocate_ne_int_id = Util.getTempV(olist,4);
					o_rlocate_ne_type	=	Util.getTempV(olist,5);
					o_rlocate_ne_name = Util.getTempV(olist,6);

					dest += "对端网元="+o_remote_eqp_label+",对端端口名="+o_rlocate_ne_name+";";
				}
			}
			log.info(o_fp0+" port_port_no remote_int_id["+o_remote_int_id+"],rlocate_ne_name["+o_rlocate_ne_name+"],dest["+dest+"]");
		}
		//城域网告警对端解析,code-liucaiyong,by sunyuqiu@20160826
		//OLT托管类：华为-网管与设备通信失败,中兴-网元链路断,阿卡-ISO
		if(o_eqp_object_class =="2011" && o_alarm_title in ["9608838","9827073","10225572"]){
			List results = (List)util.getObject(this.CUSTOMCACHE,"port_equip_no:"+o_eqp_int_id,"port_equip_no");
			//log.info(o_fp0+" begin port_equip_no remote_int_id["+o_remote_int_id+"],rlocate_ne_name["+o_rlocate_ne_name+"],key[port_equip_no:"+o_eqp_int_id+"]");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					List olist = Arrays.asList(result);
					o_remote_int_id = Util.getTempV(olist,1);
					o_remote_eqp_label = Util.getTempV(olist,2);
					o_rlocate_ne_int_id = Util.getTempV(olist,3);
					o_rlocate_ne_name = Util.getTempV(olist,4);

					dest += "对端网元="+o_remote_eqp_label+",对端端口名="+o_rlocate_ne_name+";";
				}
			}
			log.info(o_fp0+" port_equip_no remote_int_id["+o_remote_int_id+"],rlocate_ne_name["+o_rlocate_ne_name+"],dest"+dest+"]");
		}

		if(StringUtils.isNotBlank(dest)){
			if(StringUtils.isBlank(o_special_field9)|| !o_special_field9.contains("对端网元")){
				o_special_field9 += dest;
			}else{
				def matcher =  o_special_field9 =~/^(.*)(对端网元=\w+;)(对端端口名=\w+;)(.*)$/;
				if (matcher.size()>0) {
					o_special_field9 = matcher[0][1]+dest+matcher[0][4];
				}
			}
			log.info(o_fp0+" dest["+dest+"],special_field9["+o_special_field9+"]");
		}
		//传输支路口 对端赋值业务网元 added by lgy@20180822  required by wangyinfeng 需求单号：CMCC-GD-DRITXQ-20180718-013
		if(o_professional_type == "3" && o_object_level == "70602" ){
			Object[] item;
			String task="nrmdb.circuit_a";
			String t_Key="nrmdb.circuit_a:"+o_int_id;
			List results = (List)util.getObject(this.CUSTOMCACHE,t_Key,task);
			if (results != null&& results.size() >0) {
				item  = (Object[])results.get(0);
				if(item.length>0){
					o_remote_eqp_label = item[1];
					log.info(o_fp0+" A端：remote_eqp_label["+o_remote_eqp_label+"]");
				}
			}
			if (results == null ||  results.size() ==0 || o_remote_eqp_label == null){
				task="nrmdb.circuit_b";
				t_Key="nrmdb.circuit_b:"+o_int_id;
				results = (List)util.getObject(this.CUSTOMCACHE,t_Key,task);
				if (results != null && results.size() >0) {
					item  = (Object[])results.get(0);
					if(item.length>0){
						o_remote_eqp_label = item[1];
						log.info(o_fp0+" B端：remote_eqp_label["+o_remote_eqp_label+"]");
					}
				}
			}
		}
		//BGP邻居关系中断”告警对端分析  added by lgy@20180820  required by wangyinfeng
		if(o_professional_type == "2" && o_extra_id3 in ["7","20"] && o_object_class == "66003" && o_alarm_title == "28834318" && o_vendor_id == "8"){
			def testFlag =  o_alarm_text =~/The\s+status\s+of\s+the\s+peer\s*(\d+.\d+.\d+.\d+)\s*/;
			if(testFlag.size()>0){
				String  IP = testFlag[0][1];
				String tkey = "nrmdb.router:"+IP;
				Object[] objects = util.getObject(CUSTOMCACHE, tkey,"nrmdb.router");
				List list = objects==null?null:Arrays.asList(objects);
				if(list!=null&&!list.isEmpty())
				{
					o_remote_int_id		 = Util.getTempV(list, 1);
					o_remote_eqp_label = Util.getTempV(list, 2);
					log.info(o_fp0+" IP["+IP+"],remote_int_id["+o_remote_int_id+"],remote_eqp_label["+o_remote_eqp_label+"]");
				}
			}
		}
		//linkDown告警对端关联, by shanchunlan@20160317
		if( StringUtils.isNotBlank(o_int_id) && StringUtils.isNotBlank(o_eqp_int_id)
				&& ( (o_extra_id3 in ["20","208","272","154","125"] &&  o_title_text in ["linkDown","LinkDown"])
				|| ( o_extra_id3 in ["7"]&& o_title_text in ["[端口状态DOWN]","LDP邻居关系DOWN","[huawei][物理端口状态down]","linkDown"])
				|| ( o_extra_id3 in ["14","125","154"] && o_title_text == "爱立信SE800LinkDown告警")
		) ){

			String task="port_intid";
			String portnoKey="port_intid:"+o_int_id;

			List results_int = (List)util.getObject(this.CUSTOMCACHE,portnoKey,task);
			if (results_int!=null && !results_int.isEmpty()) {
				for (Object item_i : results_int) {
					Object[] result_i = (Object[])item_i;
					List olist_i = Arrays.asList(result_i);
					o_rlocate_ne_name = Util.getTempV(olist_i,2);

					portnoKey="port_no:"+o_rlocate_ne_name+":"+o_eqp_int_id;
					task="port_port_no";
					log.info(o_fp0+" port_no portnoKey["+portnoKey+"] task["+task+"]");

					List results = (List)util.getObject(this.CUSTOMCACHE,portnoKey,task);
					if (results!=null && !results.isEmpty()) {
						for (Object item : results) {
							Object[] result = (Object[])item;
							List olist = Arrays.asList(result);
							o_remote_int_id = Util.getTempV(olist,2);
							o_remote_eqp_label = Util.getTempV(olist,3);
							o_rlocate_ne_int_id = Util.getTempV(olist,4);
							o_rlocate_ne_type	=	Util.getTempV(olist,6);

							break;
						}
					}

					break;

				}
			}
			log.info(o_fp0+" port_no o_remote_int_id["+o_remote_int_id+"] rlocate_ne_name["+o_rlocate_ne_name+"]");
		}

		//TD/LTE基站退服跨专业关联,update by liucaiyong,required by sunyuqiu@2014070311
		if(o_object_class in ["8104","9201","201","41011"])
		{
			String task = "circuit_ne_relation";
			//List oList = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, joinKey(task,(o_object_class == "41011" ? "8104" : o_object_class),o_int_id), task);
			//redis缓存外挂
			// List oList = rutil.getObject(joinKey(task,(o_object_class == "41011" ? "8104" : o_object_class),o_int_id));
			String key = joinKey(task,(o_object_class == "41011" ? "8104" : o_object_class),o_int_id);
			List oList = util.getObject(CUSTOMCACHE, key, "circuit_ne_relation");
			int size = oList==null?0:oList.size();
			log.debug("fp0-{},key={},list.size={}",o_fp0,key,size);
			if (size>0) {
					String cno	= Util.getTempV(oList,3);
					log.debug("fp0-{},key={},cno={}",o_fp0,key,cno);
					task="gdCircuitLevel";
					Object[] oCirts = util.getObject(this.CUSTOMCACHE, joinKey("gd:circuit:level",cno),task);
					List results = oCirts==null?null:Arrays.asList(oCirts);
					if (results != null&&!results.isEmpty()) {
						String bne=Util.getTempV(results, 4);//取到对端网元ID

						//5+2
						task = "objects_trans:fdn";
						oCirts = util.getObject(this.CUSTOMCACHE, joinKey("objects_trans:fdn",bne),task);
						results = oCirts==null?null:Arrays.asList(oCirts);
						if (results != null&&!results.isEmpty()) {
							bne = Util.getTempV(results, 0);//取到FDN ID
						}

						// task = "objects_trans";
						task = "objects_trans_fdn_id";
						oCirts = util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKey(task,bne),task);
						results = oCirts==null?null:Arrays.asList(oCirts);
						if (results != null&&!results.isEmpty()) {
							o_remote_int_id 			= Util.getTempV(results, 0);
							o_remote_object_class	=	Util.getTempV(results, 16);
							o_remote_eqp_label		=	Util.getTempV(results, 5);
							o_remote_eqp_alias		=	Util.getTempV(results, 5);

							log.info(o_fp0+" get circuit_ne_relation:id["+o_remote_int_id+"],label["+o_remote_eqp_label+"]");
						}
					}

			}
		}

		//MME、HSS跨专业性能告警关联, added by liucaiyong,required by sunyuqiu @2014102214
		//爱立信HSS性能告警对端分析,update by liucaiyong,required by shichao@20150611
		if(o_object_class == "8109" && o_alarm_title in ["13259","11542628","10630570","11623626"] && StringUtils.isNotBlank(o_alarm_unit)){
			String task="nrmdb.mme";
			o_remote_int_id = "-1807";
			if(o_alarm_title == "11542628"){
				o_remote_eqp_alias	=	o_alarm_unit.toUpperCase();//截取[HSS:]后面的
				//log.info(o_fp0+" get hss-remote-1 :"+o_remote_eqp_alias);
				int pos = o_remote_eqp_alias.indexOf(":");
				if( pos > -1 ){
					o_remote_eqp_alias = o_remote_eqp_alias.substring(pos+1);
				}
				task	=	"nrmdb.dra";
				//log.info(o_fp0+" get hss-remote-2 :"+o_remote_eqp_alias);
			}else{
				o_remote_eqp_alias	=	o_alarm_unit;//截取第二个[.]号前面的
				//log.info(o_fp0+" get hss-remote-1 :"+o_remote_eqp_alias);
			}
			Object[] remotes = util.getObject(CUSTOMCACHE, task+":"+o_remote_eqp_alias ,task);
			List remotelist = remotes==null?null:Arrays.asList(remotes);
			if(remotelist!=null&&!remotelist.isEmpty()){
				o_special_field22 = Util.getTempV(remotelist, 0);
				//log.info(o_fp0+" get hss-remote-3 :"+o_special_field22);
			}
		}
		//中兴MSS MTP3局向不可达对端分析,added by liucaiyong,required by shichao@20150611
		//M3UA局向不可达 added by shichao@20161220
		if(o_vendor_id == "7" && o_object_class == "130" && o_alarm_title in ["665","650"] && StringUtils.isNotBlank(o_remote_eqp_alias)){
			//o_remote_eqp_alias转成16进制
			o_remote_int_id = "-1807";
			String hexStr="";
			try{
				for(String ip:o_remote_eqp_alias.split("\\.")){
					String hex = Integer.toHexString(Integer.parseInt(ip))+"";
					hexStr = hexStr + (hex.length()<2?"0"+hex:hex).toUpperCase();
				}
				//log.info(o_fp0+" get mss-remote-hex :"+hexStr);
				String task="t_ne_spc";
				Object[] remotes = util.getObject(CUSTOMCACHE, task+":"+hexStr ,task);
				List remotelist = remotes==null?null:Arrays.asList(remotes);
				if(remotelist!=null&&!remotelist.isEmpty()){
					o_remote_int_id	=	Util.getTempV(remotelist, 0);
					o_remote_eqp_label = Util.getTempV(remotelist, 1);
					o_remote_resource_status =Util.getTempV(remotelist, 2);
					o_remote_eqp_alias	=	o_remote_eqp_label;
					o_special_field22 = "";
				}
			}catch(Exception e){
				log.info(o_fp0+" get mss-remote-error :"+e.getMessage());
			}
		}

		//华为对端分析-基于spc-hex
		if(o_vendor_id == "8" && o_object_class in ["8109","8101","6107"] &&
				o_title_text in ["MTP路由不可用","MTP目的信令点不可达","M3UA路由不可用","M3UA目的实体不可达","SCCP目的信令点禁止","SCCP目的信令点不可达","SCCP子系统禁止"] &&
				StringUtils.isNotBlank(o_remote_eqp_label) ){
			o_remote_eqp_alias = o_remote_eqp_label;
			o_remote_eqp_label = "";
			this.setRemoteInfoBySpcHex();
		}
		//爱立信、华为HSS（LTE）对端分析-基于别名 HSS add by fw required by shanchunlan@20160725
		if(o_vendor_id in ["1","8"] &&
				o_title_text in ["Diameter链路故障","Diameter对端实体故障","CCITT7 SIGNALLING LINK FAILURE","CCITT7 LINK SET SUPERVISION","Diameter, Link Failure",
								 "CCITT7 DESTINATION INACCESSIBLE","SEMIPERMANENT CONNECTION FAULT","SUA SS7 DESTINATION INACCESSIBLE","M3UA DESTINATION INACCESSIBLE"] &&
				StringUtils.isNotBlank(o_remote_eqp_label) ){
			o_remote_eqp_alias = o_remote_eqp_label;
			o_remote_eqp_label = "";
			this.setHSSRemoteInfoByAlias();
		}
		//华为性能告警对端分析,added by liucaiyong,required by shichao@20150623
		if(o_vendor_id == "8" && o_object_class == "130" && o_alarm_title in ["110007","110008","10630186"] && StringUtils.isNotBlank(o_remote_eqp_alias)){
			String task="remote-mme";
			o_remote_int_id = "-1807";
			Object[] remotes = util.getObject(CUSTOMCACHE, task+":"+o_remote_eqp_alias.toUpperCase(),task);
			List remotelist = remotes==null?null:Arrays.asList(remotes);
			if(remotelist!=null&&!remotelist.isEmpty()){
				o_special_field22 = Util.getTempV(remotelist, 0);
			}
		}
		//核心网紧急告警过滤器 关联压缩需求 @20160125 施超 add by fw
		//爱立信 HSS MGW
		if(o_object_class in ["8109","131"] && o_vendor_id=="1" && o_title_text in ["Diameter, Link Failure","M3UA Association Down"] && StringUtils.isNotBlank(o_remote_eqp_alias) )
		{
			String key;
			String task;
			List list;

			if(o_object_class == "8109"){
				task="remote-hss";
				key=task+":"+o_remote_eqp_alias;
			}else if(o_object_class == "131"){
				task="remote-mgw";
				key=task+":"+o_remote_eqp_alias;
			}

			list = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key, task);
			if (list != null&& list.size() >0) {
				for (int i = 0; i < list.size(); i++) {
					Object[] objs = (Object[]) list.get(i);
					if (objs.length>0) {
						o_remote_int_id 			= objs[0]+"";
						if(StringUtils.isNotBlank(o_remote_int_id)){
							o_remote_eqp_label	    =	objs[1]+"";
							o_remote_resource_status=	objs[2]+"";
							break;
						}
					}
				}
			}
			log.info(o_fp0+" get "+task+":id["+o_remote_int_id+"],label["+o_remote_eqp_label+"] remote_resource_status-"+o_remote_resource_status);
		}
		if(o_vendor_id=="1" &&((o_object_class == "130" && o_title_text == "M3UA ASSOCIATION STATUS CHANGE")||(o_object_class == "102" && o_title_text == "CCITT7 DESTINATION INACCESSIBLE"))){
			List xlist = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, "remote-hss:"+o_remote_eqp_alias, "remote-hss");
			if (xlist != null&& xlist.size() >0) {
				for (int i = 0; i < xlist.size(); i++) {
					Object[] objs = (Object[]) xlist.get(i);
					if (objs.length>0) {
						o_remote_int_id 			= objs[0]+"";
						if(StringUtils.isNotBlank(o_remote_int_id)){
							o_remote_eqp_label	    =	objs[1]+"";
							o_remote_resource_status=	objs[2]+"";
							break;
						}
					}
				}
			}
			log.info(o_fp0+" get-LTE-CORE-130/102 :id["+o_remote_int_id+"],label["+o_remote_eqp_label+"] remote_resource_status-"+o_remote_resource_status);
		}
		//华为 MSC_Server
		if(o_object_class in ["130"] && o_vendor_id=="8" && o_title_text in ["H.248 SCTP链路故障","M3UA链路传输质量故障","M3UA链路故障"] && StringUtils.isNotBlank(o_remote_eqp_alias) )
		{
			String key;
			String task;
			List list;

			if(o_object_class == "130"){
				task="remote-mss";
				key=task+":"+o_remote_eqp_alias;
			}

			list = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key, task);
			if (list != null&& list.size() >0) {
				for (int i = 0; i < list.size(); i++) {
					Object[] objs = (Object[]) list.get(i);
					if (objs.length>0) {
						o_remote_int_id 			= objs[0]+"";
						if(StringUtils.isNotBlank(o_remote_int_id)){
							o_remote_eqp_label	    =	objs[1]+"";
							o_remote_resource_status=	objs[2]+"";

							o_special_field22="";
							o_special_field23="";
							break;
						}
					}
				}
			}
			log.info(o_fp0+" get "+task+":id["+o_remote_int_id+"],label["+o_remote_eqp_label+"] remote_resource_status-"+o_remote_resource_status);
		}

		if(o_remote_int_id == "-1807" || o_special_field22 == "-1807"){
			o_remote_resource_status = "0";
			if(StringUtils.isBlank(o_remote_eqp_alias)){
				o_remote_eqp_label = o_special_field23;
				o_remote_eqp_alias = o_special_field23;
			}
		}

		// CMCC-GD-DRITXQ-20200320-011-DRA sctplink类型资源采集及告警对端分析需求，告警来源：统一采集
		// if (o_alarm_source == "统一采集" && o_object_class == "8107" && StringUtils.isNotBlank(o_remote_eqp_alias)) {
		if (o_object_class == "8107" && StringUtils.isNotBlank(o_remote_eqp_alias)) {
		  String key = "sctplink_ne_relation:" + o_remote_eqp_alias;
		  // redis缓存外挂
		  // Object[] objects = (Object[]) rutil.getObject(key);
		  Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "sctplink_ne_relation");
		  List objectsList = objects == null ? null : Arrays.asList(objects);
		  if(objectsList != null && !objectsList.isEmpty()) {
			  o_remote_int_id    = Util.getTempV(objectsList, 1);
			  o_remote_eqp_label = Util.getTempV(objectsList, 2);
			  }
		}

		//对端分析
		if (StringUtils.isNotBlank(o_special_field22)&&o_omc_id != "6601" && o_omc_id != "6602" && o_omc_id != "6101" && o_omc_id != "6102" && o_omc_id != "6107"&&o_omc_id != "6108"&& o_omc_id != "90011" && o_omc_id != "6109"&&o_omc_id!="50201" &&o_professional_type!="3"&&o_professional_type!="5"&&o_vendor_id!="9014"&&o_vendor_id!="1038")
		{
			//o_remote_int_id = o_special_field22;
			//sql = "select userlabel,zh_label,confirmed,OBJECT_CLASS from objects where int_id=" + o_special_field22;
			//list = Util.queryByHSql(sql);
			String key = "objects:"+o_special_field22;
			Map map = this.getObjectsValueWithMap(key,"objects");
			if(map.size()>0){
				o_remote_int_id = map.get("int_id");
				o_remote_eqp_label = map.get("userlabel");
				o_remote_eqp_alias = StringUtils.isBlank(map.get("zh_label"))?map.get("userlabel"):map.get("zh_label");
				o_remote_resource_status = map.get("confirmed");
				o_remote_proj_sub_status = map.get("project_status");
				o_special_field17 = map.get("object_class");
				log.debug("remote_from_objects-fp0={}, remote_eqp_label={}, remote_eqp_alias={}, remote_resource_status={}, remote_proj_sub_status={}, special_field17={}", o_fp0, o_remote_eqp_label, o_remote_eqp_alias, o_remote_resource_status, o_remote_proj_sub_status, o_special_field17);
			}
		}

		// CMCC-GD-DRITXQ-20200320-011-DRA sctplink类型资源采集及告警对端分析需求，告警来源：统一采集
		// 通过判断o_remote_resource_status确认对端分析逻辑是否从objects表获取到资源：为空则表示从上述逻辑objects表未获取到资源，尝试从objects_it表查询资源
		if (StringUtils.isBlank(o_remote_resource_status) && StringUtils.isNotBlank(o_remote_int_id) && o_omc_id != "6601" && o_omc_id != "6602" && o_omc_id != "6101" && o_omc_id != "6102" && o_omc_id != "6107"&&o_omc_id != "6108"&& o_omc_id != "90011" && o_omc_id != "6109"&&o_omc_id!="50201" &&o_professional_type!="3"&&o_professional_type!="5"&&o_vendor_id!="9014"&&o_vendor_id!="1038") {
		  String key = "objects_it:" + o_remote_int_id;
		  // redis缓存外挂
		  // Object[] objects = (Object[]) rutil.getObject(key);
		  Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "objects_it");
		  List objectsList = objects == null ? null : Arrays.asList(objects);
		  if(objectsList != null && !objectsList.isEmpty()) {
			  o_remote_resource_status = Util.getTempV(objectsList, 2); // resource_status
			  o_remote_proj_sub_status = "0"; // objects_it无project_status字段，设置默认值：0
			  o_special_field17        = Util.getTempV(objectsList, 6); // object_class
				log.debug("remote_from_objects_it-fp0={}, remote_resource_status={}, special_field17={}", o_fp0, o_remote_resource_status, o_special_field17);
			  }
		}

		if (o_remote_int_id != "-1807" && StringUtils.isBlank(o_remote_eqp_label))
		{
			if (StringUtils.isNotBlank(o_special_field22) && StringUtils.isNotBlank(o_special_field23) )
			{
				o_remote_eqp_label = o_special_field23;
				o_remote_eqp_alias = o_special_field23;
				o_remote_resource_status = "0";
				//sql = "select remote_object_class from ALARM_REMOTE_OBJECT_CLASS where vendor_id="+ o_vendor_id + " and object_class="+ o_object_class + " and alarm_title_text='" + o_title_text + "'";
				String key="alarm_remote_object_class:"+o_vendor_id+":"+o_object_class+":"+o_title_text;
				Object[] remote = util.getObject(CUSTOMCACHE, key,"alarm_remote_object_class");
				List remoteList = remote==null?null:Arrays.asList(remote);
				if(remoteList!=null&&!remoteList.isEmpty()){
					o_special_field17 = Util.getTempV(remoteList, 0);
				}
			}
		}

		if (StringUtils.isBlank(o_remote_resource_status)){
			//无对端匹配规则--默认为99
			o_remote_resource_status="99";
		}
	}

	private void getRemoteInfoBySF9()
	{
		def matcher = o_special_field9=~/^.*对端网元=([^;]+).*$/;
		if(matcher.size()>0){
			o_remote_eqp_label=matcher[0][1];
		}

		matcher = o_special_field9=~/^.*对端端口名=([^;]+).*$/
		if(matcher.size()>0){
			o_rlocate_ne_name=matcher[0][1];
		}

		o_remote_int_id = Util.getCRC32(o_eqp_object_class+":"+o_extra_string1+":"+o_remote_eqp_label);
		o_rlocate_ne_int_id = Util.getCRC32("706:"+o_extra_string1+":"+o_rlocate_ne_name);
	}

	/**
	 * 添加eqp相关的字段信息
	 */
	private void setEquipmentInfo()
	{
		//LTE核心网resource_status赋值,@20151207
		if(o_object_class in ["121","122","124","8010","8101","8102","8103","8106","8107","8108","8109","81091","81092"]){
			if(StringUtils.isNotBlank(o_eqp_int_id)){
				String key = "objects:"+o_eqp_int_id;
				Map map = this.getObjectsValueWithMap(key,"objects");
				if(!map.isEmpty()){
					String resourceStatus = map.get("resource_status");
					if (StringUtils.isNotBlank(resourceStatus)){
						o_resource_status = resourceStatus;
					}
				}
			}
		}
		// fetch the parent NE info
		//added enodeb(8104)'s eqp-info,added by liucaiyong,required by shanchunlan@2014063018
		//if (o_object_class == "201" || o_object_class == "300" ||o_object_class == "9201" || o_object_class == "9300" || o_object_class == "8105" || o_object_class == "8104")
		if (o_object_class in ["201","300","9201","9300","8105","8104","41011","270"])
		{
			// modify NE fields
			//if( o_object_class == "8105" ||o_object_class == "8104")
			if (o_object_class in ["8105","8104","41011","270"])
			{
				// o_eqp_int_id = i_eqp_int_id;
				if(StringUtils.isBlank(o_eqp_int_id) && o_org_type == "2" && o_object_class in ["8105","270"]){
					//LTE性能告警无设备信息，requery by shichao@20150407
					o_eqp_int_id = o_ParentIntId;
				}
			}
			else{
				o_eqp_int_id = t_related_bsc;
			}
			if (StringUtils.isNotBlank(o_eqp_int_id))
			{
				String key = "objects:"+o_eqp_int_id;
				Map map = this.getObjectsValueWithMap(key,"objects");
				o_eqp_object_class = map.get("object_class");
				if (o_eqp_object_class != null )
				{
					o_eqp_alias = map.get("userlabel");
					o_resource_status = map.get("resource_status");
					o_eqp_label = StringUtils.isNotBlank(map.get("zh_label"))?map.get("zh_label"):map.get("userlabel");
					String t_project_status = map.get("project_status");
					o_alarm_resource_status = this.setEqpProjectStatus(t_project_status);
				}
			}

		}
		if(o_professional_type=="1")
		{
			if(StringUtils.isBlank(o_eqp_int_id)||StringUtils.isBlank(o_eqp_object_class)||StringUtils.isBlank(o_eqp_label)||((o_ne_label ==o_eqp_label)&&(o_object_class==o_eqp_object_class)))
			{
				o_resource_status = o_ne_status;
				o_eqp_int_id      = o_int_id;
				o_eqp_alias       = o_ne_alias;
				o_eqp_label       = o_ne_label;
				o_eqp_object_class= o_object_class;
				o_alarm_ne_status = o_alarm_resource_status;
			}
		}
		//5+2
		//if(StringUtils.isBlank(o_eqp_object_class)||StringUtils.isBlank(o_eqp_label))
		if(StringUtils.isBlank(o_eqp_object_class)||(StringUtils.isBlank(o_eqp_label)&&o_professional_type!="3"))
		{
			o_resource_status  = o_ne_status;
			o_eqp_alias        = o_ne_alias;
			o_eqp_label        = o_ne_label;
			o_eqp_object_class = o_object_class;
			o_alarm_ne_status  = o_alarm_resource_status;
		}

		if(StringUtils.isBlank(o_eqp_int_id))
		{
			o_eqp_int_id = o_int_id;
		}
		if(o_object_class=="201"||o_object_class=="300")
		{
			o_eqp_object_class="200";
		}
		if(o_object_class == "9201"||o_object_class=="9300")
		{
			o_eqp_object_class="9200";
		}
		//5+2-lte
		if(o_object_class in ["8105","8104","9201","9300","41011","270"])
		{
			o_alarm_content	=	o_ne_alias;
		}
		if(StringUtils.isBlank(o_alarm_content)){
			o_alarm_content	=	o_eqp_label;
		}
		//lgy@20190124,设备别名默认赋值
		/* if(o_professional_type=="3"&&StringUtils.isBlank(o_eqp_alias)&&StringUtils.isNotBlank(o_eqp_label)){
				o_eqp_alias=o_eqp_label;
			}
		 */
				//CMCC-GD-DRITXQ-20190613-005    需求名称：关于物联网告警标准化部署需求, wangyingfeng ,add by liucaiyong@20190814
				if(o_eqp_object_class == "8104" && o_title_text in ["网元连接中断","网元断链告警","Heartbeat Failure","NEA和网元断连","NE O&&amp;M CONNECTION FAILURE"]){
					Map map = this.getObjectsValueWithMap("objects:"+o_eqp_int_id,"objects");
					if(map.size()>0){
						String tmp = map.get("upd_flag");
						if(StringUtils.isNotBlank(tmp) && "9".equals(tmp)){
							o_eqp_object_class = "41011";
							o_object_class = "41011"
							if(o_object_class == "8105"){
								o_object_class = "270"
							}
							o_network_type_top = "10";
							o_network_type = "1002";
						}
					}
				}

		if(o_object_class in ["270","41011"]){
			o_eqp_object_class = "41011";
			o_network_type_top = "10";
			o_network_type = "1002";
		}
	}

	private String setEqpProjectStatus(String project_status)
	{
		if (project_status == null || project_status == 0 || project_status == "0")
		{
			project_status = "1";
		}
		else
		{
			if(project_status.toInteger()>=4)
			{
				project_status = project_status.toInteger() + 4;
			}
			else
			{
				project_status = project_status.toInteger() + 2;
			}
		}
		return project_status
	}

	/**
	 * 信令点信息
	 */
	private void setSignaling()
	{

	}
	/**
	 * 告警标准的Key组装工具
	 * @param map
	 * @return
	 */
	private String getStandKey(Map map)
	{
		String mapping_type=map.get("mapping_type");
		String professional_type=map.get("professional_type");
		String object_class=map.get("object_class");
		String vendor_id=map.get("vendor_id");
		String alarm_title_text=map.get("alarm_title_text");
		String eqp_object_class=map.get("eqp_object_class");
		String probable_cause=map.get("probable_cause");
		String locate_name=map.get("locate_name");
		String vendor_severity=map.get("vendor_severity");
		String alarm_unit=map.get("alarm_unit");
		String standard_alarm_name =map.get("standard_alarm_name");
		String omc_alarm_id = map.get("omc_alarm_id");
		String seperator = map.get("seperator");

		//5+2
		String layer_rate = map.get("layer_rate");
		String board_type = map.get("board_type");

		if(StringUtils.isBlank(seperator))
		{
			seperator=":";
		}
		//return this.getKey(mapping_type, professional_type, object_class, vendor_id, alarm_title_text, eqp_object_class, probable_cause, locate_name, vendor_severity, alarm_unit, omc_alarm_id,standard_alarm_name,seperator);
		//5+2
		return this.getKey(mapping_type, professional_type, object_class, vendor_id, alarm_title_text, eqp_object_class, probable_cause, locate_name, vendor_severity, alarm_unit, omc_alarm_id,standard_alarm_name,layer_rate,board_type,seperator);
	}

	/**
	 * 组装Key的工具方法
	 * 需要与task的Key先后顺序一致
	 * @param pref
	 * @param args
	 * @return
	 */
	private String joinKey(String pref,Object... args)
	{
		String key = pref;
		for(Object str:args)
		{
			key=key+":"+String.valueOf(str);
		}
		return key;
	}
	/**
	 * 告警标准化拼Key,5+2
	 * @param mapping_type
	 * @param professional_type
	 * @param object_class
	 * @param vendor_id
	 * @param alarm_title_text
	 * @param eqp_object_class
	 * @param probable_cause
	 * @param locate_name
	 * @param vendor_severity
	 * @param alarm_unit
	 * @param layer_rate
	 * @param board_type
	 * @return
	 */
	private String getKey(String mapping_type,String professional_type,
						  String object_class,String vendor_id,
						  String alarm_title_text,String eqp_object_class,
						  String probable_cause,String locate_name,String vendor_severity,
						  String alarm_unit,String omc_alarm_id,String standard_alarm_name,
						  String layer_rate,String board_type,
						  String sep)
	{
		String key="tfm_alarm_stand_info";
		if(StringUtils.isNotBlank(standard_alarm_name))
		{
			key=key+sep+standard_alarm_name;
		}
		if(StringUtils.isNotBlank(professional_type))
		{
			key=key+sep+professional_type;
		}
		if(StringUtils.isNotBlank(object_class))
		{
			key=key+sep+object_class;
		}
		if(StringUtils.isNotBlank(vendor_id))
		{
			key=key+sep+vendor_id;
		}
		if(StringUtils.isNotBlank(alarm_title_text))
		{
			key=key+sep+alarm_title_text;
		}
		if(StringUtils.isNotBlank(eqp_object_class))
		{
			key=key+sep+eqp_object_class;
		}
		if(StringUtils.isNotBlank(probable_cause))
		{
			key=key+sep+probable_cause;
		}
		if(StringUtils.isNotBlank(locate_name))
		{
			key=key+sep+locate_name;
		}
		if(StringUtils.isNotBlank(vendor_severity))
		{
			key=key+sep+vendor_severity;
		}
		if(StringUtils.isNotBlank(mapping_type))
		{
			key=key+sep+new String(mapping_type.getBytes(),"GBK");
		}
		if(StringUtils.isNotBlank(alarm_unit))
		{
			key=key+sep+alarm_unit
		}
		if(StringUtils.isNotBlank(omc_alarm_id))
		{
			key=key+sep+omc_alarm_id;
		}
		if(StringUtils.isNotBlank(layer_rate))
		{
			key=key+sep+layer_rate;
		}
		if(StringUtils.isNotBlank(board_type))
		{
			key=key+sep+board_type;
		}
		return key;
	}

	/**
	 * 告警标准化拼Key,可以不再使用
	 * @param mapping_type
	 * @param professional_type
	 * @param object_class
	 * @param vendor_id
	 * @param alarm_title_text
	 * @param eqp_object_class
	 * @param probable_cause
	 * @param locate_name
	 * @param vendor_severity
	 * @param alarm_unit
	 * @return
	 */
	private String getKey(String mapping_type,String professional_type,
						  String object_class,String vendor_id,
						  String alarm_title_text,String eqp_object_class,
						  String probable_cause,String locate_name,String vendor_severity,String alarm_unit,String omc_alarm_id,String standard_alarm_name,String sep)
	{
		String key="tfm_alarm_stand_info";
		if(StringUtils.isNotBlank(standard_alarm_name))
		{
			key=key+sep+standard_alarm_name;
		}
		if(StringUtils.isNotBlank(professional_type))
		{
			key=key+sep+professional_type;
		}
		if(StringUtils.isNotBlank(object_class))
		{
			key=key+sep+object_class;
		}
		if(StringUtils.isNotBlank(vendor_id))
		{
			key=key+sep+vendor_id;
		}
		if(StringUtils.isNotBlank(alarm_title_text))
		{
			key=key+sep+alarm_title_text;
		}
		if(StringUtils.isNotBlank(eqp_object_class))
		{
			key=key+sep+eqp_object_class;
		}
		if(StringUtils.isNotBlank(probable_cause))
		{
			key=key+sep+probable_cause;
		}
		if(StringUtils.isNotBlank(locate_name))
		{
			key=key+sep+locate_name;
		}
		if(StringUtils.isNotBlank(vendor_severity))
		{
			key=key+sep+vendor_severity;
		}
		if(StringUtils.isNotBlank(mapping_type))
		{
			key=key+sep+new String(mapping_type.getBytes(),"GBK");
		}
		if(StringUtils.isNotBlank(alarm_unit))
		{
			key=key+sep+alarm_unit
		}
		if(StringUtils.isNotBlank(omc_alarm_id))
		{
			key=key+sep+omc_alarm_id;
		}
		return key;
	}

	/**
	 * 告警标准化拼Key,可以不再使用
	 * @param mapping_type
	 * @param professional_type
	 * @param object_class
	 * @param vendor_id
	 * @param alarm_title_text
	 * @param eqp_object_class
	 * @param probable_cause
	 * @param locate_name
	 * @param vendor_severity
	 * @param alarm_unit
	 * @return
	 */
	private String getKey(String mapping_type,String professional_type,
						  String object_class,String vendor_id,
						  String alarm_title_text,String eqp_object_class,
						  String probable_cause,String locate_name,String vendor_severity,String alarm_unit,String omc_alarm_id,String standard_alarm_name)
	{
		String key="tfm_alarm_stand_info";
		if(StringUtils.isNotBlank(standard_alarm_name))
		{
			key=key+":"+standard_alarm_name;
		}
		if(StringUtils.isNotBlank(professional_type))
		{
			key=key+":"+professional_type;
		}
		if(StringUtils.isNotBlank(object_class))
		{
			key=key+":"+object_class;
		}
		if(StringUtils.isNotBlank(vendor_id))
		{
			key=key+":"+vendor_id;
		}
		if(StringUtils.isNotBlank(alarm_title_text))
		{
			key=key+":"+alarm_title_text;
		}
		if(StringUtils.isNotBlank(eqp_object_class))
		{
			key=key+":"+eqp_object_class;
		}
		if(StringUtils.isNotBlank(probable_cause))
		{
			key=key+":"+probable_cause;
		}
		if(StringUtils.isNotBlank(locate_name))
		{
			key=key+":"+locate_name;
		}
		if(StringUtils.isNotBlank(vendor_severity))
		{
			key=key+":"+vendor_severity;
		}
		if(StringUtils.isNotBlank(mapping_type))
		{
			key=key+":"+new String(mapping_type.getBytes(),"GBK");
		}
		if(StringUtils.isNotBlank(alarm_unit))
		{
			key=key+":"+alarm_unit
		}
		if(StringUtils.isNotBlank(omc_alarm_id))
		{
			key=key+":"+omc_alarm_id;
		}
		return key;
	}
	/**
	 * 非传输、数据网告警标准化
	 * professional_type, 16
	 *  	   object_class,      17
	 * 	   vendor_id,         18
	 *  	   alarm_title_text,  19
	 *  	   eqp_object_class,  20
	 *  	   probable_cause,    21
	 *  	   locate_name,       22
	 *  	   vendor_severity    23
	 *  	   mapping_type       24
	 *  	   alarm_unit		  25
	 */
	private void setAlarmStandardNotCS()
	{
		//if(o_omc_id=="15001" || o_omc_id=="15002" || o_omc_id=="15003" || o_omc_id=="6109")
		if(o_omc_id=="6109"){
			return;
		}
		if(o_professional_type == "3"&&StringUtils.isBlank(o_idn)){
			//5+2 传输PTN
			//if(o_eqp_object_class != "2009"){
			o_standard_flag = "1";
			return;
			//}
		}
		if(o_standard_flag =="2"||StringUtils.isBlank(o_standard_flag))
		{
			Map keyMap = new HashMap();
			log.debug(o_fp0+"int_id["+o_int_id+"],professional_type["+o_professional_type+"],eqp_object_class["+o_eqp_object_class+"],object_class["+o_object_class+"],standard_alarm_name["+o_standard_alarm_name+"],vendor_id["+o_vendor_id+"]");
			//网管无告警上报 by shanchunlan@20150110
			//GCP-OMC断链 by shanchunlan@20150623
			if (o_alarm_source == "综合监控告警量检测" || o_alarm_title in ["26441660","26445340"])
			{
				//专业+告警标题
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.32");
				log.info(o_fp0+" con2.0 key="+this.getStandKey(keyMap));
			}
			//私有云标准化 added by lgy@20180606 required by sunyuqiu
			else if (o_professional_type == "9"&&o_vendor_id=="10007"){
				//专业(KEY)+厂家(KEY)+设备类型(KEY)+告警标题(KEY)+厂家告警级别
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.8");
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("alarm_title_text", o_title_text);
				log.debug(o_fp0+" con3.1 key="+this.getStandKey(keyMap));
			}
			//网投告警,by sunyuqiu@20140909
			else if(o_omc_id == "6608"&&o_vendor_id == "66"&& o_eqp_object_class == "68001")
			{
				//厂家+设备类型+告警标题+厂家告警级别
				this.setAlarmStandardInfo("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.3");
				log.info(o_fp0+" con2.5 key="+this.getStandKey(keyMap));
			}
			else if(o_org_type=="2")
			{
				//this.setAlarmStandardInfo("tfm_alarm_stand_info_pm:"+o_title_text+":"+o_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.1");
				//log.info(o_fp0+" performance 1 key="+"tfm_alarm_stand_info_pm:"+o_title_text+":"+o_object_class+":"+o_vendor_severity+":"+"标准");
				// key调整，增加gd.alarmStandard.pm.6 by shichao@20150914
				if(o_object_class in ["8101","8102","8103","8104","8105","8107","8109","81091"]){
					this.setAlarmStandardInfo("tfm_alarm_stand_info_pm:"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.6");
					log.info(o_fp0+" performance 6 key="+"tfm_alarm_stand_info_pm:"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准");
				}else{
					//key值调整由gd.alarmStandard.pm.1为gd.alarmStandard.pm.3,by shichao&shanchunlan@20150806
					this.setAlarmStandardInfo("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.3");
					log.info(o_fp0+" performance 1 key="+"tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准");
				}
			}
			else if(o_org_type=="2" && (o_vendor_type =="网元挂牌监控告警" || o_omc_id=="6608")){
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info_pm a where mapping_type='???' and eqp_object_class="+ o_object_class + " and alarm_title_text ='" + o_title_text + "'";
				this.setAlarmStandardInfo("tfm_alarm_stand_info_pm:"+o_object_class+":"+o_title_text+":"+"标准","gd.alarmStandard.pm.0");
				log.debug(o_fp0+" con1 key="+"tfm_alarm_stand_info_pm:"+o_object_class+":"+o_title_text+":"+"标准");
			}
			//工单风暴告警标准化  added by lgy@20180517
			else if(o_title_text.contains("[工单风暴]")){
				//专业+厂家+设备类型+告警标题
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" con3.6 key="+this.getStandKey(keyMap));
			}
			else if(o_org_type=="4" && o_vendor_type =="网元挂牌监控告警" )
			{
				//此告警使用业务归属位置来替换设备真实位置
				this.addRegionInfo("",i_city_name);
				this.setAlarmStandardInfo("tfm_alarm_stand_info_pm@"+o_title_text+"@"+o_object_class+"@标准@"+o_alarm_unit,"gd.alarmStandard.pm.2");
				log.info(o_fp0+" con.key.org_type.4="+"tfm_alarm_stand_info_pm:"+o_title_text+":"+o_object_class+":标准:"+o_alarm_unit);
			}
			//爱立信 智能网性能监控系统,OMM
			else if(o_professional_type=="1"&&o_vendor_id == "1"&&o_org_type=="2"&&(o_eqp_object_class=="12000"))
			{
				//专业+厂家+告警标题+设备类型+厂家告警级别
				this.setAlarmStandardInfo("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.3");
				//keyMap.put("professional_type", o_professional_type);
				//keyMap.put("vendor_id", o_vendor_id);
				//keyMap.put("alarm_title_text", o_title_text);
				//keyMap.put("eqp_object_class", o_eqp_object_class);
				//keyMap.put("vendor_severity", o_vendor_severity);
				//keyMap.put("mapping_type", "标准");
				//keyMap.put("taskName", "gd.alarmStandard.8");
				log.info(o_fp0+" con104 key="+this.getStandKey(keyMap));
			}

			//华为 智能网性能监控系统 CentrexAS,SCP,SMP
			else if(o_network_type_top!="20"&&o_professional_type=="1"&&o_vendor_id == "8"&&o_org_type=="2"&&(o_eqp_object_class=="120"||o_eqp_object_class=="111"||o_eqp_object_class=="110"))
			{
				//专业+厂家+告警标题+设备类型+厂家告警级别
				this.setAlarmStandardInfo("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.3");
				//keyMap.put("professional_type", o_professional_type);
				//keyMap.put("vendor_id", o_vendor_id);
				//keyMap.put("alarm_title_text", o_title_text);
				//keyMap.put("eqp_object_class", o_eqp_object_class);
				//keyMap.put("vendor_severity", o_vendor_severity);
				//keyMap.put("mapping_type", "标准");
				//keyMap.put("taskName", "gd.alarmStandard.8");
				log.info(o_fp0+" con103 key="+this.getStandKey(keyMap));
			}
			//guojingwei 20080813 added:
			//条件o_standard_alarm_name-->o_locate_name,by shanchunlan@20140612
			//双重（ID+标题) ,by shanchunlan@20140618
			//else if(StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "8"&& o_eqp_object_class == "130"  && (o_probable_cause=="2371" || o_probable_cause=="2396"  || o_probable_cause=="2398" || o_probable_cause=="2400" ))

			else if(StringUtils.isNotBlank(o_locate_name)&&o_vendor_id == "8"&& o_eqp_object_class == "130" && o_title_text=="不可用电路数超过阈值"&& (o_probable_cause=="2371" || o_probable_cause=="2396"  || o_probable_cause=="2398" || o_probable_cause=="2400" ))
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and alarm_title_text='" + o_title_text + "' and eqp_object_class=" + o_eqp_object_class +" and omc_alarm_id ='" + o_probable_cause+"'"+" and alarm_unit ='" + o_special_field18+"'";
				//key=this.getKey(null, null,null, o_vendor_id, o_title_text, o_eqp_object_class, o_probable_cause, null, null, o_special_field18);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				//keyMap.put("alarm_unit", o_special_field18);
				//update by shanchunlan@20140516,o_special_field18->o_locate_name
				keyMap.put("alarm_unit", o_locate_name);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.17");
				log.info(o_fp0+" con2 key="+this.getStandKey(keyMap));
			}
			//标准化表中无alarm_unit,去掉
			//else if(StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "8"&& (o_object_class=="200"))
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class="+ o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"' and alarm_title_text ='" + i_AlarmTitleTxt + "'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("eqp_object_class", o_eqp_object_class);
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("alarm_title_text", i_title_text);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("taskName", "gd.alarmStandard.18");
			//	log.info(o_fp0+" con3 key="+this.getStandKey(keyMap));
			//}
			//重复,去掉--标准化表中无alarm_unit,去掉
			//else if(StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "8"&& (o_object_class == "201" || o_object_class == "300"))
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class="+ o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("eqp_object_class", o_eqp_object_class);
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("taskName", "gd.alarmStandard.20");
			//	log.info(o_fp0+" add hw-wx-2 con16 key="+this.getStandKey(keyMap));
			//}
			//标准化表中无alarm_unit,去掉
			//else if(StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "8" && (o_object_class == "9201" || o_object_class == "9300" ))
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"' and alarm_title_text ='" + i_AlarmTitleTxt + "'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("object_class", o_object_class);
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("alarm_title_text", i_title_text);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("taskName", "gd.alarmStandard.15");
			//	log.info(o_fp0+" con4 key="+this.getStandKey(keyMap));
			//}
			//标准化表中无alarm_unit,去掉
			//else if(StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "8"&&(o_probable_cause=="2371" || o_probable_cause=="2396"  || o_probable_cause=="2398" || o_probable_cause=="2400") )
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and standard_alarm_name='" + o_standard_alarm_name + "' and eqp_object_class=" + o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("eqp_object_class", o_eqp_object_class);
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("standard_alarm_name", o_standard_alarm_name);
			//	keyMap.put("taskName", "gd.alarmStandard.1");
			//	log.info(o_fp0+" con5 key="+this.getStandKey(keyMap));
			//}
			//去掉，合并到con6
			//else if (StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&StringUtils.isBlank(o_locate_name))	// Eric
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=1 and standard_alarm_name='" + o_standard_alarm_name + "' and alarm_title_text='" + o_title_text + "' and eqp_object_class=" + o_eqp_object_class + " and vendor_severity='"+o_vendor_severity+"'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("eqp_object_class", o_eqp_object_class);
			//	keyMap.put("vendor_severity", o_vendor_severity);
			//	keyMap.put("alarm_title_text", o_title_text);
			//	keyMap.put("standard_alarm_name", o_standard_alarm_name);
			//	keyMap.put("taskName", "gd.alarmStandard.30");
			//	log.info(o_fp0+" con6-1 key="+this.getStandKey(keyMap));
			//}
			//爱立信HSS标准化,shanchunlan@20160613 ,by liucaiyong
			else if (StringUtils.isNotBlank(o_locate_name)&&o_vendor_id == "1"&& o_object_class in ["102","8109","81091"]) // Eric
			{
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("object_class", o_object_class);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("alarm_unit", o_locate_name);
				keyMap.put("taskName", "gd.alarmStandard.33");
				log.info(o_fp0+" con6.1 key="+this.getStandKey(keyMap));
			}
			//爱立信标准化
			//add daixueyue by 20130905
			//合并，过滤条件 o_standard_alarm_name-->o_locate_name，con6-1去掉
			//else if (StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "1") // Eric
			else if (StringUtils.isNotBlank(o_locate_name)&&o_vendor_id == "1") // Eric
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=1 and standard_alarm_name='" + o_standard_alarm_name + "' and alarm_title_text='" + o_title_text + "' and eqp_object_class=" + o_eqp_object_class + " and vendor_severity='"+o_vendor_severity+"'";
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("alarm_title_text", o_title_text);
				//keyMap.put("standard_alarm_name", o_standard_alarm_name);
				//update by shanchunlan@20140516,standard_alarm_name->alarm_unit,o_standard_alarm_name->o_locate_name
				keyMap.put("alarm_unit", o_locate_name);
				keyMap.put("taskName", "gd.alarmStandard.0");
				log.info(o_fp0+" con6 key="+this.getStandKey(keyMap));
			}


			else if(StringUtils.isBlank(o_standard_alarm_name)&&(o_alarm_title =="99" || o_alarm_title =="98" || o_alarm_title =="1517773" || o_alarm_title =="15199964"|| o_alarm_title =="9645541"))
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where mapping_type='???' and alarm_title_text='"+ o_title_text +"'";
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.25");
				keyMap.put("seperator","@");
				log.info(o_fp0+" con7 key="+this.getStandKey(keyMap));
			}
			//else if (StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "8" &&o_object_class == "9201" )
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("object_class", o_object_class);
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("taskName", "gd.alarmStandard.14");
			//	log.info(o_fp0+" con8 key="+this.getStandKey(keyMap));
			//}
			////华为BSC 标准化by liucaiyong @2013101211, 合并到con50
			//else if(StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8" &&(o_object_class=="200") )
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class="+ o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"' and alarm_title_text ='" + i_AlarmTitleTxt + "'";
			//keyMap.put("vendor_id", o_vendor_id);
			//keyMap.put("eqp_object_class", o_eqp_object_class);
			//keyMap.put("omc_alarm_id", o_probable_cause);
			//keyMap.put("alarm_title_text", i_title_text);
			//keyMap.put("mapping_type", "标准");
			//keyMap.put("taskName","gd.alarmStandard.18");
			//log.info(o_fp0+" con9 key="+this.getStandKey(keyMap));
			//}

			//MIQ性能告警标准化
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_sub_alarm_type=="970")
			{
				o_vendor_id = "956";
				o_vendor_name = "MIQ系统";

				//专业+厂家+设备类型+告警标题  +厂家告警级别
				this.setAlarmStandardInfo("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.3");
				//keyMap.put("professional_type", o_professional_type);
				//keyMap.put("vendor_id", o_vendor_id);
				//keyMap.put("eqp_object_class", o_object_class);
				//keyMap.put("mapping_type", "标准");
				//keyMap.put("alarm_title_text", i_title_text);
				//keyMap.put("taskName", "gd.alarmStandard.8");
				//keyMap.put("vendor_severity", o_vendor_severity);
				o_org_type ="2";
				log.info(o_fp0+" con98 key="+this.getStandKey(keyMap));
			}
			//全流程监控告警标准化
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "150"&&o_eqp_object_class=="150903")
			{
				//专业+厂家+设备类型+告警标题+厂家告警级别
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", i_title_text);
				keyMap.put("taskName", "gd.alarmStandard.8");
				keyMap.put("vendor_severity", o_vendor_severity);
				log.info(o_fp0+" con99 key="+this.getStandKey(keyMap));
			}
			//中兴LTE-CG标准化
			else if (StringUtils.isBlank(o_standard_alarm_name)&&o_professional_type == "2"&&o_eqp_object_class == "124"&&o_vendor_id == "7" )
			{
				//专业+厂家+设备类型+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.5");
				log.info(o_fp0+" con100 key="+this.getStandKey(keyMap));
			}

			else if(o_vendor_id == "8" &&(o_object_class == "201" || o_object_class == "300") )
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class="+ o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" hw-wx-1 con16 key="+this.getStandKey(keyMap));
			}
			//else if( StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8" &&(o_object_class == "9201" || o_object_class == "9300" ))
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"' and alarm_title_text ='" + i_AlarmTitleTxt + "'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("object_class", o_object_class);
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("alarm_title_text", i_title_text);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("taskName", "gd.alarmStandard.15");
			//	log.info(o_fp0+" con10 key="+this.getStandKey(keyMap));
			//}

			//删除 华为OMC ，因为花名册无相应数据,by shanchunlan@20140618
			//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8" &&o_object_class == "100" && o_tmsc_cat == "20")
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class=10020 and omc_alarm_id ='" + o_probable_cause+"'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("eqp_object_class", "10020");
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("taskName", "gd.alarmStandard.20");
			//	log.info(o_fp0+" con11 key="+this.getStandKey(keyMap));
			//}
			//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_object_class == "100" && o_tmsc_cat == "21")
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class=10021 and omc_alarm_id ='" + o_probable_cause+"'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("eqp_object_class", "10021");
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("taskName", "gd.alarmStandard.20");
			//	log.info(o_fp0+" con12 key="+this.getStandKey(keyMap));
			//}

			//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_object_class == "108" && o_tmsc_cat == "15")
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class=10815 and omc_alarm_id ='" + o_probable_cause+"'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("eqp_object_class", "10815");
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("taskName", "gd.alarmStandard.20");
			//	log.info(o_fp0+" con13 key="+this.getStandKey(keyMap));
			//}
			//恢复华为MGW\MSS加一级汇接
			else if(StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_object_class == "131" && o_tmsc_cat == "2")
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class=131119 and omc_alarm_id ='" + o_probable_cause+"'";
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", "131119");
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con14 key="+this.getStandKey(keyMap));
			}
			else if(StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_object_class == "130" && o_tmsc_cat == "2")
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class=130118 and omc_alarm_id ='" + o_probable_cause+"'";
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", "130118");
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con15 key="+this.getStandKey(keyMap));
			}

			//标准化 by liucaiyong @20131012 ，原华为MGW\MSS加一级汇接，改成 HLR	STP	MGW	MSC_Server	OMC
			else if(StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&(o_object_class == "102"||o_object_class == "108" || o_object_class == "130"|| o_object_class == "131" || o_object_class == "100"  ))
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class=131119 and omc_alarm_id ='" + o_probable_cause+"'";
				//专业+厂家+设备类型+告警标题+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", i_title_text);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.7");
				log.info(o_fp0+" con14-1 key="+this.getStandKey(keyMap));
			}

			//华为标准化by liucaiyong @2013101211,FEP		SCP	SMP	VC,暂时忽略I2000
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_network_type_top!="20"&&o_vendor_id == "8"&& (o_object_class=="116"||o_object_class=="111"||o_object_class=="110"||o_object_class=="112"||o_object_class=="140001"))
			{
				//专业+厂家+设备类型+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.5");
				log.info(o_fp0+" con41 key="+this.getStandKey(keyMap));
			}
			//华为SAU标准化by liucaiyong @20170613
			else if (o_network_type_top!="20"&&o_vendor_id == "8"&& o_eqp_object_class=="115")
			{
				//专业+厂家+设备类型+告警标题
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" con42-1 key="+this.getStandKey(keyMap));
			}
			//华为标准化by liucaiyong @2013101211,SAU
			else if (StringUtils.isBlank(o_standard_alarm_name)&&o_network_type_top!="20"&&o_vendor_id == "8"&& o_eqp_object_class=="115")
			{
				/*
				//专业+厂家+设备类型+告警对象类型+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("object_class", o_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				log.info(o_fp0+" add con42 key="+this.getStandKey(keyMap));
				*/
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.5");

				log.info(o_fp0+" con42 key="+this.getStandKey(keyMap));

			}
			//华为  标准化by liucaiyong @2013101211,ENODEB
			else if (StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "8"&& (o_object_class=="8104"||o_object_class=="8105"))
			{
				//特殊标准化，厂家+设备类型+厂家告警ID+告警解释辅助字段,update by shanchunlan@20140521
				keyMap.put("vendor_id", o_vendor_id);
				if (StringUtils.isNotBlank(o_locate_name))
				{
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_unit", o_locate_name);
					keyMap.put("taskName", "gd.alarmStandard.29");
				}
				else
				{
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("taskName", "gd.alarmStandard.20");
				}
				keyMap.put("omc_alarm_id", o_probable_cause);
				//keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con47-1 key="+this.getStandKey(keyMap));
			}
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_eqp_object_class=="9200")
			{
				//厂家+设备类型+告警对象类型+厂家告警ID
				//-->厂家+设备类型+厂家告警ID,updated by liucaiyong @20131202
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				//keyMap.put("object_class", o_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				//keyMap.put("taskName", "gd.alarmStandard.28");
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con53 key="+this.getStandKey(keyMap));
			}

			//华为 DRA ,by liucaiyong @20140313
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "8" && o_object_class=="8107")
			{
				//厂家+告警对象类型+厂家告警ID
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("object_class", o_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.14");
				log.info(o_fp0+" con54 key="+this.getStandKey(keyMap));
			}

			//华为 UC (MMCAS,ATAE) ,by liucaiyong @20140313
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "8" && (o_object_class=="7000"||o_object_class=="7001"))
			{
				//专业+厂家+告警标题+设备类型+厂家告警级别
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.8");
				log.info(o_fp0+" con55 key="+this.getStandKey(keyMap));
			}



			//华为标准化by liucaiyong @2013101211,
			//RNC	BSC	HSS	PCSCF	USCDB	SLF	IMSHSS	MRFP	MRFC	ISBG	IMGW
			//VIG_MGW	IMSCG	VIG_Server	SPG	CGP	SBC	MGCF	MMTEL	ENUM/DNS	CTXAS
			//VIG_MGW与VIG_Server都有两个
			//MMTAS IMSCG ENUM/DNS IMGW CSCF SCSCF ICSCF, by shanchunlan@20150623
			//SAEGW MME ,by shichao@20150920
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&(o_object_class in ["200","8109","6101","6122","6110","6109","6106","6105","6123","19756","6114","6120","6112","6107","19751","120","6113","6119","19753","6121","19754","6117","6127","6108","6111","6102","6103"]))
			{
				//厂家+设备类型+厂家告警ID
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con50 key="+this.getStandKey(keyMap));
			}
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&(o_eqp_object_class in ["8101","8102"]))
			{
				//厂家+设备类型+厂家告警ID
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con50-1 key="+this.getStandKey(keyMap));
			}
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&(o_eqp_object_class in ["124","8106"]))
			{
				//华为 PCRF/CG 厂家+设备类型+厂家告警ID+告警对象类型
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("object_class", o_object_class);
				keyMap.put("taskName", "gd.alarmStandard.28");
				log.info(o_fp0+" con50-2 key="+this.getStandKey(keyMap));
			}

			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_omc_id == "1505")
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and alarm_title_text='" + o_title_text + "' and eqp_object_class=" + o_eqp_object_class + " and vendor_severity='"+o_vendor_severity+"'";
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.22");
				log.info(o_fp0+" con16 1 key="+this.getStandKey(keyMap));
			}
			//华为PCRF,required by shanchunlan@20140404
			//增加华为TG,AGCF added by lgy required by shanchunlan@20180814
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8" && (o_object_class=="8106" || o_eqp_object_class=="6128" || o_eqp_object_class=="6161"))
			{
				//专业+厂家+设备类型+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.5");
				log.info(o_fp0+" con161 key="+this.getStandKey(keyMap));
			}
			else if (StringUtils.isBlank(o_standard_alarm_name)&&o_network_type_top!="20" &&o_vendor_id == "8" && (o_omc_id != "6601" && o_omc_id != "6602" && o_omc_id != "6607" ))
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and alarm_title_text='" + o_title_text + "' and eqp_object_class=" + o_eqp_object_class + " and vendor_severity='"+o_vendor_severity+"'";
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con16 2 key="+this.getStandKey(keyMap));
			}
			//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&(o_object_class == "9200" || o_object_class == "9201" || o_object_class == "9300"))
			//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&(o_object_class == "9201" || o_object_class == "9300"))
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=7 and mapping_type='???' and object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("object_class", o_object_class);
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("taskName", "gd.alarmStandard.14");
			//	log.info(o_fp0+" con17 key="+this.getStandKey(keyMap));
			//}
			//中兴PSBC标准化 added by lgy@20180508
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id=="7"&&o_eqp_object_class=="6147")
			{
				//厂家+设备类型+厂家告警id+告警标题
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.18");
				log.info(o_fp0+" con113 key="+this.getStandKey(keyMap));
			}
			//中兴PSBC标准化,shanchunlan@20170614s
			else if (StringUtils.isBlank(o_standard_alarm_name) &&  o_vendor_id == "7" && o_eqp_object_class == "6112")
			{
				//厂家+设备类型+厂家告警ID
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con477 key="+this.getStandKey(keyMap));
			}

			//中兴SGC,BGW标准化,liucaiyong@20170803
			else if (StringUtils.isBlank(o_standard_alarm_name) &&  o_vendor_id == "7" && o_eqp_object_class in ["6132","6131"])
			{
				//专业+厂家+设备类型+告警标题+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.7");
				log.info(o_fp0+" con478 key="+this.getStandKey(keyMap));
			}
			//中兴RNC标准化 by liucaiyong@20131012 ，从con17中分离出
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&o_eqp_object_class == "9200")
			{
				//厂家+设备类型+告警标题+厂家告警ID
				//-->厂家+设备类型+厂家告警ID ,updated by liucaiyong@20131202
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				//keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("omc_alarm_id", o_probable_cause);
				//keyMap.put("taskName", "gd.alarmStandard.18");
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con45 key="+this.getStandKey(keyMap));
			}
			//合并中兴OMC-TDOMCR、TDOMCS(con18\con19)-->中兴OMC(con18),by shanchunlan@20140618
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&o_object_class == "100")
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=7 and mapping_type='???' and eqp_object_class=10020 and alarm_title_text ='" + o_title_text + "'";
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.23");
				keyMap.put("seperator","@");
				log.info(o_fp0+" con18 key="+this.getStandKey(keyMap));
			}
			//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&o_object_class == "100" && o_tmsc_cat == "20")
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=7 and mapping_type='???' and eqp_object_class=10020 and alarm_title_text ='" + o_title_text + "'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("eqp_object_class", "10020");
			//	keyMap.put("alarm_title_text", o_title_text);
			//	keyMap.put("taskName", "gd.alarmStandard.23");
			//	keyMap.put("seperator","@");
			//	log.info(o_fp0+" con18 key="+this.getStandKey(keyMap));
			//}
			//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&o_object_class == "100" && o_tmsc_cat == "21")
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=7 and mapping_type='???' and eqp_object_class=10021 and alarm_title_text ='" + o_title_text + "'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("eqp_object_class", "10021");
			//	keyMap.put("alarm_title_text", o_title_text);
			//	keyMap.put("taskName", "gd.alarmStandard.23");
			//	keyMap.put("seperator","@");
			//	log.info(o_fp0+" con19 key="+this.getStandKey(keyMap));
			//}
			//告警标准化 by liucaiyong@20131012,原中兴MGW,MSS 调整成 HLR	MGW	MSC_Server
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&(o_object_class == "102"||o_object_class == "131"||o_object_class == "130"))
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"'" + " and vendor_severity='"+o_vendor_severity+"' and professional_type = " + o_professional_type + " and alarm_title_text ='" + o_title_text + "'";
				//专业+厂家+设备类型+告警标题
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" con20 key="+this.getStandKey(keyMap));
			}
			//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&o_object_class == "130")
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where mapping_type='???' and vendor_id=7 and vendor_severity='"+o_vendor_severity+"' and object_class="+ o_object_class + "and alarm_title_text ='" + o_title_text + "'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("object_class", o_object_class);
			//	keyMap.put("vendor_severity", o_vendor_severity);
			//	keyMap.put("alarm_title_text", o_title_text);
			//	keyMap.put("taskName", "gd.alarmStandard.16");
			//	log.info(o_fp0+" con21 key="+this.getStandKey(keyMap));
			//}

			//中兴LTE告警 标准化 8105  add by 20120328
			//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& o_object_class=="8105")
			//{
			//	keyMap.put("professional_type", o_professional_type);
			//	keyMap.put("object_class", o_object_class);
			//	keyMap.put("vendor_id", o_vendor_id);
			//	//keyMap.put("eqp_object_class", o_eqp_object_class);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("vendor_severity", o_vendor_severity);
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("taskName", "gd.alarmStandard.6");
			//	log.info(o_fp0+" zh.lte.1 key="+this.getStandKey(keyMap));
			//}

			//中兴LTE告警 标准化 8104 by liucaiyong@20131012,从zh.lte.1中分离出来
			//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& (o_object_class=="8104"||o_object_class=="8105"||o_object_class=="8101" ||o_object_class=="8102"))
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& (o_object_class in ["8104","8105"]))
			{
				//厂家+设备类型+厂家告警ID
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				if(StringUtils.isNotBlank(o_locate_name)){
					//中兴“天线校正失败”告警标准化,厂家+设备类型+厂家告警ID+告警解释辅助字段,update by sunyuqiu@20150917
					keyMap.put("alarm_unit", o_locate_name);
					keyMap.put("taskName", "gd.alarmStandard.29");
				}
				else{
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.20");
				}
				log.info(o_fp0+" zh.lte.1-1 key="+this.getStandKey(keyMap));
			}
			//东信数据网管，by shichao@20151126
			else if( o_vendor_id in ["0","7","8","101","661"] && o_eqp_object_class == "100" ){
				//厂家+设备类型+告警标题+厂家告警ID
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.18");
				log.info(o_fp0+" con109 key="+this.getStandKey(keyMap));
			}
			// 东信数据网IMS数通
			// else if(o_omc_id in ["6601", "6602", "6603"] && o_extra_id3 == "349"){
			// o_network_type_top = "2"; // 一级专业：核心网
			// o_network_type = "223"; // 二级专业：PS域-GPRS
			// }
			//中兴 MME SAEGW PCRF，by shichao@20150921
			else if(StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& (o_eqp_object_class in ["8101","8102","8106"])){
				//厂家+设备类型+告警标题+厂家告警ID
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.18");
				log.info(o_fp0+" con109 key="+this.getStandKey(keyMap));
			}
			//中兴LTE告警 标准化 8101,8108,8010 add by 20120328
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& (o_eqp_object_class=="8101" || o_eqp_object_class=="8108" || o_eqp_object_class=="8010"))
			{
				keyMap.put("professional_type", o_professional_type);
				//keyMap.put("object_class", o_object_class);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.5");
				log.info(o_fp0+" zh.lte.2 key="+this.getStandKey(keyMap));
			}

			//中兴LTE告警 标准化 8109 by liucaiyong@20131012,从zh.lte.2中分离出来
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& o_eqp_object_class=="8109")
			{
				//厂家+设备类型+厂家告警ID
				//keyMap.put("vendor_id", o_vendor_id);
				//keyMap.put("eqp_object_class", o_eqp_object_class);
				//keyMap.put("mapping_type", "标准");
				//keyMap.put("omc_alarm_id", o_probable_cause);

				//改成 专业+厂家+设备类型+告警标题
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" zh.lte.2-1 key="+this.getStandKey(keyMap));
			}

			//中兴无线BSC告警 标准化 200 by liucaiyong@2014021317
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& o_eqp_object_class=="200")
			{
				//厂家+设备类型+厂家告警id+告警标题
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.18");
				log.info(o_fp0+" con111 key="+this.getStandKey(keyMap));
			}

			else if(StringUtils.isBlank(o_standard_alarm_name)&&(o_alarm_title =="649991"||o_alarm_title =="649992"||o_alarm_title =="649993"||o_alarm_title =="649994"||o_alarm_title =="649995"||o_alarm_title =="649996"||o_alarm_title =="649997"||o_alarm_title =="649998"||o_alarm_title =="649999"))
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where mapping_type='???'  and eqp_object_class="+ o_eqp_object_class + " and alarm_title_text ='" + o_title_text + "'";
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.26");
				log.info(o_fp0+" con22 key="+this.getStandKey(keyMap));
			}
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_object_class == "121" || o_object_class == "122"))
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where mapping_type='???' and professional_type = 2 and vendor_id=" + o_vendor_id + " and eqp_object_class = " + o_eqp_object_class + " and alarm_title_text ='" + o_title_text + "' and rownum < 2 ";
				keyMap.put("professional_type", "2");
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" con23 key="+this.getStandKey(keyMap));
			}
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "81")
			{
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.27");
				keyMap.put("seperator","@");
				log.info(o_fp0+" con24 key="+this.getStandKey(keyMap));
			}
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "9004")
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=9004 and eqp_object_class="+ o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"'" + " and professional_type = " + o_professional_type;
				keyMap.put("vendor_id", "9004");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("taskName", "gd.alarmStandard.10");
				log.info(o_fp0+" con25 key="+this.getStandKey(keyMap));
			}
			//铁塔告警,liucaiyong@20170921 by sunyuqiu
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1038"&&o_eqp_object_class == "30013")
			{
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" con26 key="+this.getStandKey(keyMap));
			}
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "14"&&o_object_class != "11004")
			{
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.8");
				log.info(o_fp0+" con14.0 key="+this.getStandKey(keyMap));
			}
			// by liucaiyong@20131012 ，移除RNC
			//else if (StringUtils.isBlank(o_standard_alarm_name)&&(o_object_class == "9200" || o_object_class == "9201" || o_object_class == "9300"))
			//else if (StringUtils.isBlank(o_standard_alarm_name)&&(o_object_class == "9201" || o_object_class == "9300"))
			//{
			//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
			//	keyMap.put("vendor_id", o_vendor_id);
			//	keyMap.put("mapping_type", "标准");
			//	keyMap.put("object_class", o_object_class);
			//	keyMap.put("omc_alarm_id", o_probable_cause);
			//	keyMap.put("taskName", "gd.alarmStandard.14");
			//	log.info(o_fp0+" con26 key="+this.getStandKey(keyMap));
			//}
			else if (StringUtils.isBlank(o_standard_alarm_name)&&o_object_class == "100" && o_tmsc_cat == "20")
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and eqp_object_class=10020 and omc_alarm_id ='" + o_probable_cause+"'";
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", "10020");
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con27 key="+this.getStandKey(keyMap));
			}
			else if (StringUtils.isBlank(o_standard_alarm_name)&&o_object_class == "100" && o_tmsc_cat == "21")
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and eqp_object_class=10021 and omc_alarm_id ='" + o_probable_cause+"'";
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", "10021");
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con28 key="+this.getStandKey(keyMap));
			}

			// add by daixueyue 20130906

			else if (o_object_class == "11004" )
			{
				//sql = select info_id,network_type,redefine_severity,send_jt_flag,redefine_type,logic_type,logic_sub_type,standard_alarm_name,standard_alarm_id,effect_ne,effect_service,alarm_value,preprocess_manner,province_process_flag,department_process_flag,ticket_confirm_manner,professional_type,    object_class,  vendor_id,eqp_object_class,     alarm_title_text,     probable_cause,locate_name,vendor_severity,mapping_type,alarm_unit,omc_alarm_id,alarm_explanationfrom tfm_alarm_stand_info where object_class=11004 and professional_type = xxx and eqp_object_class = xxx and alarm_title_text = xxx
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("object_class","11004");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.99.3");
				log.info(o_fp0+" con29 key="+this.getStandKey(keyMap));
			}
			// end add by daixueyue 20130906
			//else if(StringUtils.isBlank(o_standard_alarm_name)&&o_omc_id in ["6101","6102"] )////动环增加OMC，131107
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_professional_type=="4"&& o_eqp_object_class!="51001")
			{
				o_special_field22=o_ne_location;
				String key=this.joinKey("tfm_alarm_stand_info", "4",o_title_text,o_eqp_object_class);
				log.info(o_fp0+" con29 key="+key);
				Object[] pstand = util.getObject(this.ALARMSTANDARDCACHE, key,"gd.alarmStandard.11")
				List pwlist = pstand==null?null:Arrays.asList(pstand);
				if (pwlist != null&&!pwlist.isEmpty()) {
					o_severity_keycode=Util.getTempV(pwlist, 1);
					o_org_severity=Util.getTempV(pwlist, 2);
					o_redefine_type=Util.getTempV(pwlist, 4);
					o_send_jt_flag=Util.getTempV(pwlist, 3);
					o_logic_alarm_type=Util.getTempV(pwlist, 5);
					o_logic_sub_alarm_type=Util.getTempV(pwlist, 6);
					o_standard_alarm_name=Util.getTempV(pwlist,7);
					o_standard_alarm_id=Util.getTempV(pwlist, 8);
					o_effect_ne=Util.getTempV(pwlist, 9);
					o_effect_service=Util.getTempV(pwlist, 10);
					o_alarm_value=Util.getTempV(pwlist, 11);
					o_preprocess_manner=Util.getTempV(pwlist, 12);
					o_province_process_flag=Util.getTempV(pwlist, 13);
					o_department_process_flag=Util.getTempV(pwlist, 14);
					o_ticket_confirm_manner=Util.getTempV(pwlist, 15);
					//o_eqp_object_class=Util.getTempV(olist, 20);
					o_special_field20 = Util.getTempV(pwlist, 27);
					o_standard_flag="2";
					//'6'||c.vendor_code||'-'||d.eqp_type_code||'-00-'||a.standard_alarm_id
					String powerStandardId="6";
					String vendorKey = this.joinKey("temp_dh_ams_vendor_code", o_vendor_name);
					Object[] vendors = util.getObject(this.CUSTOMCACHE, vendorKey,"gd.alarmStandard.6101.vendor");
					if(vendors!=null)
					{
						powerStandardId = powerStandardId+vendors[1]+"-";
					}
					String eqpTypeCodeKey=this.joinKey("temp_dh_ams_eqp_type_code", i_special_field16);
					Object[] eqpTypeCodes = util.getObject(this.CUSTOMCACHE, eqpTypeCodeKey,"gd.alarmStandard.6101.eqp_type");
					if(eqpTypeCodes!=null)
					{
						powerStandardId = powerStandardId+eqpTypeCodes[1]+"-00-"+o_standard_alarm_id;
					}
					o_standard_alarm_id = powerStandardId;
				} else {
					o_org_severity="1";
					o_standard_flag="3";
					o_send_jt_flag="0";
				}
				o_redefine_severity = o_org_severity;
			}
			else if(o_professional_type == "99") //客户侧设备告警标准化，lizhangmiao 20121024
			{
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", "99");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("object_class", o_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("taskName", "gd.alarmStandard.99.1");
				log.info(o_fp0+" con35 key="+this.getStandKey(keyMap));
			}
			//zhongfei 爱立信IMS标准化
			//else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1" && (o_object_class== "6130" || o_object_class== "6106" || o_object_class== "6129" || o_object_class== "6125"))
			//{
			//keyMap.put("vendor_id", o_vendor_id);
			//keyMap.put("mapping_type", "标准");
			//keyMap.put("professional_type", o_professional_type);
			//keyMap.put("eqp_object_class", o_eqp_object_class);
			//keyMap.put("alarm_title_text", o_title_text);
			//keyMap.put("taskName", "gd.alarmStandard.4");
			//log.info(o_fp0+" con35 key="+this.getStandKey(keyMap));
			//}
			//EMA的ID由6128调整为20810  by lgy@20180816
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1" && (o_object_class== "20810" || o_object_class== "6109"|| o_object_class== "6123" || o_object_class== "6113"))
			{
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("taskName", "gd.alarmStandard.8");
				log.info(o_fp0+" con36 key="+this.getStandKey(keyMap));
			}
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_network_type_top!="20"&&o_vendor_id == "1" && o_object_class=="6115")
			{
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("object_class", o_object_class);
				keyMap.put("taskName", "gd.alarmStandard.99.1");
				log.info(o_fp0+" con37 key="+this.getStandKey(keyMap));
			}
			//虚拟化华为，爱立信1标准化
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_network_type_top=="20"&&((o_vendor_id == "1" && (o_eqp_object_class in ["508","1614"]))||(o_vendor_id == "8" && (o_eqp_object_class in ["901","905"]))))
			{
				//专业+厂家+设备类型+告警标题+厂家告警级别+厂家告警ID
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", o_network_type_top);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.34");
				log.info(o_fp0+" con49 key="+this.getStandKey(keyMap));
			}
			//虚拟化华为，爱立信2标准化
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_network_type_top=="20"&&((o_vendor_id == "1" && (o_eqp_object_class in ["901","1609","1611","905"]))||(o_vendor_id == "8" && o_eqp_object_class in ["1600","111","115"])))
			{
				//专业+厂家+设备类型+告警定位对象类型+告警标题+厂家告警级别
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", o_network_type_top);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("object_class", o_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("taskName", "gd.alarmStandard.99.1");
				log.info(o_fp0+" con57 key="+this.getStandKey(keyMap));
			}
			//虚拟化爱立信CSCF、ATS   added by lgy@20180712  NFV 爱立信 默认标准化逻辑
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_network_type_top=="20"&&o_vendor_id == "1")
			{
				//专业+厂家+设备类型+告警标题+厂家告警级别
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", o_network_type_top);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("taskName", "gd.alarmStandard.8");
				log.info(o_fp0+" con56 key="+this.getStandKey(keyMap));
			}
			//虚拟化华为 虚拟机、PIM、集中式存储、VIM、机架式服务器
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_network_type_top=="20"&&(o_vendor_id == "8" && (o_eqp_object_class in ["1617","508","1614","1615","1620"])))
			{
				//专业+厂家+设备类型+告警标题+厂家告警级别+厂家告警ID+告警定位对象类型
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", o_network_type_top);
				keyMap.put("object_class", o_object_class);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.35");
				log.info(o_fp0+" con58 key="+this.getStandKey(keyMap));
			}
			//VolLte告警标准化 VoLTEAS/MGCF/IMGW，by shichao@20150324
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1" && (o_eqp_object_class in ["6117","6107","6108"]))
			{
				//专业+厂家+设备类型+告警标题+厂家告警级别
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("taskName", "gd.alarmStandard.8");
				log.info(o_fp0+" con38 key="+this.getStandKey(keyMap));
			}
			//爱立信DRA标准化,by shichao@20150324
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1" && o_eqp_object_class=="8107")
			{
				//厂家+设备类型+告警标题
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.23");
				keyMap.put("seperator","@");
				log.info(o_fp0+" con38.1 key="+this.getStandKey(keyMap));
			}
			//爱立信PSBC标准化,by shichao@20150324
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&& o_eqp_object_class=="6131")
			{
				//专业+厂家+设备类型+告警标题
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" con38.2 key="+this.getStandKey(keyMap));
			}
			//爱立信VOLTEBGW,by shichao@20150623
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&& o_eqp_object_class=="6132")
			{
				//专业+厂家+设备类型+告警标题+厂家告警级别
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.8");
				keyMap.put("vendor_severity", o_vendor_severity);
				log.info(o_fp0+" con39 key="+this.getStandKey(keyMap));
			}
			//贝尔STP标准化by liucaiyong @2013101211
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "12" && (o_object_class=="108"||o_object_class=="8107"))
			{
				//厂家+设备类型+告警标题
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.23");
				keyMap.put("seperator","@");
				log.info(o_fp0+" con40 key="+this.getStandKey(keyMap));
			}

			//爱立信 SCP 标准化by liucaiyong @2013101211
			//scp 有111,150-网元类型-智能网监控系统
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_network_type_top!="20"&&o_vendor_id == "1"&& o_object_class=="111")
			{
				//专业+厂家+设备类型+告警标题
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", i_title_text);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" con43 key="+this.getStandKey(keyMap));
			}
			/*
			//爱立信 MSS 标准化by liucaiyong @2013101211
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&& o_object_class=="130")
			{
				//厂家+设备类型+告警标题+告警解释辅助字段+厂家告警级别
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", i_title_text);
				keyMap.put("alarm_unit", o_alarm_unit);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("mapping_type", "标准");
				log.info(o_fp0+" con44 key="+this.getStandKey(keyMap));

				this.setAlarmStandardInfo(this.getStandKey(keyMap));
				if( o_standard_flag == "2")
				{
					//匹配成功，直接结束，未匹配成功，继续匹配（一般匹配con33）
					return ;
				}
			}
			*/
			// 爱立信 大唐 RNC 标准化by liucaiyong @2013101211
			else if(StringUtils.isBlank(o_standard_alarm_name)&& o_eqp_object_class=="9200"&&(o_vendor_id == "1"||o_vendor_id == "9"))
			{
				//厂家+设备类型+厂家告警ID
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con46 key="+this.getStandKey(keyMap));
			}

			//爱立信  标准化by liucaiyong @2013101211,ENODEB
			else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "1"&& (o_object_class=="8104"||o_object_class=="8105"))
			{
				//厂家+告警对象类型+告警标题+厂家告警级别
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("object_class", o_object_class);
				keyMap.put("alarm_title_text", i_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("taskName", "gd.alarmStandard.16");
				log.info(o_fp0+" con48 key="+this.getStandKey(keyMap));
			}

			//爱立信标准化by liucaiyong @2013101211, MRFP	SBC	BGW		SBG WUIGM，无IMSCG	VIG
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_object_class=="6106"||o_object_class=="6112"||o_object_class=="6130"||o_object_class=="6129"||o_object_class=="6125"))
			{
				//厂家+设备类型+告警标题
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", i_title_text);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.23");
				keyMap.put("seperator","@");
				log.info(o_fp0+" con51 key="+this.getStandKey(keyMap));
			}

			//爱立信 SSR平台-SAE-GW by shanchunlan@20130515
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_eqp_object_class=="8102")&&o_network_type_top!="20")
			{
				//专业+厂家+设备类型+告警标题+厂家告警级别
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", i_title_text);
				keyMap.put("taskName", "gd.alarmStandard.8");
				keyMap.put("vendor_severity", o_vendor_severity);
				log.info(o_fp0+" con105 key="+this.getStandKey(keyMap));
			}
			//爱立信 SLF  by shanchunlan@20130515
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_object_class=="81092"))
			{
				//专业+厂家+设备类型+告警标题+厂家告警级别
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", i_title_text);
				keyMap.put("taskName", "gd.alarmStandard.8");
				keyMap.put("vendor_severity", o_vendor_severity);
				log.info(o_fp0+" con106 key="+this.getStandKey(keyMap));
			}
			//爱立信 MME by shichao@20150921
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_eqp_object_class=="8101")&&o_network_type_top!="20")
			{
				//厂家+设备类型+告警标题+厂家告警级别
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", i_title_text);
				keyMap.put("taskName", "gd.alarmStandard.8");
				keyMap.put("vendor_severity", o_vendor_severity);
				log.info(o_fp0+" con107 key="+this.getStandKey(keyMap));
			}
			//爱立信 CG by shichao@20150921
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_eqp_object_class=="124"))
			{
				//厂家+设备类型+告警标题+厂家告警ID gd.alarmStandard.18
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.18");
				log.info(o_fp0+" con108 key="+this.getStandKey(keyMap));
			}
			//爱立信HSS by shanchunlan@20160613
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_object_class in ["102","8109","81091"]))
			{
				//object_class=? and vendor_id=? and alarm_title_text=? and vendor_severity=? and mapping_type=?
				keyMap.put("object_class", o_object_class);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.16");
				log.info(o_fp0+" con119 key="+this.getStandKey(keyMap));
			}
			//动环视频侦测标准化by liucaiyong @2013101810
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "502"&&o_eqp_object_class=="51001"&&o_omc_id=="50201")
			{
				//设备类型+告警标题
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", i_title_text);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.26");
				log.info(o_fp0+" con52 key="+this.getStandKey(keyMap));
			}
			//大唐LTE无线 liucaiyong@20140414
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "9"&&o_eqp_object_class=="8104")
			{
				//厂家+设备类型+厂家告警ID
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con101 key="+this.getStandKey(keyMap));
			}
			//诺西LTE无线 liucaiyong@20140414
			else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "4"&&o_eqp_object_class=="8104")
			{
				//厂家+设备类型+告警对象类型+厂家告警ID
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("object_class", o_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause);
				keyMap.put("taskName", "gd.alarmStandard.28");
				log.info(o_fp0+" con102 key="+this.getStandKey(keyMap));
			}
			else if(StringUtils.isBlank(o_standard_alarm_name) &&  keyMap.isEmpty())
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info_pm a where mapping_type='???' and vendor_severity='"+o_vendor_severity+"' and eqp_object_class="+ o_eqp_object_class + " and alarm_title_text ='" + o_title_text + "'";
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.27");
				keyMap.put("seperator","@");
				log.info(o_fp0+" con33 key="+this.getStandKey(keyMap));
			}
			if(!keyMap.isEmpty())
			{
				this.setAlarmStandardInfo(this.getStandKey(keyMap),(String)keyMap.get("taskName"));
			}
			if (o_org_type == null || o_org_type == "")
			{
				o_org_type = "1";
			}
			//if(o_omc_id == "6101"||o_omc_id == "6601" || o_omc_id == "6602")//动环增加OMC，131107
			if(o_professional_type=="4")
			{
				o_severity_keycode = i_network_type;
			}
		}
		else
		{
			o_standard_flag="1";
		}
	}
	/**
	 * 传输、数据网告警标准化
	 * professional_type, 16
	 *  	   object_class,      17
	 * 	   vendor_id,         18
	 *  	   alarm_title_text,  19
	 *  	   eqp_object_class,  20
	 *  	   probable_cause,    21
	 *  	   locate_name,       22
	 *  	   vendor_severity    23
	 *  	   mapping_type       24
	 *  	   alarm_unit		  25
	 */
	private void setAlarmStandardCS()
	{

		//if(o_omc_id=="15001" || o_omc_id=="15002" || o_omc_id=="15003" || o_omc_id=="6109")
		if(o_omc_id=="6109"){
			return;
		}
		if(o_professional_type == "3"&&StringUtils.isBlank(o_idn)){
			//5+2 传输PTN
			//if(o_eqp_object_class != "2009"){
			o_standard_flag = "1";
			return;
			//}
		}

		if(o_standard_flag =="2"||StringUtils.isBlank(o_standard_flag))
		{
			Map keyMap = new HashMap();
			log.debug(o_fp0+"int_id["+o_int_id+"],professional_type["+o_professional_type+"],eqp_object_class["+o_eqp_object_class+"],object_class["+o_object_class+"],standard_alarm_name["+o_standard_alarm_name+"],vendor_id["+o_vendor_id+"]");
			if(o_org_type=="2" && o_eqp_object_class in ["2012","2011","905","900"] && o_nms_name == "互联网端到端系统告警"){
				//互联网端到端系统告警,liucaiyong@20170920,by sunyuqiu
				String skey = this.joinKey("tfm_alarm_stand_info_pm",o_professional_type,o_vendor_id,o_title_text,o_eqp_object_class,o_vendor_severity,"标准");
				this.setAlarmStandardInfo(skey,"gd.alarmStandard.pm.3");
				log.info(o_fp0+" con-dpi-pm key="+skey);
			}else if(o_org_type=="2" && o_professional_type == "3" && o_eqp_object_class in ["2009","2011"]){
				String skey = this.joinKey("tfm_alarm_stand_info_pm",o_professional_type,o_vendor_id,o_title_text,o_eqp_object_class,"标准");
				this.setAlarmStandardInfo(skey,"gd.alarmStandard.pm.5");
				log.info(o_fp0+" con-cs-pm key="+skey);
			}
			else if(o_professional_type == "3"&&o_eqp_object_class == "100"){
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", "100");
				keyMap.put("mapping_type", "标准");
				//if(o_vendor_id == "8"){
				//	keyMap.put("omc_alarm_id", o_nms_alarm_id);
				//	keyMap.put("taskName", "gd.alarmStandard.5");
				//	log.debug(o_fp0+" con-cs2 key="+this.getStandKey(keyMap));
				//}else{
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.debug(o_fp0+" con-cs3 key="+this.getStandKey(keyMap));
				//}
			}
			//格林威尔、奥普泰 PTN告警标准化 added by lgy@20180606 required by sunyuqiu 需求单：CMCC-GD-DRITXQ-20180511-007
			else if (o_professional_type == "3"&&(o_vendor_id=="9010"||o_vendor_id=="1010")&&o_eqp_object_class=="2009"){
				//专业(KEY)+厂家(KEY)+设备类型(KEY)+告警标题(KEY)
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.4");
				keyMap.put("alarm_title_text", o_title_text);
				log.debug(o_fp0+" con3.0 key="+this.getStandKey(keyMap));
				this.setAlarmStandardInfo(this.getStandKey(keyMap),(String)keyMap.get("taskName"));
			}
			else if(o_professional_type == "3"&&o_eqp_object_class  in ["2001","2009","2034","2008"]&&o_vendor_id in ["0","7","8","202"]){
				//专业(KEY)+厂家(KEY)+设备类型(KEY)+层速率(KEY)+告警标题(KEY)
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "cs.alarmStandard.1");

				keyMap.put("layer_rate",o_layer_rate);
				keyMap.put("alarm_title_text", o_title_text);
				log.debug(o_fp0+" con-cs1 key="+this.getStandKey(keyMap));
				this.setAlarmStandardInfo(this.getStandKey(keyMap),(String)keyMap.get("taskName"));
				if(o_standard_flag =="3"){
					//阿卡	OMC	专业(KEY)+厂家(KEY)+设备类型(KEY)+告警标题(KEY)
					//中兴	OMC	专业(KEY)+厂家(KEY)+设备类型(KEY)+告警标题(KEY)+适用的厂家版本号(KEY)
					//华为	OMC	专业(KEY)+厂家(KEY)+设备类型(KEY)+厂家告警ID(KEY)
					keyMap = new HashMap();
					keyMap.put("professional_type", o_professional_type);
					//keyMap.put("object_class", "100");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", "100");
					keyMap.put("mapping_type", "标准");
					//if(o_vendor_id == "8"){
					//	keyMap.put("omc_alarm_id", o_nms_alarm_id);
					//	keyMap.put("taskName", "gd.alarmStandard.5");
					//	log.debug(o_fp0+" con-cs2 key="+this.getStandKey(keyMap));
					//}else{
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.debug(o_fp0+" con-cs3 key="+this.getStandKey(keyMap));
					//}
				}
				else{
					keyMap =  new HashMap();
				}
			}else  if(o_professional_type == "3" && o_eqp_object_class in ["2011","2012"] && o_vendor_id in ["0","7","8","202"]){
				//阿卡	PON	专业(KEY)+厂家(KEY)+设备类型(KEY)+告警对象类型(KEY)+告警标题(KEY)
				//华为	PON	专业(KEY)+厂家(KEY)+设备类型(KEY)+告警对象类型(KEY)+告警标题(KEY)
				//中兴	PON	专业(KEY)+厂家(KEY)+设备类型(KEY)+告警对象类型(KEY)+告警标题(KEY)
				//烽火	PON	专业(KEY)+厂家(KEY)+设备类型(KEY)+设备单板(KEY)+告警对象类型（KEY）+厂家告警ID(KEY)
				//烽火	PON	专业(KEY)+厂家(KEY)+设备类型(KEY)+告警标题(KEY)
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				//if(o_vendor_id == "202"){
				//	keyMap.put("board_type", o_board_type);
				//	keyMap.put("omc_alarm_id", o_nms_alarm_id);
				//	keyMap.put("taskName", "cs.alarmStandard.3");
				//	log.debug(o_fp0+" con-cs4 key="+this.getStandKey(keyMap));
				//}else{
				//	keyMap.put("alarm_title_text", o_title_text);
				//	keyMap.put("taskName", "gd.alarmStandard.4");
				//	log.debug(o_fp0+" con-cs5 key="+this.getStandKey(keyMap));
				//}
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.debug(o_fp0+" con-cs5 key="+this.getStandKey(keyMap));
				this.setAlarmStandardInfo(this.getStandKey(keyMap),(String)keyMap.get("taskName"));
				if(o_standard_flag =="3"){
					keyMap = new HashMap();
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", "100");
					keyMap.put("mapping_type", "标准");
					//if(o_vendor_id == "8"){
					//	keyMap.put("omc_alarm_id", o_nms_alarm_id);
					//	keyMap.put("taskName", "gd.alarmStandard.5");
					//	log.debug(o_fp0+" con-cs2 key="+this.getStandKey(keyMap));
					//}else{
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.debug(o_fp0+" con-cs3 key="+this.getStandKey(keyMap));
					//}
				}else{
					keyMap =  new HashMap();
				}
			}else if(o_professional_type == "3"&&o_eqp_object_class == "2033"&&o_vendor_id in ["16"]){
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.debug(o_fp0+" con-cs6 key="+this.getStandKey(keyMap));
			}
			//电视平台-华为 by liucaiyong@20160520
			else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_vendor_id == "8" && o_eqp_object_class == "2000" && o_object_class in ["66051","66050"])
			{
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("taskName", "gd.alarmStandard.22");
				log.info(o_fp0+" con1.1 key="+this.getStandKey(keyMap));
			}
			//电视平台-中兴 by liucaiyong@20160520
			else if((o_omc_id == "6601" || o_omc_id == "6602") &&o_vendor_id == "7" && o_eqp_object_class == "2000"&& o_object_class in ["66051","66050"]){
				//专业+厂家+设备类型+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.5");
				log.info(o_fp0+" con1.2 key="+this.getStandKey(keyMap));
			}
			//数据网 ISG标准化 added by lgy@20180606 required by sunyuqiu
			else if (o_professional_type == "2"&&o_vendor_id=="4"&&o_eqp_object_class=="1052"){
				//专业(KEY)+厂家(KEY)+设备类型(KEY)+告警标题(KEY)
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("taskName", "gd.alarmStandard.4");
				keyMap.put("alarm_title_text", o_title_text);
				log.debug(o_fp0+" con3.1 key="+this.getStandKey(keyMap));
			}
			//智能网-HOST,华为/惠普/IBM by sunyuqiu@20130613 +++ 因数据网告警有org_type=2 uppdate sunyuqiu@20140702
			else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_vendor_id == "8" ||o_vendor_id == "104"||o_vendor_id == "101")&&(o_eqp_object_class == "2000") && StringUtils.isNotBlank( o_probable_cause_txt) )
			{
				//专业+厂家+设备类型+厂家告警ID
				keyMap.put("professional_type", "2");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.5");
				log.info(o_fp0+" con2.1 key="+this.getStandKey(keyMap));
			}
			//数据网-阿尔卡特-路由器 by sunyuqiu@20150124
			else if((o_omc_id == "6601" || o_omc_id == "6602") &&o_vendor_id == "0"&&o_eqp_object_class == "66003" && o_org_type=="1" ){
				//专业+厂家+设备类型+告警标题+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.7");
				log.info(o_fp0+" con2.2 key="+this.getStandKey(keyMap));
			}
			//数据网-不良信息 IBM HP : HOST by shichao@20160829
			else if((o_omc_id == "6601" || o_omc_id == "6602") && o_vendor_id in["101","104"] && o_eqp_object_class in ["2000"]&& o_org_type=="1"  ){
				//专业+厂家+设备类型+告警标题+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.7");
				log.info(o_fp0+" con2.7 key="+this.getStandKey(keyMap));
			}
			//数据网-物联网平台 by shichao@20161124
			else if((o_omc_id == "6601" || o_omc_id == "6602") && o_vendor_id =="1055" && o_eqp_object_class == "2000" && o_object_class == "11038" && o_org_type=="1"  ){
				//告警对象类型+厂家+告警标题+厂家告警ID
				keyMap.put("object_class", o_object_class);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.15");
				log.info(o_fp0+" con2.8 key="+this.getStandKey(keyMap));
			}
			//网管告警自监控(性能),by sunyuqiu@20141216
			else if ((o_omc_id == "6601" || o_omc_id == "6602")&&o_professional_type=="5"&&o_org_type=="2")
			{
				//专业+厂家+设备类型+告警标题
				this.setAlarmStandardInfo("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+"标准","gd.alarmStandard.pm.5");
				log.info(o_fp0+" con2.3 key="+"tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+"标准");
			}
			//网管告警自监控,by sunyuqiu@20141216
			else if ((o_omc_id == "6601" || o_omc_id == "6602"|| o_omc_id == "6603")&&o_professional_type=="5")
			{
				//专业+厂家+设备类型+告警标题+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.7");
				log.info(o_fp0+" con2.4 key="+this.getStandKey(keyMap));
			}
			//数据网-垃圾短信系统磁阵告警 by sunyuqiu@20150130
			else if((o_omc_id == "6601" || o_omc_id == "6602") &&o_vendor_id == "8"&&o_eqp_object_class == "10427163"){
				//专业+厂家+设备类型+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.5");
				log.info(o_fp0+" con2.6 key="+this.getStandKey(keyMap));
			}
			//IP短信网关告警 added by lgy@20180425
			else if(o_professional_type=="2"&&o_eqp_object_class=="6144"&&o_vendor_id == "7"){
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.5");
				log.info(o_fp0+" con3.2 key="+this.getStandKey(keyMap));
			}
			//DNS设备告警,shichao@20161012
			else if ((o_omc_id == "6601" || o_omc_id == "6602") &&o_object_class == "3017"){
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", "2");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" con60 key="+this.getStandKey(keyMap));
			}
			else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["66003"]&&o_vendor_id in ["661"]){
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.18");
				log.info(o_fp0+" confw02 key="+this.getStandKey(keyMap));
			}
			else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_object_class == "66003" && o_vendor_id == "661")
			{
				//add by wujian at 20130802
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from std_nmosdb.tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and professional_type = 2 and eqp_object_class = "+ o_eqp_object_class + " and omc_alarm_id = '"+ o_probable_cause_txt + "' and alarm_title_text ='" + o_title_text + "' and rownum < 2 ";
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", "2");
				keyMap.put("object_class", o_object_class);
				//keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("taskName", "gd.alarmStandard.99.2");
				log.info(o_fp0+" con30-1 key="+this.getStandKey(keyMap));
			}
			//GPRS数通设备告警标准化 by liucaiyuong@20131014 ,华为-防火墙，华三-交接机、路由器、防火墙
			else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_vendor_id == "8"||o_vendor_id == "6179")&&(o_object_class == "66003"||o_object_class == "901"||o_object_class == "3004")&&o_network_type_top!="20")
			{
				//专业(key)+厂家(key)+设备类型(key)+厂家告警ID(key)
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", "2");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.5");
				log.info(o_fp0+" con30-2 key="+this.getStandKey(keyMap));
			}

			//IPNET(东信)城域网,HOST/交换机, by sunyuqiu@20130618
			else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_vendor_id == "66")&&(o_eqp_object_class == "2000"||o_eqp_object_class == "3004"))
			{
				//专业+厂家+设备类型+告警标题+厂家告警ID
				keyMap.put("professional_type", "2");
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.7");
				log.info(o_fp0+" con30-4 key="+this.getStandKey(keyMap));
			}
			//飞思达-HOST 告警标准化, by sunyuqiu@20130618
			else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_vendor_id == "980")&&(o_eqp_object_class == "2000"))
			{
				//专业+厂家+设备类型+告警标题+厂家级别
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("taskName", "gd.alarmStandard.8");

				log.info(o_fp0+" con30-5 key="+this.getStandKey(keyMap));
			}
			//飞思达-HOST 告警标准化, by longyifeng@20170626
			else if(o_professional_type == "2" &&o_vendor_id == "980"&&o_eqp_object_class == "2000" ){
				//专业+厂家+设备类型+告警标题+厂家告警ID
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("mapping_type", "标准");
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("omc_alarm_id", o_omc_alarm_id);
				keyMap.put("taskName", "gd.alarmStandard.7");
				log.info(o_fp0+" con30-8 key="+this.getStandKey(keyMap));
			}
			// 数据网 ROUTE 爱立信/思科/华三/Junpier,by shichao@20150921
			else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_object_class == "900" && o_vendor_id in ["1","661","6179","6182"])
			{
				//厂家+设备类型+告警标题+厂家告警ID
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.18");
				log.info(o_fp0+" con112 key="+this.getStandKey(keyMap));
			}
			// 数据网 SMSC ROUTE,by shichao@20150921
			else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_object_class in ["105","900"]))
			{
				//厂家+设备类型+厂家告警ID
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" con110 key="+this.getStandKey(keyMap));
			}
			else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_object_class == "66003"||o_object_class == "105"||o_object_class == "122"))
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from std_nmosdb.tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and professional_type = 2 and eqp_object_class = "+ o_eqp_object_class + " and omc_alarm_id = '"+ o_probable_cause_txt + "' and alarm_title_text ='" + o_title_text + "' and rownum < 2 ";
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", "2");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.7");
				log.info(o_fp0+" con30 key="+this.getStandKey(keyMap));
			}
			else if ((o_omc_id == "6601" || o_omc_id == "6602") &&o_object_class == "66001")
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from std_nmosdb.tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and professional_type = 2 and eqp_object_class = "+ o_eqp_object_class + " and omc_alarm_id = '"+ o_probable_cause_txt + "' and rownum < 2 ";
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", "2");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.5");
				log.info(o_fp0+" con31 key="+this.getStandKey(keyMap));
			}
			else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_object_class == "121"||o_object_class == "122")&&o_vendor_id == "1"){
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where mapping_type='???' and professional_type = 2 and vendor_id=" + o_vendor_id + " and eqp_object_class = " + o_eqp_object_class + " and alarm_title_text ='" + o_title_text + "' and rownum < 2 ";
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", "2");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" con32 key="+this.getStandKey(keyMap));
			}
			else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["66003"]&&o_vendor_id in ["0"]){
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" confw01 key="+this.getStandKey(keyMap));
			}
			else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["1015"]&&o_vendor_id in ["7"]){
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" confw01 key="+this.getStandKey(keyMap));
			}
			else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["904","1013","1419","1015","1418"]&&o_vendor_id in ["8"]){
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.20");
				log.info(o_fp0+" confw01 key="+this.getStandKey(keyMap));
			}

			else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["121"]&&o_vendor_id in ["660"]){
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.18");
				log.info(o_fp0+" confw02 key="+this.getStandKey(keyMap));
			}
			else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["2000"]&&o_vendor_id in ["1011","1012"]){
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", "2");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" confw03 key="+this.getStandKey(keyMap));
			}
			else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["904"]&&o_vendor_id in ["7"]){
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", "2");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.4");
				log.info(o_fp0+" confw03 key="+this.getStandKey(keyMap));
			}
			else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["1418"]&&o_vendor_id in ["7"]){
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", "2");
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("omc_alarm_id", o_probable_cause_txt);
				keyMap.put("taskName", "gd.alarmStandard.5");
				log.info(o_fp0+" confw03 key="+this.getStandKey(keyMap));
			}
			else if(o_omc_id == "6601" || o_omc_id == "6602")
			{
				keyMap.put("vendor_id", o_vendor_id);
				keyMap.put("mapping_type", "标准");
				keyMap.put("professional_type", o_professional_type);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("taskName", "gd.alarmStandard.8");
				log.info(o_fp0+" con34 key="+this.getStandKey(keyMap));
			}
			/*else if(keyMap.isEmpty())
			{
				//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info_pm a where mapping_type='???' and vendor_severity='"+o_vendor_severity+"' and eqp_object_class="+ o_eqp_object_class + " and alarm_title_text ='" + o_title_text + "'";
				keyMap.put("mapping_type", "标准");
				keyMap.put("vendor_severity", o_vendor_severity);
				keyMap.put("eqp_object_class", o_eqp_object_class);
				keyMap.put("alarm_title_text", o_title_text);
				keyMap.put("taskName", "gd.alarmStandard.27");
				keyMap.put("seperator","@");
				log.info(o_fp0+" con33 key="+this.getStandKey(keyMap));
			}*/
			if(!keyMap.isEmpty())
			{
				this.setAlarmStandardInfo(this.getStandKey(keyMap),(String)keyMap.get("taskName"));
			}
			if (o_org_type == null || o_org_type == "")
			{
				o_org_type = "1";
			}
			//if(o_omc_id == "6101"||o_omc_id == "6601" || o_omc_id == "6602")//动环增加OMC，131107
			if(o_omc_id == "6601" || o_omc_id == "6602")
			{
				o_severity_keycode = i_network_type;
			}
		}
		else
		{
			o_standard_flag="1";
		}
	}

	/**
	 * 告警标准化的名称再映射为字典数据
	 */
	private void setStandardAlarmNameId()
	{
		if(StringUtils.isNotBlank(o_standard_alarm_name))
		{
			String dictKey="tia_alarm_dict@1201@"+o_standard_alarm_name;
						o_standard_alarm_name_id = this.getDictValue(dictKey,"tia_alarm_dict.0");
		}
	}

	/**
	 * 添加集客信息
	 */
	private void setJikeInfo()
	{
		//circuit_port_service();
		apnJikeInfo();
		i_int_id = o_int_id;
		String comjikeObject=",706,11060,610,2012,2011,6118,161,11038,600,11060,11028,40001,40003,40004,40005,40006,40007,900,905,131,6108,162,10131,2000,";
		String jo = ConfigUtil.getStringValue("jike.objectclass", comjikeObject);
		//update add mhy at 20130903 [begin]
		//PBX/converter/防火墙/MSAP/IAD/路由器/IP-PBX
		String gdJkNeTypeFilter = ",161,163,901,6118,2007,6118,66003,66045,20130,150111,10011,2008,2034,";
		//防火墙/路由器/协议转换器/IAD/PBX/IP-PBX/MSAP 产品线定义的映射规则如下
		//String gdJkNeTypeFilter = ",2000,20130,901,900,163,6118,161,2007,";
		String gdCurNeType = ","+o_object_class+",";
		//if (!(jo.contains(gdCurNeType) || gdJkNeTypeFilter.contains(gdCurNeType))) {
		if (!(jo.contains(gdCurNeType) || gdJkNeTypeFilter.contains(gdCurNeType) || o_special_field20.startsWith("11060:7:"))) {
			return;
		}

		String jikeObject=",6108,10131,131,20130,";
		if( o_special_field20 != null && o_special_field20 != "" && jikeObject.contains(gdCurNeType) )
		{
			int t_index_intid = o_special_field20.toString().indexOf("@");
			if( t_index_intid > -1 )
			{
				o_int_id = o_special_field20.toString().substring( t_index_intid+1 );
			}
		}
		else if(o_object_class == "131" && StringUtils.isBlank(o_special_field20))
		{
			//过滤掉误关联集客
			return;
		}

		if(o_professional_type=="2"&&o_title_text=="集团客户SP短信告警"&&StringUtils.isNotBlank(o_special_field20) )
		{
			int t_index_intid = o_special_field20.toString().indexOf("@");
			if( t_index_intid > -1 )
			{
				o_int_id = o_special_field20.toString().substring( t_index_intid+1 );
			}
		}

		//add by wujian(sunyuqiu) at 20130809 [begin]
		//客户侧设备告警关联集客信息
		if (o_omc_id=="6607") {
			String queryKey = "gd.query_intid_from_name@" + o_eqp_label;
			Object[] queryRow = util.getObject(this.CUSTOMCACHE,queryKey,"gd.query_intid_from_name");
			if (queryRow!=null && queryRow.length>0) {
				o_int_id = Util.getTempV(Arrays.asList(queryRow),0);
			}
			log.debug(o_fp0 + " query(gd.jk.gcss-relate.int_id=" + o_int_id + "): " + queryKey);
		}

		String intId = o_int_id;
		String objClass = o_object_class;
		//apn告警关联集客,liucaiyong(sunyuqiu)@20170227
		if(StringUtils.isNotBlank(o_special_field20)&&o_special_field20.startsWith("11060:7:"))
		{
			int t_index_intid = o_special_field20.toString().indexOf("@");
			if( t_index_intid > -1 )
			{
				intId = o_special_field20.toString().substring( t_index_intid+1 );
			}
			objClass = "11060";
		}


		//ONU告警关联集客，用网元名关联集客，luocheng@20160809
		//if(o_object_class=="706"&&o_eqp_object_class=="2012"){
		if(o_eqp_object_class=="2012"){
			//ONU端口集客关联用网元设备关联，@20150906
			intId = o_eqp_int_id;
		}
		//CMCC-GD-DRITXQ-20171130-014	OLT设备关联集客算法修改 wangyingfeng@210171220
		//if(o_eqp_object_class=="2011"){
		//  if(!(o_object_class=="706" && o_alarm_title in ["9608837","10462883","9629163","12095582"])){
		//    return;
		//  }
		//}

		//BigDecimal   int_id = getGcssId(objClass,intId);
		//Gcss gcss = (Gcss) util.getObject(SimpleFindUtil.JIKE_CACHE, int_id);
		// setGcss(objClass,intId);
		// 使用crc32算法计算int_id会有一定概率重复，导致关联错集客业务信息，底层资源采集逻辑修改暂时无法实现，折中方案：判断object_class、int_id和eqp_object_class、eqp_int_id都能查询到集客信息，才需关联集客业务信息
		if (o_object_class == "706") {
		  setGcssInfo(objClass, intId, o_eqp_object_class, o_eqp_int_id);
		} else {
		  setGcss(objClass,intId);
		}
		//long int_id = Long.parseLong(intId);
		//Gcss gcss = (Gcss) util.getObject(SimpleFindUtil.JIKE_CACHE, new BigDecimal(int_id));
		//if(gcss!=null){
		//    String client_num=(""+gcss.getClient_num()).equals("0")?"":(""+gcss.getClient_num());
		//    String service_num=(""+gcss.getService_num()).equals("0")?"":(""+gcss.getService_num());
		//    if(!"".equals(client_num)&&!"null".equals(client_num)&&!"".equals(service_num)&&!"null".equals(service_num)){
		//        //o_gcss_client=gcss.getClient_id();
		//        o_gcss_client  = appendStr(o_gcss_client,gcss.getClient_id());
		//        o_gcss_client_num=client_num;
		//        //o_gcss_client_name=gcss.getClient_name();
		//        o_gcss_client_name  = appendStr(o_gcss_client_name,gcss.getClient_name());
		//        o_gcss_client_level=gcss.getClient_level()+"";
		//        o_gcss_client_grade=gcss.getGcss_client_grade()+"";
		//        o_gcss_client_grade_mgt = gcss.getClient_grade_mgt()+"";
		//        //o_gcss_service=gcss.getService_id();
		//        o_gcss_service  = appendStr(o_gcss_service,gcss.getService_id());
		//        o_gcss_service_num=service_num;
		//        //o_gcss_service_type=gcss.getService_type();
		//        o_gcss_service_type  = appendStr(o_gcss_service_type,gcss.getService_type());
		//        o_gcss_service_level=gcss.getService_sla()+"";
		//        //gcss_service_region = gcss.getRegion_id();
		//        gcss_service_region  = appendStr(gcss_service_region,gcss.getRegion_id());
		//        //o_service_crossdomain_type = gcss.getService_crossdomain_type()+"";
		//        log.info(o_fp0+" jikeinfo:int_id["+int_id+"],o_gcss_client["+o_gcss_client+"],o_gcss_client_numm,["+o_gcss_client_num+"],o_gcss_client_name["+o_gcss_client_name+"],o_gcss_client_level["+o_gcss_client_level+"],o_gcss_client_grade["+o_gcss_client_grade+"],o_gcss_client_grade_mgt["+o_gcss_client_grade_mgt+"],o_gcss_service["+o_gcss_service+"],o_gcss_service_num["+o_gcss_service_num+"],o_gcss_service_type["+o_gcss_service_type+"],o_gcss_service_level["+o_gcss_service_level+"],gcss_service_region["+gcss_service_region+"]");
		//    }
		//}
		o_int_id = i_int_id;
	}

	/**
	 * 传输端口查询电路信息
	 */
	private void setTransPortToCircuit()
	{
		//wcs 10.27
		if(StringUtils.isBlank(o_int_id)){
			return;
		}

		setSDHcircuit();

		long int_id = Long.parseLong(o_int_id);
		if(o_professional_type =="3"&&(o_eqp_object_class=="2001"||o_eqp_object_class=="2008")&&o_object_class=="706")
		{
			Circuit circuit = (Circuit) util.getObject(SimpleFindUtil.CIRCUIT_CACHE, new BigDecimal(int_id));
			if(circuit!=null)
			{
				//o_circuit_no=circuit.getCircuit_no()==null?o_circuit_no:circuit.getCircuit_no();
				o_circuit_no=appendStr(o_circuit_no,circuit.getCircuit_no());
				//o_circuit_id=circuit.getCircuit_id()==null?o_circuit_id:circuit.getCircuit_id();
				o_circuit_id=appendStr(o_circuit_id,circuit.getCircuit_id());
			}
		}
		if(StringUtils.isBlank(o_circuit_id) && StringUtils.isNotBlank(o_circuit_no) && o_circuit_no!="多条电路")
		{
			String[] circuitNos = o_circuit_no.split(",");
			for(int i = 0; i < circuitNos.length; i++) {
				if(i == 0) {
					o_circuit_id = Util.getCRC32("610:" + circuitNos[i]);
				} else {
					o_circuit_id = o_circuit_id + "," + Util.getCRC32("610:" + circuitNos[i]);
				}
			}
		}

		// 补充传输端口电路赋值 By Lupeng 2013-01-23 (2013-6-20 省传输室李理要求脱管告警只针对本地接入告警)
		if(o_title_text in ["Node Isolation", "Isolation", "NE_COMMU_BREAK", "NE_NOT_LOGIN","承载网管系统告警网元断链","承载网管系统告警 网元断链","NE_COMMU_GNE_SWITCH"] && o_severity_keycode in ["27","25","26"])
		{
			String crc32 = o_eqp_object_class + ":" + o_extra_string1 + ":" + o_eqp_label;
			//o_eqp_int_id = Util.getCRC32(crc32);---20130201罗成要求注释，原因为RT已经将其解析
			int_id = Long.parseLong(o_eqp_int_id);
			Circuit circuit = (Circuit) util.getObject(SimpleFindUtil.CIRCUIT_CACHE, new BigDecimal(int_id));
			if(circuit!=null)
			{
				//o_circuit_no=circuit.getCircuit_no()==null?o_circuit_no:circuit.getCircuit_no();
				//o_circuit_id=circuit.getCircuit_id()==null?o_circuit_id:circuit.getCircuit_id();
				o_circuit_no=appendStr(o_circuit_no,circuit.getCircuit_no());
				o_circuit_id=appendStr(o_circuit_id,circuit.getCircuit_id());
			}
		}

		// MSTP 电路MAC口关联集客 add[20130627][wujian][需求-罗成]
		if(o_professional_type=="3" && o_object_class=="706" && (o_circuit_id==null || o_circuit_id=="")) {
			String tmpKey = "gd:circuit:related_a_macpor:"+o_int_id;
			List alist = util.getObject(this.CUSTOMCACHE,tmpKey,"gd.circuit.related_a_macpor");
			tmpKey = "gd:circuit:related_b_macpor:"+o_int_id;
			List blist = util.getObject(this.CUSTOMCACHE,tmpKey,"gd.circuit.related_b_macport");

			List results = new ArrayList<Object>();
			if(alist!=null && !alist.isEmpty()){
				results.addAll(alist);
			}
			if(blist!=null && !blist.isEmpty()){
				results.addAll(blist);
			}

			if (results!=null && !results.isEmpty()) {
				for (Object item: results) {
					Object[] result = (Object[])item;
					List olist = Arrays.asList(result);
					String tmp = Util.getTempV(olist,0);
					//o_circuit_id = StringUtils.isNotBlank(o_circuit_id)? o_circuit_id+","+tmp : tmp;
					o_circuit_id = appendStr(o_circuit_id,tmp);
					tmp = Util.getTempV(olist,1);
					//o_circuit_no = StringUtils.isNotBlank(o_circuit_no)? o_circuit_no+","+tmp : tmp;
					o_circuit_no = appendStr(o_circuit_no,tmp);
				}
				log.info(o_fp0+"  related_macport :" + o_circuit_no);
			}
		}

		// 补充爱立信MSC/MSS/BSC/CELL 设备告警的传输电路关联逻辑
		//文档路径[ZHJKA-718]:
		//add[ZHJKA-718] by wj at 20130715
		if (o_vendor_id=="1" && o_region_name=="广州") {
			if (o_eqp_object_class=="200" || o_eqp_object_class=="101") {
				String t_ne_id ="";
				String t_ne_dip="";
				String t_ne_no ="";
				boolean t_is_alone=true;
				//查询大网元DIP
				if (o_title_text == "DIGITAL PATH UNAVAILABLE STATE FAULT" || o_title_text == "DIGITAL PATH FAULT SUPERVISION") {
					def matcher =  o_alarm_text =~/\n:DIP\s+\w+\s+[^\n]+\n:(\w+)\s+/;
					if (matcher.size()>0) {
						t_ne_dip = matcher[0][1] ;
					}
					//log.debug(o_fp0+" query(mv_z_port_corenet.端口号)="+t_ne_dip);
				}
				else if (o_title_text == "CELL LOGICAL CHANNEL AVAILABILITY SUPERVISION") {
					def matcher =  o_alarm_text =~/\n:CELL\s+[^\n]+\n:CELL\s+[^\n]+\n:?(\w+)\s+/;
					if (matcher.size()>0) {
						String t_cell_name = matcher[0][1];
						String queryKey = "gd.circuit.dg_wydb.cell.dip:"+t_cell_name;
						Object[] queryAry = util.getObject(this.CUSTOMCACHE,queryKey,"gd.circuit.dg_wydb.cell.dip");
						if (queryAry!=null && queryAry.length>0) {
							t_ne_dip = Util.getTempV(Arrays.asList(queryAry),0);
						}
						else {
							//log.debug(o_fp0+" cache not, query(dg_wydb.cell.rblt)="+queryKey);
						}
					}
					//log.debug(o_fp0+" query(mv_z_port_corenet.端口号)="+t_ne_dip);
				}

				//查询大网元ID
				if (t_ne_dip!=null && t_ne_dip!="") {
					String queryKey = "gd:circuit:bsc_msc_cell:neid:"+o_eqp_label+":"+o_eqp_object_class;
					Object[] queryAry = util.getObject(this.CUSTOMCACHE,queryKey,"gd.circuit.bsc_msc_cell.neid");
					if (queryAry!=null && queryAry.length>0) {
						t_ne_id = Util.getTempV(Arrays.asList(queryAry),0);
						t_is_alone = false;
					}
					else {
						//log.debug(o_fp0+" cache not, query(dg_wydb.bsc.id|dg_wydb.msc.id)="+queryKey);
					}
					//log.debug(o_fp0+" query(mv_z_port_corenet.所属网元)="+t_ne_id);
				}

				//查询关联的电路编号
				if (t_ne_id!=null && t_ne_id!="") {
					if (t_is_alone) {
						String queryKey = "gd:circuit:mv_z_port_corenet:"+t_ne_dip+":"+t_ne_id;
						Object[] queryAry = util.getObject(this.CUSTOMCACHE,queryKey,"gd.circuit.mv_z_port_corenet");
						if (queryAry!=null && queryAry.length>0) {
							t_ne_no = Util.getTempV(Arrays.asList(queryAry),0);
							if (t_ne_no!=null && t_ne_no!="") {
								//o_circuit_no = t_ne_no;
								o_circuit_no = appendStr(o_circuit_no,t_ne_no);
							}
						}
						else {
							//log.debug(o_fp0+" cache not, query(mv_z_port_corenet.电路编号)="+queryKey);
						}
					}
					else {
						int i=0;
						for (String item : t_ne_dip.split("&")) {
							if (item==null || item=="") {
								continue;
							}
							String queryKey = "gd:circuit:mv_z_port_corenet:"+item+":"+t_ne_id;
							Object[] queryAry = util.getObject(this.CUSTOMCACHE,queryKey,"gd.circuit.mv_z_port_corenet");
							if (queryAry!=null && queryAry.length>0) {
								String str = Util.getTempV(Arrays.asList(queryAry),0);
								if (str!=null && str!="") {
									t_ne_no = t_ne_no + (i++==0?"":",") + str;
								}
							}
							else {
								//log.debug(o_fp0+" cache not, query(mv_z_port_corenet.电路编号)="+queryKey);
							}
						}
						if (t_ne_no!=null && t_ne_no!="") {
							//o_circuit_no = t_ne_no;
							o_circuit_no = appendStr(o_circuit_no,t_ne_no);
						}
					}
					//log.debug(o_fp0+" query(mv_z_port_corenet.电路编号)="+t_ne_no);
				}
			}
		}
		//end[ZHJKA-718] by wj at 20130715

		//核心网业务网元、承载网跨专业智能预处理, by sunyuqiu@20150918
		//if(o_eqp_object_class in ["130","131","102","8109","81091","121","122","8101","8102"] && o_org_severity in ["1","2","3"]){
		if(o_eqp_object_class in ["130","131","102","8109","81091","121","122","8101","8102","200","9200","108","6108","8106","8107","6107","6111","6112","6117"] ){
			String ces="";
			int j=0;
			String cekey="port_circuit_quip_left:"+o_int_id;
			String task="port_circuit_quip_left";

			List results = (List)util.getObject(this.CUSTOMCACHE,cekey,task);
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					List olist = Arrays.asList(result);
					String ce	=	Util.getTempV(olist,1);
					if(StringUtils.isNotBlank(ce)&&!ces.contains(ce)){
						ces+=(j==0?"":";")+ce;
						j++;
						log.info(o_fp0+" port_circuit_quip_left【"+ce+"】from key【"+cekey+"】");
					}
				}
			}
			cekey="port_circuit_quip:"+o_int_id;
			task="port_circuit_quip_right";
			results = (List)util.getObject(this.CUSTOMCACHE,cekey,task);
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					List olist = Arrays.asList(result);
					String ce	=	Util.getTempV(olist,1);
					if(StringUtils.isNotBlank(ce)&&!ces.contains(ce)){
						ces+=(j==0?"":";")+ce;
						j++;
						log.info(o_fp0+" port_circuit_quip_right【"+ce+"】from key【"+cekey+"】");
					}
				}
			}

			if(StringUtils.isNotBlank(ces)){
				ces="查询本网元"+o_eqp_label+"上联CE："+ces+";无相关故障告警，初步判断非CE侧问题引起，请处理。";
				//if(ces.length()>254){
				//	ces = ces.substring(0,254);
				//}
				ces = subStrLen(ces);
				o_special_field9 = ces;
				log.info(o_fp0+" port_circuit_quip,special_field9【"+o_special_field9+"】");
			}
		}
		//承载网与传输网关联电路编号,update by shanchunlan@20150917
		//核心网业务网元、承载网跨专业智能预处理, by sunyuqiu@20150918
		int intPreHandle = 0;
		//if(o_extra_id3 in ["7","20"] && o_object_class == "706" &&o_eqp_object_class in ["66003","900"] && o_title_text in ["[huawei][物理端口状态down]","linkDown","接口DOWN告警","链路断开","物理端口DOWN","接口down","链路Down"]){
		if(o_extra_id3 in ["7","20","154","125"] && o_object_class == "706" &&o_eqp_object_class in ["66003","900"] ){
			intPreHandle = 2;//查circuit_no+预处理
		}
		else if(o_eqp_object_class in ["2008","2034"] && o_title_text in ["R_LOF","R_LOS","IN_PWR_LOW","IN_PWR_HIGH","RLOS","RS_LOF","IOP_LOW","IOP_HIGH","LINK_DOWN","RS_SD"]){
			intPreHandle = 1;//仅查circuit_no
		}

		if(intPreHandle>0){
			String cirkey=joinKey("port_circuit", o_eqp_int_id,o_int_id);
			String task="port_circuit_left";

			List results = (List)util.getObject(this.CUSTOMCACHE,cirkey,task);
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					List olist = Arrays.asList(result);
					String no	=	Util.getTempV(olist,0);
					o_circuit_no = appendStr(o_circuit_no,no);
					log.info(o_fp0+" port_circuit_left【"+no+"】from key【"+cirkey+"】");
				}
			}
			task="port_circuit_right";
			results = (List)util.getObject(this.CUSTOMCACHE,cirkey,task);
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					List olist = Arrays.asList(result);
					String no	=	Util.getTempV(olist,0);
					o_circuit_no = appendStr(o_circuit_no,no);
					log.info(o_fp0+" port_circuit_right【"+no+"】from key【"+cirkey+"】");
				}
			}

			log.info(o_fp0+" port_circuit,circuit_no【"+o_circuit_no+"】");

			//String ids="";//拼circuit_id
			//j=0;
			String level="999";//电路级别，数值越小级别越高

			String cirStr="";//拼电路
			String neStr="";//拼网元

			//遍历电路编号，按电路编号取关联ID，关联网元ID
			String[] circuitNos = o_circuit_no.split(",");
			for(int i = 0; i < circuitNos.length; i++) {
				String no = 	circuitNos[i];
				cirkey=joinKey("gd:circuit:level", no);
				task="gdCircuitLevel";

				cirStr +=(i==0?"":";")+no;

				Object[] objects = util.getObject(this.CUSTOMCACHE, cirkey,task);
				results = objects==null?null:Arrays.asList(objects);
				if (results != null&&!results.isEmpty()) {
					String levelstr=Util.getTempV(results, 0);
					if(StringUtils.isNotBlank(levelstr)&&levelstr<level){
						level=levelstr;
					}
					String circuitid=Util.getTempV(results, 2);
					o_circuit_id=appendStr(o_circuit_id,circuitid);
					//if(StringUtils.isNotBlank(circuitid)&&!ids.contains(circuitid)){
					//	ids+=(j==0?"":",")+circuitid;
					//	j++;
					//}

					if(intPreHandle>1){
						String ane=Util.getTempV(results, 3);
						String bne=Util.getTempV(results, 4);

						String anename="";
						String bnename="";
						neStr="";
						if(StringUtils.isNotBlank(ane)){
							neStr="";
							// cirkey = joinKey("objects_trans", ane);
							cirkey = joinKey("objects_trans_fdn_id", ane);
							// task = "objects_trans";
							task = "objects_trans_fdn_id";
							objects = util.getObject(SimpleFindUtil.RESOURCE_CACHE, cirkey,task);
							results = objects==null?null:Arrays.asList(objects);
							if (results != null&&!results.isEmpty()) {
								neStr=Util.getTempV(results, 5);
							}
						}
						if(StringUtils.isNotBlank(bne)){
							// cirkey = joinKey("objects_trans", bne);
							cirkey = joinKey("objects_trans_fdn_id", bne);
							// task = "objects_trans";
							task = "objects_trans_fdn_id";
							objects = util.getObject(SimpleFindUtil.RESOURCE_CACHE, cirkey,task);
							results = objects==null?null:Arrays.asList(objects);
							if (results != null&&!results.isEmpty()) {
								String nename=Util.getTempV(results, 5);
								if(StringUtils.isNotBlank(nename)){
									neStr=(StringUtils.isBlank(neStr)?"":neStr+",")+nename;
								}
							}
						}
						if(StringUtils.isNotBlank(neStr)){
							cirStr+="（传输网元："+neStr+")";
						}
					}
				}
			}

			//if(StringUtils.isNotBlank(ids)){
			//  ids = subStrLen(ids);
			//	o_circuit_id = ids;
			//}
			log.info(o_fp0+" port_circuit,circuit_id"+o_circuit_id+"】");

			if(intPreHandle>1){
				if(StringUtils.isNotBlank(cirStr)){
					cirStr="查询告警网元关联传输电路:"+cirStr;
					cirStr = subStrLen(cirStr);
					o_special_field9 = cirStr;
					log.info(o_fp0+" port_circuit,special_field9【"+o_special_field9+"】");
				}
			}
		}
		//对传输末端网元电路关联集客 added by lgy@20180620 required by sunyuqiu@CMCC-GD-DRITXQ-20180515-012
		if(o_professional_type =="3"&&StringUtils.isNotBlank(o_circuit_no)){
			String[] circuit=o_circuit_id.toString().split(",");
			for(String id:circuit){
				setGcss("610",id);
			}
		}
		circuit_port_service();
		//5+2,电路中间网元关联, added by liucaiyong@20160223 required by sunyuqiu@20160114
		if(o_professional_type =="3" && o_object_class == "706" && StringUtils.isBlank(o_circuit_no)){
			//告警int_id关联 circuit_res_relation 取 circuit_id
			if(o_int_id !=""){
				String task="circuit_res_relation";
				String key="circuit_res_relation:"+o_int_id;
				//String circuit_id="";//注意去重
				//String circuit_no="";//注意去重
				//int j=0;
				//List results = util.getObject(this.CUSTOMCACHE,key,task);
				//redis缓存外挂
					// List results = rutil.getObject(key);
					List results = util.getObject(CUSTOMCACHE, key, task);
				if (results!=null && !results.isEmpty()) {
						int icount = 0;
					for (Object item : results) {
						Object[] result = (Object[])item;
						if (result==null || result.length<1) {
							break;
						}
						if(icount++ >= 50){
							break;//防止电路过多，最多50个，liucaiyong@20190507
						}
						List olist = Arrays.asList(result);
						String cid	=	Util.getTempV(olist,1);

						//if(StringUtils.isNotBlank(cid)&&!circuit_id.contains(cid)){//拼接电路id
						if(StringUtils.isNotBlank(cid)){//拼接电路id
							//circuit_id+=(j==0?"":",")+cid;
							o_circuit_id=appendStr(o_circuit_id,cid);
							//拼接电路no
							String queryKey = "gd:jike:circuit:namefromid:"+cid;
							Object[] queryRow = util.getObject(this.CUSTOMCACHE,queryKey,"jikeCircuitTableFromId");
							if (queryRow!=null && queryRow.length>0) {
								String  t_circuit_no = Util.getTempV(Arrays.asList(queryRow), 0);
								//circuit_no+=(j==0?"":",")+t_circuit_no;
								o_circuit_no=appendStr(o_circuit_no,t_circuit_no);
							}
							//j++;
						}
					}
					//o_circuit_id	=	circuit_id;
					//o_circuit_no	=	circuit_no;
					log.info(o_fp0+" circuit---circuit_id:"+o_circuit_id+" circuit_no:"+o_circuit_no);
				}
			}
		}

	}

	/**
	 * 集客告警 电路信息 填充 --[add][20130415][wujian][]
	 */
	private void verifyCircuitNo()
	{
		String t_circuit_no=o_circuit_no;
		if( StringUtils.isNotBlank(o_gcss_service) && StringUtils.isBlank(o_circuit_no) && o_professional_type != "3" ){
			String[] serviceids = o_gcss_service.split(",");
			if(serviceids!=null)
			{
				t_circuit_no="";
				int i=0;
				int j=0;
				for(String serverid:serviceids)
				{
					if(j>100){
						break;
					}
					j++;
					String rkey = "gd:jike:circuit:"+serverid;
					Object[] result = util.getObject(this.CUSTOMCACHE,rkey,"jikeCircuitTable");
					List olist = result==null?null:Arrays.asList(result);
					if (olist != null&&!olist.isEmpty()) {
						if(i>4)
						{
							break;
						}
						o_alarm_text = o_alarm_text + ((i==0)?"\n关联电路: \n":"\n") + Util.getTempV(olist, 0);
						t_circuit_no = t_circuit_no + ((i==0)?"":",") + Util.getTempV(olist, 0);
						i++;
					}
				}
				//log.debug(o_fp0+" jk.circuitNoVerify-1.2(serverid:"+o_gcss_service+") "+t_circuit_no);
			}
		}

		//增加处理电路级别 --[add][20130609][wujian][需求提出人:luocheng]
		//if (StringUtils.isNotBlank(t_circuit_no)) {
		//    String[] circuits = t_circuit_no.split(",");
		//    if (circuits!=null) {
		//        //int i_circuit_level = 100000;
		//        for (String circuit : circuits) {
		//            String queryKey = circuit.trim();
		//            if (!queryKey.equals("")) {
		//                queryKey = "gd:circuit:level:" + queryKey;
		//                Object[] result = util.getObject(this.CUSTOMCACHE,queryKey,"gdCircuitLevel");
		//                if (result!=null && result.length>0) {
		//                    o_circuit_level = LevelCompare("circuit_level",Util.getTempV(Arrays.asList(result), 0),o_circuit_level);
		//                    //try {
		//                    //    int temp_level = Integer.parseInt(Util.getTempV(Arrays.asList(result), 0));
		//                        //if (temp_level >0 && temp_level<i_circuit_level) {
		//                        //    i_circuit_level = temp_level;
		//                        //}
		//                    //} catch (Exception ex) {}
		//                }
		//            }
		//        }
		//        //o_circuit_level = i_circuit_level!=100000? String.valueOf(i_circuit_level) : "";
		//    }
		//    //log.debug(o_fp0+" jk.gdCircuitLevel-1.3(circuit_level="+o_circuit_level+") "+t_circuit_no);
		//}
		//
		//if (o_circuit_level!="" && o_professional_type=="3" && (o_circuit_no==""||o_circuit_no==null)) {
		//    o_circuit_level = "";
		//    //log.debug(o_fp0+" jk.gdCircuitLevel-1.3(circuit_level is not empty and o_circuit_no is empty)");
		//}

	}
	//集客末端标志添加到告警正文中 added by lgy@20180625 required by sunyuqiu@CMCC-GD-DRITXQ-20180515-012
	private void setMoDuan(){
		if(StringUtils.isNotBlank(o_gcss_client)&&o_professional_type=="3"){
			boolean t_switch=false;
			Long int_id = Long.parseLong(o_eqp_int_id);
			Circuit circuit = (Circuit) util.getObject(SimpleFindUtil.CIRCUIT_CACHE, new BigDecimal(int_id));
			if(circuit!=null){
				String t_circuit=circuit.getCircuit_id();
				if(StringUtils.isNotBlank(t_circuit)){
					String[] Circuit_Id = t_circuit.split(",");
					for(String id:Circuit_Id){
						String task = "gcss_service";
						List results = util.getObject(SimpleFindUtil.RESOURCE_CACHE,joinKey(task, "610",id),task);
						if (results!=null && !results.isEmpty()) {
							t_switch=true;
							break;
						}
					}
					if(t_switch==true){
						o_alarm_text+="\n集客末端网元：是"
					}else{
						o_alarm_text+="\n集客末端网元：否"
					}
				}
			}
		}
	}
	private void setGcss(String object_class,String int_id){
		//set client
		String task = "gcss_client";
		String tmp;
		List results = util.getObject(SimpleFindUtil.RESOURCE_CACHE,joinKey(task, object_class,int_id),task);
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<1) {
					break;
				}
				List olist = Arrays.asList(result);
				tmp	=	Util.getTempV(olist,2);//client_id
				o_gcss_client  = appendStr(o_gcss_client,tmp);
				tmp	=	Util.getTempV(olist,3);//client_name
				o_gcss_client_name  = appendStr(o_gcss_client_name,tmp);
				tmp	=	Util.getTempV(olist,4);//client_level
				o_gcss_client_level = LevelCompare("reverse", tmp, o_gcss_client_level);
				tmp	=	Util.getTempV(olist,5);//gcss_client_grade
				o_gcss_client_grade = LevelCompare("gcss_client_grade", tmp, o_gcss_client_grade);
				tmp	=	Util.getTempV(olist,6);//gcss_client_grade_mgt
				o_gcss_client_grade_mgt = LevelCompare("gcss_client_grade_mgt", tmp, o_gcss_client_grade_mgt);
			}
			o_gcss_client_num=this.distinceNum(o_gcss_client);
			log.info(o_fp0+" "+task+":int_id["+int_id+"],o_gcss_client["+o_gcss_client+"],o_gcss_client_numm,["+o_gcss_client_num+"],o_gcss_client_name["+o_gcss_client_name+"],o_gcss_client_level["+o_gcss_client_level+"],o_gcss_client_grade["+o_gcss_client_grade+"],o_gcss_client_grade_mgt["+o_gcss_client_grade_mgt+"]");
		}
		//set service
		task = "gcss_service";
		results = util.getObject(SimpleFindUtil.RESOURCE_CACHE,joinKey(task, object_class,int_id),task);
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<1) {
					break;
				}
				List olist = Arrays.asList(result);
				tmp	=	Util.getTempV(olist,2);//service_id
				o_gcss_service  = appendStr(o_gcss_service,tmp);
				tmp	=	Util.getTempV(olist,3);//service_type
				o_gcss_service_type  = appendStr(o_gcss_service_type,tmp);
				tmp	=	Util.getTempV(olist,4);//service_sla
				o_gcss_service_level  = LevelCompare("gcss_service_level", tmp, o_gcss_service_level);
				tmp	=	Util.getTempV(olist,5);//service_region
				gcss_service_region  = appendStr(gcss_service_region,tmp);
				// 云专线资源字段接入
				tmp	=	Util.getTempV(olist,6);// gcss_service_sub_type
				o_gcss_service_sub_type  = appendStr(o_gcss_service_sub_type,tmp);
				// 集客业务编码字段
				tmp	=	Util.getTempV(olist,7);// gcss_service_sub_type
				o_gcss_service_code  = appendStr(o_gcss_service_code,tmp);
			}
			o_gcss_service_num=this.distinceNum(o_gcss_service);
			log.info(o_fp0+" "+task+":int_id["+int_id+"],o_gcss_service["+o_gcss_service+"],o_gcss_service_num["+o_gcss_service_num+"],o_gcss_service_type["+o_gcss_service_type+"],o_gcss_service_level["+o_gcss_service_level+"],gcss_service_region["+gcss_service_region+"],o_gcss_service_sub_type["+o_gcss_service_sub_type+"],o_gcss_service_code["+o_gcss_service_code+"]");
		}
	}
	/**
	 * 传输端口查询集客信息
	 */
	private void setTransportRelatedJike()
	{
		//ONU端口告警不关联集客信息，因现在int_id不唯一导致错误关联 ,luocheng@20140501215
		//if(o_object_class=="706"&&o_eqp_object_class=="2012"){
		//    return;
		//}
		if(StringUtils.isNotBlank(o_circuit_id))
		{
			String[] circuitids = o_circuit_id.toString().split(",");
			//add by wujian(sunyuqiu) at 20130815 --begin
			//传输网管告警正文中附加正确匹配集客信息的电路编号
			int queryCount = 0;
			//add by wujian(sunyuqiu) at 20130815 --end
			for(String id:circuitids)
			{
				//add by gd.wujian(lucheng) at 20130815 --begin
				//传输网管告警正文中附加正确匹配集客信息的电路编号
				if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"]){
				}else{
					String queryKey = "gd:jike:circuit:namefromid:"+id;
					Object[] queryRow = util.getObject(this.CUSTOMCACHE,queryKey,"jikeCircuitTableFromId");
					if (queryRow!=null && queryRow.length>0) {
						o_alarm_text = o_alarm_text + ((queryCount==0)?"\n关联电路信息: \n":"\n") + Util.getTempV(Arrays.asList(queryRow), 0);
						queryCount++;
					}
				}
			}
			//不能取消全程路由点关联电路和电路关联集客的算法，且集客重要的关联算法都不是直接依赖电路去关联集客的，故和用户确定修改“通过电路关联集客”模块的逻辑：
			//将用电路关联集客的逻辑增加一个判断，即：若circuit_no字段包含的电路>=2个，则不做集客的关联。
			//required by sunyuqiu ,coded by liucaiyong@20180118
			if(circuitids.length < 2){
				for(String id:circuitids)
				{
					setGcss("610",id);
					if (StringUtils.isNotBlank(o_gcss_client)){
						String skey = this.joinKey("circuit_interrupt_title",o_vendor_id,o_eqp_object_class,o_title_text);
						Object[] objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, skey,"circuit_interrupt_title");
						List list = objects == null ? null : Arrays.asList(objects);
						if (list != null && !list.isEmpty()) {
							o_interrupt_circuit_state  = "1";
							log.info(o_fp0+ "circuit_interrupt_title");
						}
					}
				}
			}
		}

		apnJike();

	}
	private void apnJikeInfo(){
		String apn = null;
		if(o_title_text == "行业APN路由器PING失败"){
			apn = o_ne_label;
		}else if(o_title_text in ["专网APN拨测失败","行业APN网络激活失败"]){
			def testFlag =  o_alarm_text =~/\s*APN\:([0-9a-zA-Z.]+)\s*绑定的终端/;
			if(testFlag.size()>0){
				apn = testFlag[0][1];
			}
		}else if(o_title_text == "行业APN地址池利用率高于90%"){
			def testFlag =  o_alarm_text =~/APN\:([0-9a-zA-Z.]+)\s*\;/;
			if(testFlag.size()>0){
				apn = testFlag[0][1];
			}
		}else if(o_title_text in ["爱立信SAEGW企业APN上行流量异常（15分钟）","爱立信SAEGW企业APN下行流量异常（15分钟）","爱立信SAEGW企业APN上行流量异常(15分钟)","爱立信SAEGW企业APN下行流量异常(15分钟)"]){
			def testFlag =  o_alarm_text =~/\对象\:([0-9a-zA-Z.]+)\s*KPI表达式\:/;
			if(testFlag.size()>0){
				apn = testFlag[0][1];
			}
		}else if(o_title_text in ["GPRS GGSN 企业APN-GI上行流量异常性能告警","GPRS GGSN 企业APN-GI下行流量异常性能告警","GPRS GGSN 企业APN-PDP激活成功率紧急性能告警","GPRS GGSN 企业APN在线用户数异常性能告警"]){
			def testFlag =  o_alarm_text =~/\s*APN：([0-9a-zA-Z.]+)\s*产生告警/;
			if(testFlag.size()>0){
				apn = testFlag[0][1];
			}
		}

		if(apn!=null){
			apn = apn.toUpperCase();
			apn = "11060:7:"+ apn ;

			o_special_field20 = apn + "@" + Util.getCRC32(apn);
			log.info(o_fp0+" apn["+apn+"] from title["+o_title_text+"] to sp20["+o_special_field20+"]");
		}
	}
	//传输和互联网承载专线告警关联APN,liucaiyong(sunyuqiu)@20170227
	private void apnJike(){
		String apninfo;
		if(o_special_field20.startsWith("11060:7:")&&StringUtils.isNotBlank(o_gcss_service)){
			//正文+GCSS+APN ,11060:7:ZYGDXS1.GD@141217441
			String tmp = o_special_field20.substring(0,o_special_field20.toString().indexOf("@"));
			tmp = tmp.substring(8);
			apninfo = "APN名称:"+tmp+"\n";
			Object[] objects = util.getObject(CUSTOMCACHE, "apn:"+tmp,"apn");
			List list = objects==null?null:Arrays.asList(objects);
			if(list!=null&&!list.isEmpty()){
				tmp = Util.getTempV(list, 1);
				apninfo+="APNID:"+tmp+"\n";
				tmp = Util.getTempV(list, 2);
				apninfo+="GRE网络端地址:"+tmp+"\n";
				tmp = Util.getTempV(list, 3);
				apninfo+="GRE企业端地址:"+tmp+"\n";
				tmp = Util.getTempV(list, 4);
				apninfo+="GRE隧道tunnel key:"+tmp;
			}
		}
		else if(StringUtils.isNotBlank(o_gcss_service) && (o_gcss_service_type.contains("40001")||o_gcss_service_type.contains("40004"))){
			String task;
			String tkey;
			String tmp;
			Object[] objects;
			List list ;

			String gapnid;
			String gapn;
			String glocal;
			String gpeer;
			String gkey;

			String scode;
			String sip;
			String saddr;
			int icount=0;
			int scount=0;

			String[] sids = o_gcss_service.toString().split(",");
			for(String sid:sids){
				task= "nrmdb.service";
				tkey = "service:"+sid;
				objects = util.getObject(CUSTOMCACHE, tkey,task);
				list = objects==null?null:Arrays.asList(objects);
				if(list!=null&&!list.isEmpty())
				{
					String pno = Util.getTempV(list, 6);
					task= "gcss_apn";
					tkey = "gcss_apn:"+pno;
					objects = util.getObject(CUSTOMCACHE, tkey,task);
					List olist = objects==null?null:Arrays.asList(objects);
					if(olist!=null&&!olist.isEmpty())
					{
						icount++;
						tmp = Util.getTempV(olist, 1);//gcss_client
						//o_gcss_client=this.distinceString(StringUtils.isNotBlank(o_gcss_client)?o_gcss_client+","+tmp:tmp);
						o_gcss_client  = appendStr(o_gcss_client,tmp);
						tmp = Util.getTempV(olist, 2);//gcss_client-grade
						if(StringUtils.isNotBlank(o_gcss_client_grade)){
							//o_gcss_client_grade = Integer.parseInt(tmp)<Integer.parseInt(o_gcss_client_grade)?tmp+"":o_gcss_client_grade;
							o_gcss_client_grade = LevelCompare("gcss_client_grade",tmp,o_gcss_client_grade);
						}
						else{
							o_gcss_client_grade=tmp+"";
						}
						tmp = Util.getTempV(olist, 3);//gcss_client_level
						if(StringUtils.isNotBlank(o_gcss_client_level)){
							o_gcss_client_level =  Integer.parseInt(o_gcss_client_level)<Integer.parseInt(tmp)?o_gcss_client_level:tmp+"";
						}
						else{
							o_gcss_client_level=tmp+"";
						}
						tmp = Util.getTempV(olist, 4);//gcss_client_name
						//o_gcss_client_name  = this.distinceString(StringUtils.isNotBlank(o_gcss_client_name)?o_gcss_client_name+","+tmp:tmp);
						o_gcss_client_name  = appendStr(o_gcss_client_name,tmp);
						o_gcss_client_num   =  this.distinceNum(o_gcss_client);//重新计算客户去重后的数量
						tmp = Util.getTempV(olist, 5);//gcss_service
						//o_gcss_service=this.distinceString(StringUtils.isNotBlank(o_gcss_service)?o_gcss_service+","+tmp:tmp);
						o_gcss_service  = appendStr(o_gcss_service,tmp);
						tmp = Util.getTempV(olist, 6);//gcss_service_level
						if(StringUtils.isNotBlank(o_gcss_service_level)){//?
							//o_gcss_service_level=Integer.parseInt(o_gcss_service_level)>Integer.parseInt(tmp)?o_gcss_service_level:tmp+"";
							o_gcss_service_level = LevelCompare("gcss_service_level",tmp,o_gcss_service_level);
						}
						else{
							o_gcss_service_level=tmp+"";
						}
						o_gcss_service_num=this.distinceNum(o_gcss_service);// 重新计算业务去重后的数量
						tmp = Util.getTempV(olist, 7);//gcss_service_type
						//o_gcss_service_type=this.distinceString(StringUtils.isNotBlank(o_gcss_service_type)?o_gcss_service_type+","+tmp:tmp);
						o_gcss_service_type  = appendStr(o_gcss_service_type,tmp);
						tmp = Util.getTempV(olist, 8);//gcss_service_region
						//gcss_service_region = this.distinceString(StringUtils.isNotBlank(gcss_service_region)?gcss_service_region+","+tmp:tmp);
						gcss_service_region  = appendStr(gcss_service_region,tmp);
						//apnid,customer_device_name,ggsn_gre_local,ggsn_gre_peer,ggsn_gre_key
						tmp = Util.getTempV(olist, 9);//apnid
						//gapnid=this.distinceString(StringUtils.isNotBlank(gapnid)?gapnid+","+tmp:tmp);
						gapnid  = appendStr(gapnid,tmp);
						tmp = Util.getTempV(olist, 10);//customer_device_name
						//gapn=this.distinceString(StringUtils.isNotBlank(gapn)?gapn+","+tmp:tmp);
						gapn  = appendStr(gapn,tmp);
						tmp = Util.getTempV(olist, 11);//ggsn_gre_local
						//glocal=this.distinceString(StringUtils.isNotBlank(glocal)?glocal+","+tmp:tmp);
						glocal  = appendStr(glocal,tmp);
						tmp = Util.getTempV(olist, 12);//ggsn_gre_peer
						//gpeer=this.distinceString(StringUtils.isNotBlank(gpeer)?gpeer+","+tmp:tmp);
						gpeer  = appendStr(gpeer,tmp);
						tmp = Util.getTempV(olist, 13);//ggsn_gre_key
						//gkey=this.distinceString(StringUtils.isNotBlank(gkey)?gkey+","+tmp:tmp);
						gkey  = appendStr(gkey,tmp);
					}

					//短彩信集客
					task= "gcss_sms";
					tkey = "gcss_sms:"+pno;
					objects = util.getObject(CUSTOMCACHE, tkey,task);
					olist = objects==null?null:Arrays.asList(objects);
					if(olist!=null&&!olist.isEmpty())
					{
						scount++;
						tmp = Util.getTempV(olist, 1);//gcss_client
						//o_gcss_client=this.distinceString(StringUtils.isNotBlank(o_gcss_client)?o_gcss_client+","+tmp:tmp);
						o_gcss_client  = appendStr(o_gcss_client,tmp);
						tmp = Util.getTempV(olist, 2);//gcss_client-grade
						if(StringUtils.isNotBlank(o_gcss_client_grade)){
							//o_gcss_client_grade = Integer.parseInt(tmp)<Integer.parseInt(o_gcss_client_grade)?tmp+"":o_gcss_client_grade;
							o_gcss_client_grade = LevelCompare("gcss_client_grade",tmp,o_gcss_client_grade);
						}
						else{
							o_gcss_client_grade=tmp+"";
						}
						tmp = Util.getTempV(olist, 3);//gcss_client_level
						if(StringUtils.isNotBlank(o_gcss_client_level)){
							o_gcss_client_level =  Integer.parseInt(o_gcss_client_level)<Integer.parseInt(tmp)?o_gcss_client_level:tmp+"";
						}
						else{
							o_gcss_client_level=tmp+"";
						}
						tmp = Util.getTempV(olist, 4);//gcss_client_name
						//o_gcss_client_name  = this.distinceString(StringUtils.isNotBlank(o_gcss_client_name)?o_gcss_client_name+","+tmp:tmp);
						o_gcss_client_name  = appendStr(o_gcss_client_name,tmp);
						o_gcss_client_num   =  this.distinceNum(o_gcss_client);//重新计算客户去重后的数量
						tmp = Util.getTempV(olist, 5);//gcss_service
						//o_gcss_service=this.distinceString(StringUtils.isNotBlank(o_gcss_service)?o_gcss_service+","+tmp:tmp);
						o_gcss_service  = appendStr(o_gcss_service,tmp);
						tmp = Util.getTempV(olist, 6);//gcss_service_level
						if(StringUtils.isNotBlank(o_gcss_service_level)){//?
							//o_gcss_service_level=Integer.parseInt(o_gcss_service_level)>Integer.parseInt(tmp)?o_gcss_service_level:tmp+"";
							o_gcss_service_level = LevelCompare("gcss_service_level",tmp,o_gcss_service_level);
						}
						else{
							o_gcss_service_level=tmp+"";
						}
						o_gcss_service_num=this.distinceNum(o_gcss_service);// 重新计算业务去重后的数量
						tmp = Util.getTempV(olist, 7);//gcss_service_type
						//o_gcss_service_type=this.distinceString(StringUtils.isNotBlank(o_gcss_service_type)?o_gcss_service_type+","+tmp:tmp);
						o_gcss_service_type  = appendStr(o_gcss_service_type,tmp);
						tmp = Util.getTempV(olist, 8);//gcss_service_region
						//gcss_service_region = this.distinceString(StringUtils.isNotBlank(gcss_service_region)?gcss_service_region+","+tmp:tmp);
						gcss_service_region  = appendStr(gcss_service_region,tmp);
						//apnid,customer_device_name,ggsn_gre_local,ggsn_gre_peer,ggsn_gre_key

						tmp = Util.getTempV(olist, 9);//apnid
						//gapnid=this.distinceString(StringUtils.isNotBlank(gapnid)?gapnid+","+tmp:tmp);
						scode  = appendStr(scode,tmp);
						tmp = Util.getTempV(olist, 10);//customer_device_name
						//gapn=this.distinceString(StringUtils.isNotBlank(gapn)?gapn+","+tmp:tmp);
						sip  = appendStr(sip,tmp);
						tmp = Util.getTempV(olist, 11);//ggsn_gre_local
						//glocal=this.distinceString(StringUtils.isNotBlank(glocal)?glocal+","+tmp:tmp);
						saddr  = appendStr(saddr,tmp);
					}
					// 集客业务编码字段
					o_gcss_service_code  = appendStr(o_gcss_service_code, pno); // product_no
				}
			}

			if(icount>0){
				apninfo = "APNID:"+gapnid+"\n";
				apninfo += "APN名称:"+gapn+"\n";
				apninfo += "GRE网络端地址:"+glocal+"\n";
				apninfo += "GRE企业端地址:"+gpeer+"\n";
				apninfo += "GRE隧道tunnel key:"+gkey+"\n";
			}
			if(scount>0){
				apninfo += "服务代码:"+scode+"\n";
				apninfo += "网关IP地址:"+sip+"\n";
				apninfo += "客户端IP地址:"+saddr+"\n";
			}

		}else
			return;

		if(StringUtils.isNotBlank(o_gcss_client)){//gcss->alarm_text
			setJikeServiceRegion();

			String info = "客户名称:"+o_gcss_client_name;
			info += "\n所属地市:"+o_special_field2;
			Object[] objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, this.joinKey("tia_alarm_dict",o_gcss_client_grade,"101104"),"tia_alarm_dict.2");
			List list = objects == null ? null : Arrays.asList(objects);
			if (list != null && !list.isEmpty()){
				info += "\n集客客户属性:" + Util.getTempV(list, 2);
			}
			objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, this.joinKey("tia_alarm_dict",o_gcss_service_level,"101103"),"tia_alarm_dict.2");
			list = objects == null ? null : Arrays.asList(objects);
			if (list != null && !list.isEmpty()){
				info += "\n业务保障等级:" + Util.getTempV(list, 2);
			}

			if(StringUtils.isNotBlank(info)){
				o_alarm_text += "\n" + info;
				log.info(o_fp0+" service-info-gcss["+info+"]");
			}
		}
		if(StringUtils.isNotBlank(apninfo)){//gcss->apn
			o_alarm_text += "\n" + apninfo;
			log.info(o_fp0+" service-info-extra["+apninfo+"]");
		}
	}
	/** 集客AZ端上联口、拓扑对端网元及端口关联集客
	 * add by liucaiyong@20160928, require by v_sunyuqiu@boco.com.cn
	 */
	private void circuit_port_service(){
		if(o_professional_type != "3")
			return;
		if(!(o_eqp_object_class in ["2001","2008","2009","2034"]))
			return;
		String task;
		String tkey;
		if(o_object_class in  ["2001","2008","2009","2034","150114"]){   //增加“网元类型” object_class=150114  add by lgy@20180412
			task = "circuit_port_service_ne";
			tkey = this.joinKey(task,o_int_id);
		}else if(o_object_class == "706"){
			task = "circuit_port_service_port";
			tkey = this.joinKey(task,o_int_id);
		}else if(o_object_class == "10011"){
			task = "circuit_port_service_board";
			tkey = this.joinKey(task,o_int_id);
			if(o_eqp_object_class == "2009" && o_alarm_title in ["10023993","1705","10023976","10605391","100018"]){
				if(o_special_field9.contains("板卡名称=PW;")||o_special_field9.contains("板卡名称=PWRA;")||o_special_field9.contains("板卡名称=PIU;")){
					task = "circuit_port_service_ne";
					tkey = this.joinKey(task,o_eqp_int_id);
				}
			}
		}
		if(StringUtils.isBlank(task)){
			return;
		}

		//log.info(o_fp0+" circuit_port_info:task["+task+"],key["+tkey+"]");
		String pstr="";
		String tmp="";
		int itmp=0;
		//String cids="";
		//String cnames="";
		int clevel=99;

		//String sids="";
		//String sobj = "";
		//String sregin="";

		//String cnoids="";
		//String cnos="";
		//log.info(o_fp0+" begin-circuit_port_info:circuit_id["+o_circuit_id+"],circuit_no["+o_circuit_no+"]");
		List results = util.getObject(this.CUSTOMCACHE,tkey,task);
		int filtertype = 0;
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<1) {
					break;
				}
				List olist = Arrays.asList(result);
				String ptype	=	Util.getTempV(olist,1);
				pstr  = appendStr(pstr,ptype);
			}
		}
		if(StringUtils.isNotBlank(pstr)){
			//现网的多个关联电路的逻辑及顺序相互存在影响，导致电路未正常关联，故：计划调整上联口的算法。以达到所有电路关联算法的有效结合。 sunyuqiu ,by liucaiyong@20190814
			//无 Port_type  in（1,2）类型，则关联出全部电路和集客赋值给告警的电路和集客字段；
			//有Port_type  in（1,2）类型，则只取Port_type  in（1,2）对应的电路和集客。
			if("1,2".equals(pstr) || "2,1".equals(pstr)){
				filtertype = 1;//只有1，2
			}else if(pstr.contains("1") || pstr.contains("2")){
				filtertype = 3;//包含1，2
			}else if(!"1,2".equals(pstr) && !"2,1".equals(pstr)){
				filtertype = 2;//无1，2
			}
		}
		log.info(o_fp0+" pstr:"+ pstr + ",filtertype:" + filtertype);
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<1) {
					break;
				}
				List olist = Arrays.asList(result);
				String ptype	=	Util.getTempV(olist,1);

				if(filtertype == 0)
					continue;
				else if(filtertype == 3 && !(ptype in ["1","2"]))
					continue;
				//pstr  = appendStr(pstr,ptype);
				//if(ptype == "1")
				//    continue;

				String cid = Util.getTempV(olist,2);
				//cids += cid+",";
				o_gcss_client = appendStr(o_gcss_client,cid);
				String sid = Util.getTempV(olist,3);
				//sids += sid+",";
				o_gcss_service = appendStr(o_gcss_service,sid);

				String cnoid = Util.getTempV(olist,4);
				//cnoids += cnoid+",";
				o_circuit_id=appendStr(o_circuit_id,cnoid);

				//查询cid
				task= "great_client";
				tkey = this.joinKey(task,cid);
				Object[] objects = util.getObject(CUSTOMCACHE, tkey,task);
				List list = objects==null?null:Arrays.asList(objects);
				if(list!=null&&!list.isEmpty())
				{
					tmp = Util.getTempV(list, 1);
					//cnames += tmp+",";
					o_gcss_client_name = appendStr(o_gcss_client_name,tmp);
					tmp = Util.getTempV(list, 2);//grade
					//itmp = Integer.parseInt(tmp);
					//cgrade = cgrade<itmp?cgrade:itmp;
					o_gcss_client_grade = LevelCompare("gcss_client_grade",tmp,o_gcss_client_grade);
					tmp = Util.getTempV(list, 3);//level
					itmp = Integer.parseInt(tmp);//字典中值小业务级别大，所以应该取 值较小的
					clevel = clevel<itmp?clevel:itmp;
					tmp = Util.getTempV(list, 4);//grade_mgt
					//itmp = Integer.parseInt(tmp);
					//cmgt = cmgt<itmp?cmgt:itmp;
					o_gcss_client_grade_mgt = LevelCompare("gcss_client_grade_mgt",tmp,o_gcss_client_grade_mgt);
				}
				//查询sid
				task= "nrmdb.service";
				tkey = "service:"+sid;
				objects = util.getObject(CUSTOMCACHE, tkey,task);
				list = objects==null?null:Arrays.asList(objects);
				if(list!=null&&!list.isEmpty())
				{
					tmp = Util.getTempV(list, 0);//object_class
					//sobj+=tmp+",";
					o_gcss_service_type = appendStr(o_gcss_service_type,tmp);
					tmp = Util.getTempV(list, 1);//service_sla
					o_gcss_service_level = LevelCompare("gcss_service_level",tmp,o_gcss_service_level);
					tmp = Util.getTempV(list, 3);
					//sregin+=tmp+",";
					gcss_service_region = appendStr(gcss_service_region,tmp);

				}
				//查询cno
				task= "jikeCircuitTableFromId";
				tkey = "gd:jike:circuit:namefromid:"+cnoid;
				objects = util.getObject(CUSTOMCACHE, tkey,task);
				list = objects==null?null:Arrays.asList(objects);
				if(list!=null&&!list.isEmpty())
				{
					tmp = Util.getTempV(list, 0);//cno
					//cnos += tmp+",";
					o_circuit_no=appendStr(o_circuit_no,tmp);
				}
			}
		}
		i_pstr=pstr; //暂存到i_pstr，给后面调用。 add by lgy@20180522
		//cids = distinceString(cids);
		//cnames = distinceString(cnames);
		//if(StringUtils.isNotBlank(cids)){
		if(StringUtils.isNotBlank(o_gcss_client)){
			//o_gcss_client = cids;
			o_gcss_client_num = distinceNum(o_gcss_client);
			//o_gcss_client_name = cnames;
			if(clevel==99)
				o_gcss_client_level = "";
			else
				o_gcss_client_level = clevel+"";

			//log.info(o_fp0+" circuit_port_client:gcss_client["+o_gcss_client+"],gcss_client_num["+o_gcss_client_num+"],gcss_client_name["+o_gcss_client_name+"],gcss_client_level["+o_gcss_client_level+"],gcss_client_grade["+o_gcss_client_grade+"],gcss_client_grade_mgt["+o_gcss_client_grade_mgt+"]");
		}

		//sids = distinceString(sids);
		//if(StringUtils.isNotBlank(sids)){
		if(StringUtils.isNotBlank(o_gcss_service)){
			//o_gcss_service = sids;
			//o_gcss_service_num = distinceNum(sids);
			o_gcss_service_num = distinceNum(o_gcss_service);
			//o_gcss_service_type = distinceString(sobj);

			//gcss_service_region = distinceString(sregin);
			setJikeServiceRegion();
			//log.info(o_fp0+" circuit_port_service:gcss_service["+o_gcss_service+"],gcss_service_num["+o_gcss_service_num+"],gcss_service_level["+o_gcss_service_level+"],gcss_service_type["+o_gcss_service_type+"],gcss_service_type["+o_gcss_service_type+"]");
		}
		//cnoids = distinceString(cnoids);
		//cnos = distinceString(cnos);
		//if(StringUtils.isNotBlank(cnoids)){
		//	o_circuit_id = subStrLen(cnoids);
		//  o_circuit_no = subStrLen(cnos);
		//  log.info(o_fp0+" circuit_port_info:circuit_id["+o_circuit_id+"],circuit_no["+o_circuit_no+"]");
		//}
		//log.info(o_fp0+" circuit_port_info:circuit_id["+o_circuit_id+"],circuit_no["+o_circuit_no+"]");
	}

	/**
	 * 集客的地区信息映射为中文添加到special_field2中
	 */
	private void setJikeServiceRegion()
	{
		if(StringUtils.isNotBlank(gcss_service_region))
		{
			String[] regionIds = gcss_service_region.split(",");
			if(regionIds!=null)
			{
				for(String regionId:regionIds)
				{
					//String rkey = "region_city_local:region_id:"+regionId;
					String regionName = getRegion(regionId);
					o_special_field2=regionName+(StringUtils.isNotBlank(o_special_field2)?","+o_special_field2:"");
				}
			}
		}
	}

	/**
	 * 集客的地区Id转化地区名称
	 * @param key
	 * @return
	 */
	private String getJikeRegionName(String key,String taskName)
	{
		Object[] jikeRegion = util.getObject(CUSTOMCACHE, key,taskName);
		List jikeRegionList = jikeRegion==null?null:Arrays.asList(jikeRegion);
		if(jikeRegionList!=null&&!jikeRegionList.isEmpty())
		{
			return Util.getTempV(jikeRegionList, 0);
		}
		return "";
	}

	/**
	 * 计算(客户、业务)去重后的数量
	 * <br>
	 * 将客户/业务分隔后的数量作为客户/业务数量
	 *
	 * @param str 客户/业务
	 * @return
	 * 			返回客户/业务分隔的数量
	 */

	private String distinceNum(String str) {
		int num = 0;
		if(StringUtils.isNotBlank(str)) {
			String[] strArray = str.split(",");
			for(String s: strArray) {
				if(StringUtils.isNotBlank(s)) {
					num ++;
				}
			}
		}
		return num + "";
	}

	private String distinceString(String strList)
	{
		String disList="";
		if(StringUtils.isNotBlank(strList.trim()))
		{
			String[] slist = strList.split(",");
			Map map = new HashMap();
			for(String str:slist)
			{
				if(StringUtils.isNotBlank(str)){
					map.put(str, "");
				}
			}
			if(map.size()>0){
				Iterator itt = map.keySet().iterator();
				while(itt.hasNext())
				{
					disList=disList+itt.next()+",";
				}
				disList = disList.substring(0, disList.length()-1);
				map.clear();
			}
		}
		return disList;
	}

	/**
	 * 影响用户数
	 */
	private void setAffectUserNum()
	{
		if(o_object_class in ["200","201","131","130","9201","9200"])
		{
			Object obj = util.getObject(SimpleFindUtil.RESOURCE_CACHE, "UserNum:"+o_int_id);
			if(obj!=null)
			{
				int usernum = (Integer) obj;
				if(usernum!=0){
					o_special_field23=usernum+"";
				}
			}
		}
	}

	/**
	 * 级别比较
	 */
	private String LevelCompare(String type,String va,String vb){
		if(StringUtils.isBlank(va))
			return vb;
		if(StringUtils.isBlank(vb))
			return va;
		//集客客户属性（GCSS_CLIENT_GRADE）、集客客户管理属性（gcss_client_grade_mgt）：（0：省管客户>2：总部客户>1：地市客户）
		//集客业务级别（GCSS_SERVICE_LEVEL）:  （-1：AAA+>0：AAA>1：AA>2：A>3：普通>：4：未知）
		//电路级别（circuit_level）:（2：跨省>1：跨境>3：跨市>4:本地）
		if("reverse".equals(type.toLowerCase())){
			return LevelWeight(type,va)>LevelWeight(type,vb)?  vb : va;
		}
		return LevelWeight(type,va)>LevelWeight(type,vb)?va:vb;
	}
	/**
	 * 级别比较,权重
	 */
	private int LevelWeight(String type,String val){
		int ival = Integer.parseInt(val);
		int iret;
		if("circuit_level".equals(type.toLowerCase())){
			//电路级别（circuit_level）:（2：跨省>1：跨境>3：跨市>4:本地）
			switch(ival){
				case 2:
					iret=100;
					break;
				case 1:
					iret=90;
					break;
				case 3:
					iret=80;
					break;
				case 4:
					iret=70;
					break;
				default:
					iret = 70;
					break;
			}
		}else if("gcss_client_grade".equals(type.toLowerCase()) || "gcss_client_grade_mgt".equals(type.toLowerCase())){
			//集客客户属性（GCSS_CLIENT_GRADE）、集客客户管理属性（gcss_client_grade_mgt）：（0：省管客户>2：总部客户>1：地市客户）
			switch(ival){
				case 0:
					iret=100;
					break;
				case 2:
					iret=90;
					break;
				case 1:
					iret=70;
					break;
				default:
					iret = 70;
					break;
			}
		}else if("gcss_service_level".equals(type.toLowerCase())){
			//集客业务级别（GCSS_SERVICE_LEVEL）:  （-1：AAA+>0：AAA>1：AA>2：A>3：普通>：4：未知）
			switch(ival){
				case -1:
					iret=100;
					break;
				case 0:
					iret=90;
					break;
				case 1:
					iret=80;
					break;
				case 2:
					iret=70;
					break;
				case 3:
					iret=60;
					break;
				case 4:
					iret=50;
					break;
				default:
					iret = 50;
					break;
			}
		}else{
			iret = ival;
		}
		return iret;
	}

	private void setSubAlarmTypeId(Map map)
	{
		if(map.isEmpty())
			return ;

		String taskName=map.get("taskName");
		if(StringUtils.isBlank(taskName))
			return ;
		String sep = map.get("seperator");
		if(StringUtils.isBlank(sep))
		{
			sep="@";
		}
		String logger=map.get("logger");


		String professional_type=map.get("professional_type");
		String vendor_id=map.get("vendor_id");
		String alarm_title=map.get("alarm_title");
		String nms_alarm_id = map.get("nms_alarm_id");
		String ne_type=map.get("ne_type");
		String standard_alarm_id=map.get("standard_alarm_id");

		String key="common_subalarm_define";
		if(map.containsKey("professional_type"))
		{
			key=key+sep+professional_type;
		}
		if(map.containsKey("vendor_id"))
		{
			key=key+sep+vendor_id;
		}
		if(map.containsKey("alarm_title"))
		{
			key=key+sep+alarm_title;
		}
		if(map.containsKey("nms_alarm_id"))
		{
			key=key+sep+nms_alarm_id;
		}
		if(map.containsKey("ne_type"))
		{
			key=key+sep+ne_type;
		}
		if(map.containsKey("standard_alarm_id"))
		{
			key=key+sep+standard_alarm_id;
		}

		Object[] sub = util.getObject(this.CUSTOMCACHE,key,taskName);
		List olist = sub==null?null:Arrays.asList(sub);
		//log.debug(o_fp0+" "+logger+" set SubAlarmTypeKey["+key+"]");
		if (olist != null&&!olist.isEmpty()) {
			o_sub_alarm_type=Util.getTempV(olist, 6);
			log.debug(o_fp0+" "+logger+",set-SubAlarmTypeKey["+key+"],get-SubAlarmTypeId["+o_sub_alarm_type+"]");
		}
	}
	private void setExtraString2(Map map)
	{
		if(map.isEmpty())
			return ;

		String taskName=map.get("taskName");
		if(StringUtils.isBlank(taskName))
			return ;
		String sep = map.get("seperator");
		if(StringUtils.isBlank(sep))
		{
			sep="@";
		}
		String logger=map.get("logger");


		String professional_type=map.get("professional_type");
		String vendor_id=map.get("vendor_id");
		String alarm_title=map.get("alarm_title");
		String nms_alarm_id = map.get("nms_alarm_id");
		String ne_type=map.get("ne_type");
		String standard_alarm_id=map.get("standard_alarm_id");
		String standard_alarm_name=map.get("standard_alarm_name");

		String key="common_subalarm_define";

		if(map.containsKey("professional_type"))
		{
			key=key+sep+professional_type;
		}
		if(map.containsKey("vendor_id"))
		{
			key=key+sep+vendor_id;
		}
		if(map.containsKey("alarm_title"))
		{
			key=key+sep+alarm_title;
		}
		if(map.containsKey("nms_alarm_id"))
		{
			key=key+sep+nms_alarm_id;
		}
		if(map.containsKey("ne_type"))
		{
			key=key+sep+ne_type;
		}
		if(map.containsKey("standard_alarm_id"))
		{
			key=key+sep+standard_alarm_id;
		}
		if(map.containsKey("standard_alarm_name"))
		{
			key=key+sep+standard_alarm_name;
		}

		Object[] sub = util.getObject(this.CUSTOMCACHE,key,taskName);
		List olist = sub==null?null:Arrays.asList(sub);
		log.info(o_fp0+" "+logger+" set ExtraString2Key["+key+"]");
		if (olist != null&&!olist.isEmpty()) {
			o_extra_string2 = Util.getTempV(olist, 9);
			log.info(o_fp0+" "+logger+",set-ExtraString2Key["+key+"],get-o_extra_string2["+o_extra_string2+"]");
		}
	}


	/**
	 * SubAlarmType赋值
	 */
	private void setSubAlarmType()
	{
		Map keyMap = new HashMap();
		//基站告警与传输拓扑关联呈现-告警细分类型调整,update by liucaiyong,required by sunyuqiu@2014070318
		//if(o_professional_type == "3" && o_vendor_id in ["0","7","8"] && o_eqp_object_class in ["2001","2009","2011","2034"])
		if(o_professional_type == "3" && o_vendor_id in ["12","0","7","8","202"] && o_eqp_object_class in ["2001","2009","2011","2034","2008"])
		{
			keyMap.put("taskName","common_subalarm_define.0");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("alarm_title",o_title_text);
			keyMap.put("ne_type",o_eqp_object_class);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-2");

			setSubAlarmTypeId(keyMap);
		}
		//5G无线工单增加追加逻辑, analysis sunyuqiu@20200225 add by liucaiyong
		else if(o_object_class in ["3300","3201"])
		{
			keyMap.put("taskName","common_subalarm_define.0");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("alarm_title",o_title_text);
			keyMap.put("ne_type",o_object_class);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-12");

			setSubAlarmTypeId(keyMap);
		}
		//LTE退服告警细分类型的解析,by shanchunlan@20140618
		//TD\LTE跨专业关联-市电告警细分,by sunyuqiu@20140722
		else if(o_object_class in ["8104","8105","41011","270"])
		{
			String tmp = o_probable_cause;
			if(o_vendor_id=="1"){
				tmp = "无";
			}
			//log.info(o_fp0+" o_vendor_id:"+o_vendor_id );
			keyMap.put("taskName","common_subalarm_define.1");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("alarm_title",o_title_text);
			keyMap.put("nms_alarm_id",tmp);
			keyMap.put("ne_type",o_object_class);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-3");

			setSubAlarmTypeId(keyMap);
		}
		//TD退服，added by liucaiyong@20140722
		else if(o_object_class in ["9200","9201","9300"])
		{
			keyMap.put("taskName","common_subalarm_define.1");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("alarm_title",o_title_text);
			keyMap.put("nms_alarm_id",o_probable_cause);
			keyMap.put("ne_type",o_object_class);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-4");

			setSubAlarmTypeId(keyMap);
		}
		else if(o_object_class in ["201"])
		{
			keyMap.put("taskName","common_subalarm_define.1");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("ne_type",o_object_class);
			keyMap.put("nms_alarm_id",o_probable_cause);
			keyMap.put("alarm_title",o_title_text);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-9");

			setSubAlarmTypeId(keyMap);
		}
		//铁塔告警-市电告警,liucaiyong@20170921 ,by sunyuqiu
		else if(o_vendor_id == "1038" && o_eqp_object_class == "30013")
		{
			keyMap.put("taskName","common_subalarm_define.1");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("ne_type",o_object_class);
			keyMap.put("nms_alarm_id","无");
			keyMap.put("alarm_title",o_title_text);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-38");

			setSubAlarmTypeId(keyMap);
		}else if(o_omc_id == "1002"){//家宽端到端质量保障平台告警派单需求（CMCC-GD-DRITXQ-20190710-002） liuciayong@20190719
			keyMap.put("taskName","common_subalarm_define.0");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("alarm_title",o_title_text);
			keyMap.put("ne_type",o_eqp_object_class);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-34");

			setSubAlarmTypeId(keyMap);
		}

		//TD\LTE告警跨专业关联，added by sunyuqiu@20140722
		//断连,温度,防盗,空调,门禁,added by sunyuqiu@20150415
		if(o_object_class in ["8104","9201","201","41011"]&&StringUtils.isNotBlank(o_standard_alarm_id))
		{
			keyMap = new HashMap();
			keyMap.put("taskName","common_subalarm_define.5");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("ne_type",o_object_class);
			keyMap.put("standard_alarm_id",o_standard_alarm_id);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-8");

			setSubAlarmTypeId(keyMap);
		}
		//GSM/TD市电告警，added by sunyuqiu@20150206
		//无线低压告警，added by shanchunlan@20150415
		//断连,温度,防盗,空调,门禁,added by sunyuqiu@20150415
		//if(o_object_class in ["201","9201"]){
		if(o_object_class in ["201","9201","8104","200","9200","8105","41011","270"]){
			keyMap = new HashMap();
			keyMap.put("taskName","common_subalarm_define.6");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("ne_type",o_object_class);
			keyMap.put("nms_alarm_id",o_probable_cause);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-11");

			setSubAlarmTypeId(keyMap);
		}


		//跨专业关联-核心智能网告警,by liucaiyong,required by sunyuqiu@20170112
		if(o_professional_type == "1" && o_vendor_id in ["1","7","8","12","14"])
		{
				keyMap = new HashMap();
			keyMap.put("taskName","common_subalarm_define.0");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("alarm_title",o_title_text);
			keyMap.put("ne_type",o_eqp_object_class);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-23");

			setSubAlarmTypeId(keyMap);
		}else if(o_professional_type == "2" ){
				keyMap = new HashMap();
			//核心网与传输网告警跨专业关联,PS域:1004,CE:1005 ,,by liucaiyong,required by sunyuqiu@20170317
			keyMap.put("taskName","common_subalarm_define.0");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("alarm_title",o_title_text);
			keyMap.put("ne_type",o_eqp_object_class);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-24");

			setSubAlarmTypeId(keyMap);
		}

		//动环
		if((StringUtils.isBlank(o_sub_alarm_type)||o_sub_alarm_type =="0") && o_omc_id in ["6101","6102"])
		{
			if(o_eqp_object_class == "30007")
			{
					keyMap = new HashMap();
				//机房环境
				keyMap.put("taskName","common_subalarm_define.3");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("alarm_title",o_title_text);
				keyMap.put("ne_type",o_object_class);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-5");

				setSubAlarmTypeId(keyMap);

				if(StringUtils.isBlank(o_sub_alarm_type)||o_sub_alarm_type =="0")
				{
					keyMap = new HashMap();
					keyMap.put("taskName","common_subalarm_define.2");
					keyMap.put("professional_type",o_professional_type);
					keyMap.put("ne_type",o_object_class);
					keyMap.put("seperator","@");
					keyMap.put("logger","sat-6");

					setSubAlarmTypeId(keyMap);
				}
			}

			//市电告警-发电代维,update by liucaiyong@2014010911
			keyMap = new HashMap();
			keyMap.put("taskName","common_subalarm_define.4");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("alarm_title",o_standard_alarm_name);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-7");

			setSubAlarmTypeId(keyMap);
		}

		//无线外告 20150518 add by fuwei
		if(o_object_class in ["201","9201","8104","41011"] && o_org_type == "1"){
			keyMap = new HashMap();

			if(o_vendor_id == "1"){
				keyMap.put("taskName","common_subalarm_define.10");
				keyMap.put("standard_alarm_id",o_standard_alarm_id);
			}else{
				keyMap.put("taskName","common_subalarm_define.8");
				keyMap.put("nms_alarm_id",o_probable_cause);
			}

			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("ne_type",o_object_class);


			keyMap.put("seperator","@");
			keyMap.put("logger","sat-21");

			setSubAlarmTypeId(keyMap);
		}

		//默认-599
		if((StringUtils.isBlank(o_sub_alarm_type) || o_sub_alarm_type =="0")&&o_object_class in ["300","201","9300","9201"])
		{
			keyMap = new HashMap();
			keyMap.put("taskName","common_subalarm_define.2");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("ne_type",o_object_class);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-10");

			setSubAlarmTypeId(keyMap);
		}
		//log.info(o_fp0+" get sub_alarm_type:"+o_sub_alarm_type);
	}

	/**
	 * 告警细分类型输出预处理意见
	 */
	private void processPrapareBySubAlarmType()
	{
		if(o_sub_alarm_type == "544"){
			o_extra_string2="请现场检查空调设备或传感器是否正常。";
		}else if(o_sub_alarm_type == "536"){
			o_extra_string2="请现场检查空调设备或传感器是否正常。";
		}else if(o_sub_alarm_type == "534"){
			o_extra_string2="请现场检查基站是否被盗，工程人员进站是否未登记基站出入门禁系统。";
		}else if(o_sub_alarm_type == "538"){
			o_extra_string2="请现场检查基站是否被盗，或传感器是否正常。";
		}else if(o_sub_alarm_type == "533"){
			o_extra_string2="经网管核查,初步判断为停电或设备故障引起,请现场检查。";
		}else if(o_sub_alarm_type == "546"){
			o_extra_string2="请现场检查空调设备或传感器是否正常。";
		}else if(o_sub_alarm_type == "543"){
			o_extra_string2="经网管核查,初步判断为停电或熔丝故障引起,请现场检查。";
		}else if(o_sub_alarm_type == "535"){
			o_extra_string2="请现场检查是否有火警,传感器是否正常。";
		}else if(o_vendor_id=="4" &&( o_sub_alarm_type == "974" || (o_sub_alarm_type == "68" && o_object_class in ["8105","270"]))){
			//7650基站退服:模块软件下载失败
			def GZ,YY
			def testFlag =  o_standard_alarm_name =~/^.*\d+(\S+):(.+)$/;
			if(testFlag.size()>0)
			{
				GZ = testFlag[0][1];
				YY = testFlag[0][2];
				YY = YY.replace("告警","故障");
				o_extra_string2="经网管核查，${GZ}因${YY}引起，请处理。";
			}
		}
		//关于部署告警智能预处理需求--BTS十一条告警预处理（CMCC-GD-DRITXQ-20170420-003）,sunyuqiu@20170522,liucaiyong
		else if(o_vendor_id=="8"&& o_object_class=="201"){
			int pos;
			if(o_title_text=="Manostat Alarm（稳压器故障告警）"){
				//站点号=19, 单板ID=DEMU, 单板号=0, 通道号=255, 支路号=255, 小区号=65535, 站点类型=BTS3012, 机架号=0, 机框号=0, 槽位号=2, 站点名称=HS72东港, 告警性质=普通
				pos = o_locate_info.indexOf("单板ID");
				if(pos>0)
				{
					String tmp = o_locate_info.substring(pos);
					//pos = tmp.indexOf("通道号");
					o_extra_string2 = "经网管核查，故障定位"+tmp.substring(0,tmp.indexOf("通道号"));
					pos = tmp.indexOf("机架号");
					tmp = tmp.substring(pos);
					pos = tmp.indexOf("站点名称");
					tmp = tmp.substring(0,pos);

					o_extra_string2 += tmp +"请尽快处理。";
				}
			}else if(o_title_text=="射频单元接收通道RTWP/RSSI不平衡告警"){
				//柜号=0, 框号=4, 槽号=0, 载波编号=2, 主集接收通道号=255, 分集接收通道号=255, 单板类型=MRFU, 主集RTWP值(0.1dBm)=-730, 分集RTWP值(0.1dBm)=-1152, 站点号=93, 站点类型=BTS3900 GSM, 站点名称=M71洋潭, 载频名称=&lt;NULL&gt;
				pos = o_locate_info.indexOf("站点号");
				if(pos>0){
					o_extra_string2 = "经网管核查，故障定位"+o_locate_info.substring(0,pos)+"请尽快处理。";
				}
			}else if(o_title_text=="射频单元光接口性能恶化告警"){
				//柜号=0, 框号=62, 槽号=0, 端口=端口0, 单板类型=MRRU, 具体问题=接收功率过高, 站点号=153, 站点类型=DBS3900 GSM, 站点名称=L2陆丰禾路D
				pos = o_locate_info.indexOf("站点号");
				if(pos>0){
					o_extra_string2 = "经网管核查，故障定位"+o_locate_info.substring(0,pos)+"请尽快处理。";
				}
			}else if(o_title_text=="一级驻波告警"){
				//站点号=45, 单板ID=DDPU, 单板号=7, 通道号=255, 支路号=1, 小区号=65535, 站点类型=BTS3012, 机架号=1, 机框号=9, 槽位号=4, 站点名称=585D深巷, 告警性质=普通
				pos = o_locate_info.indexOf("单板ID");
				if(pos>0)
				{
					String tmp = o_locate_info.substring(pos);
					o_extra_string2 = "经网管核查，故障定位"+tmp.substring(0,tmp.indexOf("小区号"));
					pos = tmp.indexOf("机架号");
					tmp = tmp.substring(pos);
					pos = tmp.indexOf("站点名称");
					tmp = tmp.substring(0,pos);

					o_extra_string2 += tmp +"请尽快处理。";
				}
			}else if(o_title_text=="单板通信告警"){
				//站点号=72, 单板ID=DFCB, 单板号=8, 通道号=255, 支路号=255, 小区号=65535, 站点类型=BTS3012, 机架号=1, 机框号=9, 槽位号=8, 站点名称=SGS71韶关韶关大学, 告警性质=普通
				pos = o_locate_info.indexOf("单板ID");
				if(pos>0)
				{
					String tmp = o_locate_info.substring(pos);
					o_extra_string2 = "经网管核查，故障定位"+tmp.substring(0,tmp.indexOf("小区号"));
					pos = tmp.indexOf("机架号");
					tmp = tmp.substring(pos);
					pos = tmp.indexOf("站点名称");
					tmp = tmp.substring(0,pos);

					o_extra_string2 += tmp +"请尽快处理。";
				}
			}else if(o_title_text=="BBU光模块收发异常告警"&&StringUtils.isNotBlank(o_locate_info)){
				//柜号=0, 框号=0, 槽号=6, 端口号=0, 单板类型=GTMU, 具体问题=接收无信号, 站点号=140, 站点类型=DBS3900 GSM, 站点名称=L2安溪2BBU
				pos = o_locate_info.indexOf("站点号");
				if(pos>0){
					o_extra_string2 = "经网管核查，故障定位"+o_locate_info.substring(0,pos)+"请尽快处理。";
				}
			}
		}else if(o_vendor_id=="8"&& o_object_class=="9201"){
			if(StringUtils.isNotBlank(o_locate_info) && o_title_text in ["射频单元通道异常告警","射频单元光接口性能恶化告警","传输光接口异常告警","单板心跳检测失败告警"]){
				o_extra_string2 = "经网管核查，故障定位"+o_locate_info+"，请尽快处理。";
			}
		}else if(o_vendor_id=="7"&& o_object_class=="9201"){
			if(o_title_text == "天线校正通道或校正线缆故障"){
				if(o_alarm_text.contains("下行校正通道故障")){
					o_extra_string2 ="经网管核查，故障定位为下行校正通道故障，请尽快处理。";
				}
			}else if(o_title_text == "下行输出欠/过功率告警"){
				int pos = o_probable_cause_txt.indexOf("||");
				o_extra_string2 = "经网管核查，初步判断为" + o_probable_cause_txt.substring(pos + 2);
				def testFlag =  o_alarm_text =~/.*下行通道号:(\d+)</;
				if(testFlag.size()>0)
				{
					def var1 = testFlag[0][1];
					o_extra_string2 += "导致，下行通道号为${var1}，请尽快处理。";
				}
			}else if(o_title_text == "单板温度过高或者过低"){
				def testFlag =  o_alarm_text =~/.*附加信息.*单板类型:(\w+)\s*#.*温度:(\w+)/;
				if(testFlag.size()>0)
				{
					def var1 = testFlag[0][1];
					def var2 = testFlag[0][2];
					o_extra_string2="经网管核查，故障定位单板类型为${var1},当前温度为${var2}℃，请尽快处理。";
				}
			}else if(o_title_text == "IMA组故障"){
				def var1,var2 ;
				def testFlag =  o_alarm_text =~/.*IMA组号：(\d+)/;
				if(testFlag.size()>0)
				{
					var1 = testFlag[0][1];

				}
				testFlag =  o_alarm_text =~/.*CAUSE=([^\n]+)/;
				if(testFlag.size()>0)
				{
					var2 = testFlag[0][1];
					var2 = var2.replace("。 ",";\n");
				}
				if(StringUtils.isNotBlank(var1)&& StringUtils.isNotBlank(var2)){
					o_extra_string2="经网管核查，故障定位IMA组号为${var1}，初步判断为以下原因导致，请尽快处理。\n${var2}";
				}
			}
		}else if(o_vendor_id=="8"&& o_object_class in ["8104","41011"]){
			if(StringUtils.isNotBlank(o_locate_info) &&o_title_text in ["时间同步失败告警","射频单元硬件故障告警","射频单元光接口性能恶化告警","射频单元发射通道增益异常告警","射频单元ALD电流异常告警","传输光接口异常告警"]){
				o_extra_string2 = "经网管核查，故障定位"+o_locate_info+"，请尽快处理。";
			}else if(StringUtils.isNotBlank(o_locate_info) && o_title_text == "基站S1控制面传输中断告警"){
				def testFlag =  o_alarm_text =~/eNodeB名称=(.*)/;
				if(testFlag.size()>0)
				{
					def var1 = testFlag[0][1];
					o_extra_string2="经网管核查，基站${var1}伴随基站S1控制面传输中断告警告警，影响业务，请尽快处理。";
				}
			}else if(StringUtils.isNotBlank(o_locate_info) && o_title_text == "用户面故障告警"){
				if(o_locate_info == "业务类型=S1"){
					o_extra_string2 = "经网管核查，业务故障类型为S1，影响业务，请尽快处理。";
				}else if(o_locate_info == "业务类型=X2"){
					o_extra_string2 = "经网管核查，业务故障类型为X2，暂不影响业务。";
				}
			}
		}else if(o_vendor_id=="7"&& o_object_class in ["8104","41011"]){
			if(o_title_text == "RRU链路断"){
				def var1,var2 ;
				//def testFlag =  o_alarm_text =~/拓扑:(.+)[(\n)|(\;.*\n)]/;
				def testFlag =  o_alarm_text =~/拓扑:([^;]+)/;
				if(testFlag.size()>0)
				{
					var1 = testFlag[0][1];
				}
				testFlag =  o_alarm_text =~/.*CAUSE=([^\n]+)/;
				if(testFlag.size()>0)
				{
					var2 = testFlag[0][1];
					var2 = var2.replace("。 ",";\n");
				}
				if(StringUtils.isNotBlank(var1)&& StringUtils.isNotBlank(var2)){
					o_extra_string2="经网管核查，${var1}，初步判断为以下原因导致，请尽快处理。\n${var2}";
				}
			}else if(o_title_text == "S1断链告警"){
				def var1,var2 ;
				def testFlag =  o_alarm_text =~/ALARMTEXT=SCTP偶联号:\s*(\d+),\s*([^;]*);/;
				if(testFlag.size()>0)
				{
					var1 = testFlag[0][1];
					var2 = testFlag[0][2];
					if("S1 SCTP偶联断" == var2){
						o_extra_string2="经网管核查，故障定位SCTP偶联号为${var1}，${var2}，请检查SCTP偶联参数配置是否正确。";
					}else{
						o_extra_string2="经网管核查，故障定位SCTP偶联号为${var1}，${var2}，请检查基站小区是否配置。";
					}
				}
			}else if(o_title_text == "输入电压异常"){
				def var1,var2 ;
				def testFlag =  o_alarm_text =~/ALARMTEXT.*[=|;](.*);\s*电压:\s*([^;]*);/;
				if(testFlag.size()>0)
				{
					var1 = testFlag[0][1];
					var2 = testFlag[0][2];
					o_extra_string2="经网管核查，故障定位为${var1}; 电压: ${var2}，请尽快处理。";
				}
			}
		}else if(o_vendor_id=="4"&& o_object_class in ["8104","41011"]){
			int pos = o_standard_alarm_name.indexOf(":");
			if(pos>0){
				String tmp = o_standard_alarm_name.substring(0,pos);
				o_extra_string2 = "经网管核查，" + tmp + "因";
				tmp = o_standard_alarm_name.substring(pos+1);
				o_extra_string2 += tmp + "引起，请处理。";
			}
		}
		//传输 智能预处理 add by fw ，required by sunyuqiu@20160829
		else if(o_professional_type == "3" && o_vendor_id in ["0","7","8","202"]
				&& o_eqp_object_class in ["2001","2009","2034"]
				&& o_sub_alarm_type == "90"  ){
			o_extra_string2="经核查，该网元上报"+o_title_text+"告警，网元无市电故障且相邻网元无LOS告警，初步判定为DCN故障引起，请维护人员及时处理。";
		}
		else if(o_professional_type == "3" && o_vendor_id in ["202"]
				&& o_eqp_object_class in ["2009"]
				&& o_sub_alarm_type == "977"  ){
			o_extra_string2="经核查，该网元"+o_ne_label+"板上报"+o_title_text+"告警，初步判断为硬件故障，请维护人员及时处理。";
		}
		else if(o_professional_type == "3" && o_vendor_id in ["0"]
				&& o_eqp_object_class in ["2001","2009"]
				&& o_title_text == "PPP Fail" ){
			o_extra_string2="经核查，该网元上报带内DCN通道告警，请检查线路、相关端口是否正常，请维护人员及时跟进处理。";
		}
		else if(o_professional_type == "3" && o_vendor_id in ["12","7","8","202","0"]
				&& o_eqp_object_class in ["2001","2009","2034"]
				&& o_object_level == "70602"
				&& o_sub_alarm_type == "821"  ){
			o_extra_string2="经核查，该网元端口"+o_ne_label+"上报LOS告警，且该端口为支路口，初步判断为连接件或者业务侧故障导致，请维护人员及时处理。经核查综资该端口所带业务电路代号为："+o_circuit_no;
		}
		//传输 智能预处理 对端 add by fw ， required by  shunyuqiu@20160829
		else if(o_professional_type == "3" &&   o_vendor_id in ["8","7","202","12","0"] &&  o_eqp_object_class in ["2001","2009","2034"] &&
				o_sub_alarm_type =="821" &&   o_object_level == "70601" &&
				o_title_text != "MUT_LOS" &&   StringUtils.isNotBlank(o_special_field9) && StringUtils.isNotBlank(o_extra_string1)
		){
			this.getRemoteInfoBySF9();
		}
		else if(o_professional_type == "3" &&   o_vendor_id in ["8"] &&  o_eqp_object_class in ["2034"] &&
				o_sub_alarm_type =="821" &&   o_object_level == "70601" &&
				o_title_text in ["MUT_LOS"] &&   StringUtils.isNotBlank(o_special_field9) && StringUtils.isNotBlank(o_extra_string1)
		){
			this.getRemoteInfoBySF9();
		}

		//传输专业 非衍生告警预处理 , category=20 update by fuwei,required by sunyuqiu@20150430
		if(o_professional_type == "3" && o_vendor_id in ["0","7","8","202"] && o_eqp_object_class in ["2001","2009","2011","100","2034"])
		{
			Map keyMap = new HashMap();
			keyMap.put("taskName","common_subalarm_define.7");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("ne_type",o_eqp_object_class);
			keyMap.put("standard_alarm_name",o_standard_alarm_name);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-20");

			setExtraString2(keyMap);
		}

		//无线告警预处理 , category=20 update by fuwei,required by sunyuqiu@20150430
		if(o_professional_type == "1" && o_vendor_id in ["9","7"] && o_object_class in ["8104","8105","9201","41011","270"])
		{
			Map keyMap = new HashMap();
			keyMap.put("taskName","common_subalarm_define.9");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("ne_type",o_object_class);
			keyMap.put("nms_alarm_id",o_probable_cause);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-21");

			setExtraString2(keyMap);
		}

		if( o_object_class in ["201","300","8104","8105","41011","270"]){
			setGaoTieProp();
			if(checkGaoTieProp()==1){
				//String ne_sub_type = o_object_class + "01";
				//o_ne_sub_type=ne_sub_type;
				o_ne_sub_type = (o_object_class == "41011" ? "8104" : (o_object_class == "270" ? "8105" : o_object_class)) + "01";
				if(o_org_type!="2")
					o_special_field0="★★★★★";

								Object[] rru;
								List rruList;
				//关联高铁小区和基站下带RRU数, by sunyuqiu@2019057
				rru = util.getObject(CUSTOMCACHE, "site_rru:" + o_int_id,"site_rru");
				rruList = rru==null?null:Arrays.asList(rru);
				if(rruList!=null&&!rruList.isEmpty())
				{
					o_home_client_num = Util.getTempV(rruList, 1);
					log.info(o_fp0+"  get-site["+o_int_id+"]-rrucount["+o_home_client_num+"]");
				}
			}
		}
		//设备掉电
		if(o_vendor_id=="7"&&o_object_class=="8104"&&o_title_text=="设备掉电"){
			def testFlag =  o_alarm_text =~/ALARMTEXT.*小区ID\s*=\s*(\S+)\s*/;
			if(testFlag.size()>0){
				def matchKey = testFlag[0][1];
				o_extra_string2 = "经网管核查，初步判断为外部供电问题导致，影响第"+matchKey+"小区，请协助处理。";
			}
		}
		//射频单元不在位告警
		if(o_vendor_id=="9"&&o_object_class=="8104"&&o_title_text=="射频单元不在位告警"){
			def testFlag =  o_alarm_text =~/ALARM_TEXT.*\|\|[0-9.]+\|\|(.*)\|\|/;
			if(testFlag.size()>0){
				def matchKey = testFlag[0][1];
				o_extra_string2 = "经网管核查，初步判断为"+matchKey+"引起，请协助处理。";
			}
		}
		//射频单元交流掉电告警
		if(o_vendor_id=="8"&&o_object_class=="8104"&&o_title_text=="射频单元交流掉电告警"){
			def testFlag =  o_alarm_text =~/定位信息\s*=\s*(.*)\s*单板类型/;
			if(testFlag.size()>0){
				def matchKey = testFlag[0][1];
				o_extra_string2 = "经网管核查，初步判断为外部供电问题导致，影响RRU信息为："+matchKey+"请协助处理。";
			}
		}
		//射频单元维护链路异常告警
		if(o_vendor_id=="8"&&o_object_class=="8104"&&o_title_text=="射频单元维护链路异常告警"){
			if(o_alarm_text.contains("locationInfo")){
				def testFlag =  o_alarm_text =~/locationInfo\"\:\"(.*)\s*单板类型/;
				if(testFlag.size()>0){
					def matchKey = testFlag[0][1];
					o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey+"请协助处理。";
				}
			}else{
				def testFlag =  o_alarm_text =~/定位信息\s*=\s*(.*)\s*单板类型/;
				if(testFlag.size()>0){
					def matchKey = testFlag[0][1];
					o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey+"请协助处理。";
				}
			}
		}
		//GNSS接收机搜星故障
		if(o_vendor_id=="7"&&o_object_class=="8104"&&o_title_text=="GNSS接收机搜星故障"){
			def testFlag =  o_alarm_text =~/CAUSE\s*=([\s\S]*)EVENTTIME[\s\S]*ALARMTEXT\s*=\s*([^\;]+)/;
			if(testFlag.size()>0){
				def matchKey1 = testFlag[0][1];
				def matchKey2 = testFlag[0][2];
				o_extra_string2 = "经网管核查，故障由【"+matchKey2+"】导致，初步怀疑有以下原因，请现场排查。"+"\n"+matchKey1;
			}
		}
		//BBU IR光模块收发异常告警   BBU IR接口异常告警  BBU光模块收发异常告警
		if(o_vendor_id=="8"&&o_object_class=="8104"&&o_title_text in ["BBU IR接口异常告警","BBU IR光模块收发异常告警","BBU光模块收发异常告警"]){
			if(o_alarm_text.contains("locationInfo")){
				def testFlag =  o_alarm_text =~/locationInfo\"\:\"(.*)\s*单板类型.*具体问题\s*=\s*([^\"]*)/;
				if(testFlag.size()>0){
					def matchKey1 = testFlag[0][1];
					def matchKey2 = testFlag[0][2];
					o_extra_string2 = "经网管核查，故障定位信息为"+matchKey1+"具体问题为"+matchKey2+"，请协助处理";
				}
			}else{
				def testFlag =  o_alarm_text =~/定位信息\s*=\s*(.*)\s*单板类型.*具体问题\s*=\s*(.*)/;
				if(testFlag.size()>0){
					def matchKey1 = testFlag[0][1];
					def matchKey2 = testFlag[0][2];
					o_extra_string2 = "经网管核查，故障定位信息为"+matchKey1+"具体问题为"+matchKey2+"，请协助处理";
				}
			}
		}
		//温度异常
		if(o_vendor_id=="7"&&o_object_class=="8104"&&o_title_text=="温度异常"){
			def testFlag =  o_alarm_text =~/ALARMTEXT\s*=\s*([^\;]+).*当前温度\s*\:\s*([^\;]+)/;
			if(testFlag.size()>0){
				def matchKey1 = testFlag[0][1];
				def matchKey2 = testFlag[0][2];
				o_extra_string2 = "经网管核查，初步判断为"+matchKey1+"，当前单板温度为"+matchKey2+"，请现场处理。";
			}
		}
		//射频单元温度异常告警
		if(o_vendor_id=="8"&&o_object_class=="8104"&&o_title_text=="射频单元温度异常告警"){
			def testFlag =  o_alarm_text =~/功放温度值\s*\(C\/F\)\s*=\s*(\d+\/\d+).*单板温度值\s*\(C\/F\)\s*=\s*(\d+\/\d+)/;
			if(testFlag.size()>0){
				def matchKey1 = testFlag[0][1];
				def matchKey2 = testFlag[0][2];
				o_extra_string2 = "经网核查，功放温度值(C/F)为"+matchKey1+"，单板温度值(C/F)为"+matchKey2+"，请现场处理。";
			}
		}
		//校准失败（干扰）
		if(o_vendor_id=="1"&&o_object_class=="8104"&&o_standard_alarm_name=="校准失败（干扰）"){
			o_extra_string2 = "经网管核查，初步判断小区存在外部干扰，请现场排查处理。"
		}
		//lgy@20190116,CMCC-GD-DRITXQ-20181213-030 需求名称：关于部署告警预处理规则需求
		if(o_vendor_id=="8"&&o_eqp_object_class in ["8104","41011"]&&StringUtils.isBlank(o_extra_string2)&&!(o_title_text in ["主电告警","小区不可用告警","星卡天线故障告警","BBU IR接口异常告警","射频单元光模块收发异常告警","系统时钟不可用告警","S1接口故障告警","eNodeB退服告警"])){
			if(o_alarm_text.contains("locationInfo")){
				if(o_alarm_text.contains("端口号=")){
					def testFlag =  o_alarm_text =~/locationInfo\"\:\".*柜号\s*=\s*(\d+),\s*框号\s*=\s*(\d+),\s*槽号\s*=\s*(\d+),\s*端口号\s*=\s*(\S+),.*具体问题\s*=\s*([^\"]*)/;
					if(testFlag.size()>0){
						def matchKey1 = testFlag[0][1];
						def matchKey2 = testFlag[0][2];
						def matchKey3 = testFlag[0][3];
						def matchKey4 = testFlag[0][4];
						def matchKey5 = testFlag[0][5];
						o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey1+"，框号为"+matchKey2+"，槽号为"+matchKey3+"，"+matchKey4+"，初步判断为"+matchKey5+"，请协助处理。";
					}
				}else{
					def testFlag =  o_alarm_text =~/locationInfo\"\:\".*柜号\s*=\s*(\d+),\s*框号\s*=\s*(\d+),\s*槽号\s*=\s*(\d+),.*具体问题\s*=\s*([^\"]*)/;
					if(testFlag.size()>0){
						def matchKey1 = testFlag[0][1];
						def matchKey2 = testFlag[0][2];
						def matchKey3 = testFlag[0][3];
						def matchKey4 = testFlag[0][4];
						o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey1+"，框号为"+matchKey2+"，槽号为"+matchKey3+"，初步判断为"+matchKey4+"，请协助处理。";
					}
				}
			}else{
				if(o_alarm_text.contains("端口号=")){
					def testFlag =  o_alarm_text =~/定位信息\s*=\s*.*柜号=(\d+),\s*框号=(\d+),\s*槽号=(\d+),\s*端口号=(\S+),.*具体问题=([^\n]*)/;
					if(testFlag.size()>0){
						def matchKey1 = testFlag[0][1];
						def matchKey2 = testFlag[0][2];
						def matchKey3 = testFlag[0][3];
						def matchKey4 = testFlag[0][4];
						def matchKey5 = testFlag[0][5];
						o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey1+"，框号为"+matchKey2+"，槽号为"+matchKey3+"，"+matchKey4+"，初步判断为"+matchKey5+"，请协助处理。";
					}
				}else{
					def testFlag =  o_alarm_text =~/定位信息\s*=\s*.*柜号=(\d+),\s*框号=(\d+),\s*槽号=(\d+),.*具体问题=([^\n]*)/;
					if(testFlag.size()>0){
						def matchKey1 = testFlag[0][1];
						def matchKey2 = testFlag[0][2];
						def matchKey3 = testFlag[0][3];
						def matchKey4 = testFlag[0][4];
						o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey1+"，框号为"+matchKey2+"，槽号为"+matchKey3+"，初步判断为"+matchKey4+"，请协助处理。";
					}
				}
			}
		}
	}
	/**
	 * 高铁属性
	 */
	private int checkGaoTieProp()
	{
		String key="scenetype_scene_area@"+o_int_id;
		String task="scenetype_scene_area.0";
		Object[] areas = util.getObject(CUSTOMCACHE, key,task);
		List areaList = areas==null?null:Arrays.asList(areas);
		if(areaList!=null&&!areaList.isEmpty())
		{
			def area_id = Util.getTempV(areaList, 1);
			log.info(o_fp0+"  checkGaoTieArea.area_id:"+area_id);
			return(1);
		}
		else
		{
			return(0);
		}
	}

	private void setGaoTieProp()
	{
		if(StringUtils.isBlank(o_rlocate_ne_name)){
			return;
		}
		String intid = o_int_id;
		if(o_object_class in ["8105","270"]){
			intid = o_eqp_int_id;
		}
		String key="rru@"+o_rlocate_ne_name+"@"+intid;
		String task="rru";
		Object[] rru = util.getObject(CUSTOMCACHE, key,task);
		List rruList = rru==null?null:Arrays.asList(rru);
		if(rruList!=null&&!rruList.isEmpty())
		{
			o_rlocate_ne_name = Util.getTempV(rruList, 0);
			o_rlocate_ne_type = Util.getTempV(rruList, 1);
			o_rlocate_ne_int_id= Util.getTempV(rruList, 4);
			log.info(o_fp0+" checkGaoTieArea:: o_rlocate_ne_int_id:"+o_rlocate_ne_int_id+" o_rlocate_ne_type:"+o_rlocate_ne_type);
		}
	}




	/**
	 * 设置site_no的值
	 */
	private void setSiteNo()
	{
		if(StringUtils.isNotBlank(o_site_no))
		{
			return;
		}
		int professional_type;
		try{
			professional_type = Integer.parseInt(o_professional_type);
		}catch(Exception e)
		{
			professional_type=0;
		}
		String strIntId = o_int_id;
		String key = null;

		Object[] objects = null;
		List objectsList = null;
		// 话务网(1)&数据网(2)查询[objects]表;传输网(3)查询[objects_trans]表
		switch(professional_type)
		{
			case 1:
			case 2:
				key = "objects:" + strIntId;
				objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects");
				objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					o_site_no=Util.getTempV(objectsList, 20);	// 缓存第20个字段(从0开始)
				}
				break;
			case 3:		// 传输网
				// key = "objects_trans:" + strIntId;
				key = "objects_trans_fdn_id:" + strIntId;
				// objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects_trans");
				objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects_trans_fdn_id");
				objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					o_site_no=Util.getTempV(objectsList, 18);// 缓存第18个字段(从0开始)
				}
				break;
			default:
				key = "objects:" + strIntId;
				objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects");
				objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					o_site_no=Util.getTempV(objectsList, 20);	// 缓存第20个字段(从0开始)
				}
		}

		if(StringUtils.isBlank(o_site_no)&&o_professional_type=="4"&&o_severity_keycode in ["39"])
		{
			String locate_info = o_locate_info;
			key = "objects:machroom_id:" + locate_info;
			objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects.machroom_id");
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_site_no=Util.getTempV(objectsList, 1);
			}
		}
	}

	/**
	 *  添加组信息，包敌电路组，传输网元组，动环网元组，集客业务和集客客户
	 *  并去掉重复。
	 * @param stdAlarm
	 * 增加组20131108
	 */
	public void alarmAddGroupInfo(CommonAlarm stdAlarm) {
		// 添加电路组
		this.addCircuitGroup(stdAlarm);
		// 添加业务组
		this.addGcssServiceGroup(stdAlarm);
		//添加传输网元组
		addTransNeGroup(stdAlarm);
		//添加动环网元组
		addPowerNeGroup(stdAlarm);
		// 添加客户组
		this.addGcssClientGroup(stdAlarm);
		// 添加标题网元组,added by	sunyuqiu@201509819
		addTitleGroup(stdAlarm);
		//交换、无线、数据,added by sunyuqiu@20160728
		addCoreNeGroup(stdAlarm);
		addWirelessNeGroup(stdAlarm);
		addDataNeGroup(stdAlarm);

		//增加集中化网元组
		addCentralNeGroup();
		// 去重
		this.deleteDupGroupId(stdAlarm);

	}

	/**
	 * 通过MAP不能有重复值的方式去掉重复数据
	 * @param stdAlarm
	 */
	private void deleteDupGroupId(CommonAlarm stdAlarm) {

		String group_id = "";
		Iterator it = deleteDupMap.keySet().iterator();
		while (it.hasNext()) {
			group_id = group_id + it.next().toString() + ",";
		}

		if(group_id.length()>1){
			group_id = group_id.substring(0, group_id.length() - 1);
		}
		o_group_id = group_id;
		// stdAlarm.setValue("group_id", group_id);
		// 通过group_id添加组名称group_name
	  this.addGroupName(o_group_id);

		deleteDupMap.clear();
	}
	// 传输网集客告警处理时限逻辑调整 add by lgy@20180510 required by wangyingfeng 需求：CMCC-GD-DRITXQ-20180322-007
	private void SetJiKeEffectService(){
		if(StringUtils.isNotBlank(i_pstr)){
			if(o_object_class in ["10011","706"]){
				if(i_pstr.contains("4"))
					o_effect_service = "42";//集客业务主用或备用路径中断
				else if(i_pstr.contains("1")&& StringUtils.isNotBlank(o_group_id) && o_group_id.contains("1382381700"))
					o_effect_service = "39";//集客业务可能中断
				else if(i_pstr.contains("2")|| i_pstr.contains("3"))
					o_effect_service = "42";//集客业务主用或备用路径中断
			}else{
				if(i_pstr.contains("4"))
					o_effect_service = "42";//集客业务主用或备用路径中断
				else if((i_pstr.contains("1") || i_pstr.contains("2"))&& StringUtils.isNotBlank(o_group_id) && o_group_id.contains("1382381700"))
					o_effect_service = "39";//集客业务可能中断
				else if(i_pstr.contains("3"))
					o_effect_service = "42";//集客业务主用或备用路径中断
			}
			log.info(o_fp0+" circuit_port_info:port_type["+i_pstr+"],effect_service["+o_effect_service+"]");
		}

		//（涉及集客大会战指标统计）集客告警“事件对业务的影响”增加赋值逻辑（CMCC-GD-DRITXQ-20190308-005）--sunyuqiu , liucaiyong@20190416
			if(o_eqp_object_class in ["2011","2012"] && o_group_id.contains("1382381700")){
				o_effect_service = "39";
			}
	}
	/**
	 * 添加交换网元组
	 * @param stdAlarm
	 */
	private void addCoreNeGroup(CommonAlarm stdAlarm){
		String int_id = o_eqp_int_id;
		this.findCacheByKey(int_id, "tai_core_negroup");
	}

	/**
	 * 添加无线网元组
	 * @param stdAlarm
	 */
	private void addWirelessNeGroup(CommonAlarm stdAlarm){
		String int_id = o_int_id;
		this.findCacheByKey(int_id, "tai_wireless_negroup");
	}

	/**
	 * 添加数据网元组
	 * @param stdAlarm
	 */
	private void addDataNeGroup(CommonAlarm stdAlarm){
		String int_id = o_eqp_int_id;
		this.findCacheByKey(int_id, "tai_data_negroup");
	}

	/**
	 * 添加标题网元信息
	 * @param stdAlarm
	 */
	private void addTitleGroup(CommonAlarm stdAlarm) {
		String circuit_id = this.joinKey(o_vendor_id,o_eqp_object_class,o_title_text);
		circuit_id = Util.getCRC32(circuit_id);
		this.findCacheByKey(circuit_id, "tai_titlegroup");
	}

	/**
	 * 添加电路组信息
	 * @param stdAlarm
	 */
	private void addCircuitGroup(CommonAlarm stdAlarm) {
		String circuit_id = o_circuit_id;
		this.findCacheByKey(circuit_id, "tai_circuitgroup");

	}

	/**
	 * 添加集客业务组信息
	 * @param stdAlarm
	 */
	private void addGcssServiceGroup(CommonAlarm stdAlarm) {
		String circuit_id = o_gcss_service;
		findCacheByKey(circuit_id,"tai_gcss_servicegroup");

	}


	/**
	 * 添加传输网元组信息
	 * @param stdAlarm
	 */
	private void addTransNeGroup(CommonAlarm stdAlarm){
		//String int_id = o_eqp_int_id;
		String int_id = Util.getCRC32(this.joinKey(o_eqp_object_class,o_eqp_int_id));
		this.findCacheByKey(int_id, "tai_trans_negroup");

		//增加传输网“所属片区”进行派单
		//if(o_professional_type == "3" && o_special_field6 == "广州花都")
		//{
		//	o_region_id = "609737586";
		//	deleteDupMap.put("-546216138", null);
		//}
	}

	/**
	 * 添加动环网元组
	 * @param stdAlarm
	 */
	private void addPowerNeGroup(CommonAlarm stdAlarm){
		String int_id = o_eqp_int_id;
		this.findCacheByKey(int_id, "tai_power_negroup");
	}

	/**
	 * 添加集客客户组
	 * @param stdAlarm
	 */
	private void addGcssClientGroup(CommonAlarm stdAlarm) {
		String circuit_id = o_gcss_client;
		this.findCacheByKey(circuit_id, "tai_gcss_clientgroup");

	}

	/**
	 * 添加集中化组
	 * @param stdAlarm
	 */
	private void addCentralNeGroup(){
		if(o_corr_str.contains("从化")||o_business_area.contains("从化")||o_corr_str.contains("花都")||o_business_area.contains("花都")||o_corr_str.contains("番禺")||o_business_area.contains("番禺")||o_corr_str.contains("增城")||o_business_area.contains("增城"))
		{
			//传输
			if(o_professional_type=="3"&&o_eqp_object_class in ["2001","2008","2034","2009","2011","2012"] && o_severity_keycode in["25", "26", "27"])
			{
				deleteDupMap.put("-546216138", null);
			}
			//AP,AC
			if(o_professional_type=="2"&&o_object_class in ["1001", "1002"])
			{
				deleteDupMap.put("-546216138", null);
			}
			//直放站
			if(o_professional_type=="1"&&o_object_class in ["11004"])
			{
				deleteDupMap.put("-546216138", null);
			}
			//bts-cell,nodeb-utrancell
			if(o_professional_type=="1"&&o_object_class in ["201", "300", "9201", "9300"])
			{
				deleteDupMap.put("-546216138", null);
			}
			//lte
			if(o_object_class in ["8104", "8105","41011","270"])
			{
				deleteDupMap.put("-546216138", null);
			}
		}

		if(o_corr_str.contains("福田")||o_business_area.contains("福田")||o_corr_str.contains("大鹏")||o_business_area.contains("大鹏")||o_corr_str.contains("坪山")||o_business_area.contains("坪山")||o_corr_str.contains("龙岗")||o_business_area.contains("龙岗")||o_corr_str.contains("光明")||o_business_area.contains("光明"))
		{
			//传输
			if(o_professional_type=="3"&&o_eqp_object_class in ["2001","2008","2034","2009","2011","2012"] && o_severity_keycode in["25", "26", "27"])
			{
				deleteDupMap.put("-889451795", null);
			}
			//AP,AC
			if(o_professional_type=="2"&&o_object_class in ["1001", "1002"])
			{
				deleteDupMap.put("-889451795", null);
			}
			//直放站
			if(o_professional_type=="1"&&o_object_class in ["11004"])
			{
				deleteDupMap.put("-889451795", null);
			}
			//bts-cell,nodeb-utrancell
			if(o_professional_type=="1"&&o_object_class in ["201", "300", "9201", "9300"])
			{
				deleteDupMap.put("-889451795", null);
			}
			//lte
			if(o_object_class in ["8104", "8105","41011","270"])
			{
				deleteDupMap.put("-889451795", null);
			}
		}
	}

	/**
	 * 分组信息查询缓存使用
	 * @param circuit_id
	 * @param keyPre
	 */
	private void findCacheByKey(String circuit_id,String keyPre) {
		if (StringUtils.isBlank(circuit_id)) {
			return;
		}
		String[] ids = circuit_id.split(",");
		for (String id : ids) {
			String key = keyPre+":" + id;
			//List list = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key, keyPre);
			List list = (List) util.getObject(this.CUSTOMCACHEHour, key, keyPre);
			if (list != null&& list.size() >0) {
				for (int i = 0; i < list.size(); i++) {
					Object[] objs = (Object[]) list.get(i);
					if (objs.length>0) {
						deleteDupMap.put(objs[1], null);
					}
				}
			}
		}
	}


	/**
	 * 需要后处理的信息
	 */
	private void setPostProcessor()
	{
		this.processPrapareBySubAlarmType();
		//this.setJikeStandard();

		//暂未接入资源
		//字典表数据为:1-国际 2-跨省 3-跨地市 4-地市内,资源表数据为:0-地市 1-省内 2-跨省 3-国际
		//if(o_service_crossdomain_type=="0"){
		//		o_service_crossdomain_type="4";
		//}else if(o_service_crossdomain_type=="1"){
		//		o_service_crossdomain_type="3";
		//}else if(o_service_crossdomain_type=="2"){
		//		o_service_crossdomain_type="2";
		//}else if(o_service_crossdomain_type=="3"){
		//		o_service_crossdomain_type="1";
		//}
	}

	/**
	 * 集客拟标准化
	 */
	private void setJikeStandard()
	{
		//集客+传输
		//集客AZ端上联口及拓扑对端口关联,sunyuqiu@20160523
		//取消SLA二次标准化  altered by lgy@20180510 required by wangyingfeng 需求：CMCC-GD-DRITXQ-20180322-007
		/**	if(StringUtils.isNotBlank(o_gcss_service)&&o_professional_type == "3" && o_effect_service!="40")
		 {
		 //专业+厂家+设备类型+告警解释辅助字段 (professional_type vendor_id eqp_object_class mapping_type alarm_unit)
		 String key = this.joinKey("tfm_alarm_stand_info",o_professional_type,o_vendor_id,o_eqp_object_class,"集客",o_standard_alarm_name+"+"+o_effect_service);
		 log.info(o_fp0+" conSLA key="+key);
		 Object[] stand = util.getObject(this.ALARMSTANDARDCACHE, key,"gd.alarmStandard.31")
		 List olist = stand==null?null:Arrays.asList(stand);
		 if (olist != null&&!olist.isEmpty()) {
		 //o_org_severity=Util.getTempV(olist, 2);
		 //o_send_jt_flag=Util.getTempV(olist, 3);
		 //o_logic_alarm_type=Util.getTempV(olist, 5);
		 //o_logic_sub_alarm_type=Util.getTempV(olist, 6);
		 //o_standard_alarm_name=Util.getTempV(olist,7);
		 //o_standard_alarm_id=Util.getTempV(olist, 8);
		 o_effect_ne=Util.getTempV(olist, 9);
		 //o_effect_service=Util.getTempV(olist, 10);
		 //o_alarm_value=Util.getTempV(olist, 11);
		 //o_preprocess_manner=Util.getTempV(olist, 12);
		 //o_province_process_flag=Util.getTempV(olist, 13);
		 //o_department_process_flag=Util.getTempV(olist, 14);
		 }
		 }
		 */
		//传输告警上报集团,added by liucaiyong@20150812
		//增加数据网上报集团,updated by liucaiyong@20151229
		if(o_professional_type in ["2","3"]&&StringUtils.isNotBlank(o_standard_alarm_id)){
			//if(o_professional_type == "3"&&StringUtils.isNotBlank(o_standard_alarm_id)){
			String key="common_subalarm_define@"+o_professional_type+"@"+o_vendor_id+"@"+o_eqp_object_class+"@"+o_standard_alarm_id;
			Object[] stand = util.getObject(this.CUSTOMCACHE,key,"common_subalarm_define.5");
			List olist = stand==null?null:Arrays.asList(stand);
			if (olist != null&&!olist.isEmpty()) {
				o_send_jt_flag = "1";
				log.info(o_fp0+" con JT-CS key="+key);
			}
		}
		//二干告警上报新增上报逻辑,added by liucaiyong,required by luocheng@20160118
		if(o_severity_keycode == "41" && o_eqp_object_class in ["2001","2009"] && o_org_severity == "2"){
			o_send_jt_flag = "1";
		}
		if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"] && o_org_severity == "1"){
			o_send_jt_flag = "1";
		}
		//集客跨省专线告警上报,sunyuqiu@20160118
		//if(StringUtils.isNotBlank(o_circuit_no)){
		//	String skey="gd:circuit:level:"+o_circuit_no;
		//	Object[] sObjects = util.getObject(this.CUSTOMCACHE,skey,"gdCircuitLevel");
		//	List olist = sObjects==null?null:Arrays.asList(sObjects);
		//	if (olist != null&&!olist.isEmpty()) {
		//		String svalue = Util.getTempV(olist, 5);
		//		if(StringUtils.isNotBlank(svalue)){
		//			o_send_jt_flag = "1";
		//			log.info(o_fp0+" circuitno["+skey+"] get-value:"+svalue);
		//		}
		//	}
		//}
		// if(StringUtils.isNotBlank(o_circuit_no)){
		// 跨省集客专线衍生告警（集团工作）的补充需求：集客告警标志=1（集客跨省专线的集客告警）
		// if(StringUtils.isNotBlank(o_circuit_no) && o_redefine_severity == "1"){
		// 省部接口跨省集客专线告警上报逻辑调整（CMCC-GD-DRITXQ-20210519-004）：告警的“网元组ID”（group_id）字段不包含“集客省部接口抑制业务组”（group_id=252809044）,则上报集团
		if(StringUtils.isNotBlank(o_circuit_no) && o_redefine_severity == "1" && !o_group_id.contains("252809044")){
			String[] cnos = o_circuit_no.split(",");
			for(String cno:cnos){
				String skey="gd:circuit:level:"+cno;
				Object[] sObjects = util.getObject(this.CUSTOMCACHE,skey,"gdCircuitLevel");
				List olist = sObjects==null?null:Arrays.asList(sObjects);
				if (olist != null&&!olist.isEmpty()) {
					String svalue = Util.getTempV(olist, 5);
					if(StringUtils.isNotBlank(svalue)){
						o_send_jt_flag = "1";
						log.info(o_fp0+" circuitno["+skey+"] get-value:"+svalue);
						break;
					}
				}
			}
		}

		this.transJT();
	}

	private void transJT(){//传输告上报集团范围，sunyuqiu@20161020
		if(o_professional_type != "3")
			return;

		//if(o_send_jt_flag == "1")
		//		return;

		String tmp = "1";
		if(o_vendor_id == "8"){//一、华为
			if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"] && o_title_text == "MUT_LOS" && !o_ne_label.contains("OLA") &&(o_ne_label.contains("OAU") || o_ne_label.contains("OBU") ||o_ne_label.contains("OPU"))){
				//1.	省内二干波分单点中断。
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]华为省干OTN单点中断";
			}else if(o_severity_keycode in ["41","25","26"] && o_object_level == "70601"  && o_eqp_object_class == "2009" && o_title_text in ["ETH_LOS","R_LOS","物理端口DOWN","ETH_LINK_DOWN"] && !o_group_id.contains("-303091744")&& (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
				//2.PTN二干/城域汇聚层及以上单点/两点中断
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]华为PTN城域汇聚层单点中断";
			}else if(o_severity_keycode in ["41","25","26"]  && o_eqp_object_class in ["2008","2034"] && o_title_text in ["HARD_BAD","BD_STATUS","OA_LOW_GAIN","HARD_ERR","COMMUN_FAIL"] && (o_ne_label.contains("OAU") || o_ne_label.contains("OBU") ||o_ne_label.contains("OPU"))){
				//3.	光放板的严重硬件类告警
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]华为OTN设备光放板上报严重硬件类故障";
			}else if(o_eqp_object_class == "2001" && o_title_text == "R_LOS" && o_object_level == "70601" && o_severity_keycode in ["41","25","26"] && (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
				//4. SDH二干/城域汇聚层及以上单点/两点中断
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]华为SDH城域汇聚层单点中断";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_object_level == "70601" &&o_severity_keycode in ["41","25","26"] && o_title_text in ["ETH_LOS","R_LOS","物理端口DOWN","ETH_LINK_DOWN"] ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 1.单点中断类
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]华为PTN城域汇聚层承载LTE业务的L3层网元NNI口线路单点中断";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["HARD_BAD","BD_STATUS"] ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 2.网元硬件类告警
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]华为PTN城域汇聚层承载LTE业务的L3层网元设备硬件告警";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["POWER_FAIL","NO_BD_POWER"] ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 3.电源类告警
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]华为PTN城域汇聚层承载LTE业务的L3层网元电源类告警";
			}
		}else if(o_vendor_id == "7"){//二、中兴
			if(o_object_level == "70601" && o_eqp_object_class == "2009" && o_severity_keycode in ["41","25","26"] && o_title_text in ["SDH 端口 信号丢失(LOS)","以太网物理接口(ETPI) 信号丢失(LOS)","以太网物理接口(ETPI) Ethernet端口未连接"]&& !o_group_id.contains("-303091744") && (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
				//1.	PTN二干/城域汇聚层及以上单点/两点中断
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]中兴PTN城域汇聚层单点中断";
			}else if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"] && o_title_text in ["单板不在位告警","输出强光告警","输出光功率过弱告警","输入无光告警","输入弱光告警","模块失效或模块通讯故障告警","输出无光告警"] && (o_ne_label.contains("SEOBA")||o_ne_label.contains("EOBAS")||o_ne_label.contains("EONAD")||o_ne_label.contains("SSDMR")||o_ne_label.contains("SDMR")||o_ne_label.contains("EONAS")) ){
				//2.  光放板的严重硬件类告警
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]中兴OTN/WDM设备光放板上报严重硬件类故障";
			}else if(o_object_level == "70601" && o_eqp_object_class == "2001" && o_severity_keycode in ["41","25","26"] && o_title_text in ["信号丢失(LOS)","STM1光物理接口 信号丢失(LOS)","STM4光物理接口 信号丢失(LOS)","STM16光物理接口 信号丢失(LOS)","STM64光物理接口 信号丢失(LOS)"] && (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
				//3.        SDH二干/城域汇聚层及以上单点/两点中断。
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]中兴SDH城域汇聚层单点中断";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_object_level == "70601" &&o_severity_keycode in ["41","25","26"] && o_title_text in ["SDH 端口 信号丢失(LOS)","以太网物理接口(ETPI) 信号丢失(LOS)","以太网物理接口(ETPI) Ethernet端口未连接"] ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 1.单点中断类
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]中兴PTN城域汇聚层承载LTE业务的L3层网元NNI口线路单点中断";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["单板脱位","单板运行不正常","关键芯片器件 芯片错误","关键芯片器件 交换转发芯片异常"] ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 2.网元硬件类告警
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]中兴PTN城域汇聚层承载LTE业务的L3层网元设备硬件告警";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["单板 保护电源无输入","单板 电源故障","单板 电源失效","电源故障","电源掉电","电源输入过压","电源输入欠压","电源输入电压越限"] ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 3.电源类告警
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]中兴PTN城域汇聚层承载LTE业务的L3层网元电源类告警";
			}
		}else if(o_vendor_id == "202"){//三、烽火
			if(o_severity_keycode == "41" && o_eqp_object_class == "2034" && o_title_text == "ILS" && (o_ne_label.contains("PA") || o_ne_label.contains("OA"))){
				//1.	省内二干波分单点中断。---------- ILS
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]烽火省干OTN单点中断";
			}else if(o_severity_keycode in ["25","26"] && o_eqp_object_class =="2009" && o_object_level == "70601" && o_title_text in ["RLOS","LINK_LOS"] && !o_group_id.contains("-303091744")&& (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
				//2. PTN二干/城域汇聚层及以上单点/两点中断
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]烽火PTN城域汇聚层单点中断";
			}else if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"] && o_title_text in ["FAIL","COMFAIL","GAIL_LOW","POWERALM"] && (o_ne_label.contains("PA") || o_ne_label.contains("OA"))){
				//3.	光放板的严重硬件类告警。--------------- FAIL
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]烽火OTN设备光放板上报严重硬件类故障";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_object_level == "70601" &&o_severity_keycode in ["41","25","26"] && o_title_text in ["RLOS","LINK_LOS"] ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 1.单点中断类
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]烽火PTN城域汇聚层承载LTE业务的L3层网元NNI口线路单点中断";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["FAIL","CARD_ABSENT"] ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 2.网元硬件类告警
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]烽火PTN城域汇聚层承载LTE业务的L3层网元设备硬件告警";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["POWERALM","POWERINTERRUPTION"] ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 3.电源类告警
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生关联]烽火PTN城域汇聚层承载LTE业务的L3层网元电源类告警";
			}
		}else if(o_vendor_id in ["0","12"]){//四 、贝尔、阿尔卡特
			if(o_severity_keycode in ["25","26"] && o_eqp_object_class == "2009" && o_object_level == "70601" && o_title_text == "Loss Of Signal" && !o_group_id.contains("-303091744")&& (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
				//1.	PTN/城域汇聚层及以上单点/两点中断
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]阿卡PTN城域汇聚层单点中断";
			}else if(o_object_level == "70601" && o_eqp_object_class == "2001" && o_severity_keycode in ["41","25","26"] && o_title_text == "Loss Of Signal"&& (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
				//2.        SDH/城域汇聚层及以上单点/两点中断
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]阿卡SDH城域汇聚层单点中断";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_object_level == "70601" &&o_severity_keycode in ["25","26"] && o_title_text == "Loss Of Signal" ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 1.单点中断类
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]阿卡PTN城域汇聚层承载LTE业务的L3层网元NNI口线路单点中断";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text == "Hardware failure" ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 2.网元硬件类告警
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生告警]阿卡PTN城域汇聚层承载LTE业务的L3层网元设备硬件告警";
			}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text == "Power Failure" ){
				//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 3.电源类告警
				o_send_jt_flag = tmp;
				//o_standard_alarm_name = "[衍生关联]阿卡PTN城域汇聚层承载LTE业务的L3层网元电源类告警";
			}
		}

		if(o_send_jt_flag == tmp)
			log.info(o_fp0+" transJT ");
	}

	/**
	 * 家客逻辑,by liucaiyong@20160426
	 */
	private void setJiaKe(){
			if(o_eqp_object_class == "2011"){
				Object[] cobjects = util.getObject(CUSTOMCACHE,"olt:"+o_eqp_int_id,"olt");
				List clist = cobjects==null?null:Arrays.asList(cobjects);
		  if(clist!=null&&!clist.isEmpty()){
			  o_area_type = Util.getTempV(clist,11);
			  o_ne_ip = Util.getTempV(clist,12);
		  }
			}
		if(o_eqp_object_class == "2009" && o_title_text == "OLT上联单边隐患"){
			//CMCC-GD-DRITXQ-20170802-008  PTN网元告警：OLT上联单边告警，关联OLT设备预处理需求 liucaiyong@20170920,by wangyingfeng
			String task = "v_olt_ptn";
			Object[] objects;
			List plist;
			String oltstr="";
			objects = util.getObject(CUSTOMCACHE,joinKey(task,o_eqp_int_id),task);
			plist = objects==null?null:Arrays.asList(objects);

			if(plist!=null&&!plist.isEmpty()){
				oltstr = Util.getTempV(plist,1);
			}

			if(StringUtils.isNotBlank(oltstr)){
				log.info(o_fp0+" jiake-ptn-olts["+oltstr+"] from " + joinKey(task,o_eqp_int_id));

				String extrainfo="";

				String[] olts = oltstr.split(",");
				String tmp;
				for(String olt:olts){
					task = "objects_trans:fdn";
					objects = util.getObject(this.CUSTOMCACHE, joinKey(task,olt),task);
					plist = objects==null?null:Arrays.asList(objects);
					if(plist!=null&&!plist.isEmpty()){
						tmp = Util.getTempV(plist, 0);//取到FDN ID
						if(StringUtils.isBlank(tmp)){
							continue;
						}
					}

					// task = "objects_trans";
					task = "objects_trans_fdn_id";
					objects = util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKey(task,tmp),task);
					plist = objects==null?null:Arrays.asList(objects);
					if(plist!=null&&!plist.isEmpty()){
						tmp		=	Util.getTempV(plist, 5);//根据FDN_ID得到OLT名
						log.info(o_fp0+" jiake-ptn-olt["+olt+"] get fdn:" + tmp);
						if(StringUtils.isBlank(tmp)){
							continue;
						}
					}

					String oltInfo = tmp + "：\n";
					task = "olt";
					objects = util.getObject(CUSTOMCACHE,this.joinKey(task,olt),task);
					plist = objects==null?null:Arrays.asList(objects);
					if(plist!=null&&!plist.isEmpty()){
						tmp = Util.getTempV(plist,7);//PON口数量：port_num
						if(StringUtils.isBlank(tmp)){
							tmp = "0";
						}
						oltInfo+="PON口数量："+tmp+"\n";

						tmp = Util.getTempV(plist,8);//小区数：related_cell_num
						if(StringUtils.isBlank(tmp)){
							tmp = "0";
						}
						oltInfo+="覆盖小区数："+tmp+"\n";

						tmp = Util.getTempV(plist,5);//related_client_num
						if(StringUtils.isBlank(tmp)){
							tmp = "0";
						}
						oltInfo+="承载家宽用户数："+tmp+"\n";

						tmp = Util.getTempV(plist,4);//related_onu_ftth_num+related_onu_fttb_num
						if(StringUtils.isBlank(tmp)){
							tmp = "0";
						}
						oltInfo+="下带ONU数："+tmp+"\n";

						tmp = Util.getTempV(plist,9);//iptv
						if(StringUtils.isBlank(tmp)){
							tmp = "0";
						}
						oltInfo+="下带IPTV用户数："+tmp+"\n\n";

						extrainfo += oltInfo;
					}
				}

				if(StringUtils.isNotBlank(extrainfo)){
					log.info(o_fp0+" jiake-ptn-olts-info:"+extrainfo);
					o_alarm_text+="\n\n"+extrainfo;
				}
			}

		}
		if(o_eqp_object_class in ["2011","2012"])//过滤掉非OLT, ONU
		{
			//（涉及集客大会战指标统计）集客告警“事件对业务的影响”增加赋值逻辑（CMCC-GD-DRITXQ-20190308-005）--sunyuqiu , liucaiyong@20190416
			if(o_group_id.contains("1382381700")){
				o_effect_service = "39";
			}

			String task;
			String jkey;
			Object[] objects;
			List plist;

			String extrainfo="";
			if(o_object_class=="2012"){//onu
				//idn4chuanshu 处理
				//ONU-VIP
				extrainfo="承载家宽用户数："+o_home_client_num;
				if(StringUtils.isNotBlank(o_group_id)&&o_group_id.contains("-291816403")){
					o_object_level = "6";
				}
				//else
				//	o_object_level = "5";
			}

			if(o_object_class=="2011"){//olt
				task="olt";
				jkey=this.joinKey(task,o_int_id);
				objects = util.getObject(CUSTOMCACHE,jkey,task);
				plist = objects==null?null:Arrays.asList(objects);
				log.info(o_fp0+" jiake-olt-key:"+jkey);

				if(plist!=null&&!plist.isEmpty())
				{
					o_link_onu_num = Util.getTempV(plist,4);//related_onu_ftth_num+related_onu_fttb_num
					o_home_client_num = Util.getTempV(plist,5);//related_client_num

					String tmp = Util.getTempV(plist,6);//是否为双上行链路：is_double_uplink(0:双上行链路;1:单上行链路)
					tmp = tmp=="0"?"双上行链路\n":"单上行链路\n";
					extrainfo = "是否为双上行链路："+tmp;

					tmp = Util.getTempV(plist,7);//PON口数量：port_num
					if(StringUtils.isBlank(tmp)){
						tmp = "0";
					}
					extrainfo+="PON口数量："+tmp+"\n";

					tmp = Util.getTempV(plist,8);//小区数：related_cell_num
					extrainfo+="覆盖小区数："+tmp+"\n承载家宽用户数："+o_home_client_num+"\n下带ONU数："+o_link_onu_num+"\n";

					tmp = Util.getTempV(plist,9);//iptv
					if(StringUtils.isBlank(tmp)){
						tmp = "0";
					}
					extrainfo+="下带IPTV用户数："+tmp+"\n";

					//??? 每个PON口下挂ONU数量及用户数量
					log.info(o_fp0+" jiake-olt,link_onu_num["+o_link_onu_num+"],home_client_num["+o_home_client_num+"],txt["+extrainfo+"]");
				}
			}
			//else if(o_eqp_object_class=="2011"&&o_object_class in ["706","10011"] && StringUtils.isNotBlank(o_special_field1)){
			else if(o_eqp_object_class=="2011"&&o_object_class in ["706","10011"]){
				if(StringUtils.isBlank(o_special_field1)){
					o_special_field1 = "0";
				}
				if(StringUtils.isBlank(o_special_field4)){
					o_special_field4 = "0";
				}
				extrainfo+="覆盖小区数："+o_special_field1+"\n承载家宽用户数："+o_home_client_num+"\n下带ONU数："+o_link_onu_num+"\n下带IPTV用户数："+o_special_field4+"\n";
				o_special_field1 = "";
				o_special_field4 = "";
			}
			if(StringUtils.isNotBlank(o_gcss_client)){
				o_redefine_severity = "1";
			}else if(StringUtils.isNotBlank(o_home_client_num)&&o_home_client_num!="0"){
				o_redefine_severity = "3";
			}else{
				o_redefine_severity = "2";
				o_network_type_top = "4";
			}

			if(o_redefine_severity in ["1","3"]){
				extrainfo=o_eqp_object_class == "2011"?"\n设备类型：OLT\n"+extrainfo:"\n设备类型：ONU\n"+extrainfo;
				o_alarm_text+="\n"+extrainfo;
			}else if(StringUtils.isNotBlank(extrainfo)){
				o_alarm_text+="\n"+extrainfo;
			}

			//ONU增加物业小区代维
			if(o_eqp_object_class=="2012" && o_redefine_severity != "1"){
				//objects = util.getObject(PORTCACHE,"pon_cover:"+o_eqp_int_id,"pon_cover");
				//redis缓存外挂
						  // objects = (Object[]) rutil.getObject("pon_cover:"+o_eqp_int_id);
						  objects = (Object[]) util.getObject(CUSTOMCACHE, "pon_cover:"+o_eqp_int_id, "pon_cover");
				plist = objects==null?null:Arrays.asList(objects);
				String dw;
				if(plist!=null&&!plist.isEmpty()){
					dw = Util.getTempV(plist,2);
					if(StringUtils.isNotBlank(dw)){
						if(StringUtils.isBlank(o_special_field18)){
							o_special_field18 =  "设备:"+dw+";";
						}else if(o_special_field18.startsWith("设备:")){
							o_special_field18 = "设备:"+dw+o_special_field18.substring(o_special_field18.indexOf(";"));
						}else{
							o_special_field18 = "设备:"+dw+ ";" + o_special_field18;
						}
					}
				}

				//小区名为空或小区名找不到则小区维护单位置空,luocheng@20160809
				if(StringUtils.isBlank(o_ne_alias)||StringUtils.isBlank(dw)){
					int pos = o_special_field18.indexOf("设备:");
					if(pos>=0){
						o_special_field18 = o_special_field18.replace(o_special_field18.substring(pos,o_special_field18.indexOf(";", pos)+1), "");
					}
				}
				log.info(o_fp0+" pon_cover-dw-18:"+o_special_field18);
			}

		}
		//OLT限制仅对资源状态为“现网有业务”且“家宽用户数”为300以上的告警才上报  added by lgy@20181207
		if(o_eqp_object_class=="2011"){
			int homeClientNum=0;
			if(o_home_client_num==""||o_home_client_num==null){
				homeClientNum=0;
			}else{
				homeClientNum =Integer.parseInt(o_home_client_num);
			}
			// 亿阳部省接口OLT脱管告警报送条件：由“现网有业务”且“用户数”为300以上的设备告警  改为  “现网有业务”且“用户数”为1000以上的设备告警 , updated by liucaiyong@20200526
			//if(o_resource_status!="1"||(homeClientNum < 300 && o_sub_alarm_type == "90")){
			if(o_resource_status!="1"||(homeClientNum < 1000 && o_sub_alarm_type == "90")){
				o_send_jt_flag = "0";
			}
			log.info(o_fp0+"  home_client_num=["+o_home_client_num+"],send_jt_flag=["+o_send_jt_flag+"]");
		}
	}

	/**
	 * 商宽业务标识和商宽用户数统计
	 */
	private void broadband(){
	  // CMCC-GD-DRITXQ-20200612-006：关于新增获取ONU是否为“企宽”字段并根据该字段在OLT脱管告警信息中新增影响企宽用户数等功能需求
	  // OLT脱管告警：object_class=2011、sub_alarm_type=90、alarm_title_text not like '%[衍生告警]%'，因衍生告警是jfm之后的环节，暂未增加该条件
	  String tmp_ne_sub_type = "";
	  if (o_object_class == "2011" && o_sub_alarm_type == "90" && StringUtils.isNotBlank(o_idn)) {
		// String key = "olt:" + o_idn;
		// redis缓存外挂
		String extrainfo = "";
		// Object[] objects = (Object[]) rutil.getObject("olt:" + o_idn);
		Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "olt:" + o_idn, "olt_fdn");
		List objectsList = objects == null ? null : Arrays.asList(objects);
		if(objectsList != null && !objectsList.isEmpty()) {
			String tmp_num_commercial_user = Util.getTempV(objectsList, 14);
			String tmp_num_individual_user = Util.getTempV(objectsList, 15);
			extrainfo += "企宽用户数：" + tmp_num_commercial_user + "\n" + "个人宽带用户数：" + tmp_num_individual_user + "\n";
			o_alarm_text += extrainfo;

			if (tmp_num_commercial_user > "0") {
			  // ne_sub_type=21表示“商业宽带”
			  tmp_ne_sub_type = "21";
			}
			// log.info(o_fp0 + "，broadband-num-user-info：" + extrainfo);
			}
	  }

	  // PON LOS告警
	  if (o_eqp_object_class == "2011" && o_object_class == "706" && o_sub_alarm_type == "691" && StringUtils.isNotBlank(o_idn)) {
		// String key = "ptp_pon:" + o_idn;
		// redis缓存外挂
		String extrainfo = "";
		// Object[] objects = (Object[]) rutil.getObject("ptp_pon:" + o_idn);
		Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "ptp_pon:" + o_idn, "ptp_pon");
		List objectsList = objects == null ? null : Arrays.asList(objects);
		if(objectsList != null && !objectsList.isEmpty()) {
			String tmp_num_commercial_user = Util.getTempV(objectsList, 10);
			String tmp_num_individual_user = Util.getTempV(objectsList, 11);
			extrainfo += "企宽用户数：" + tmp_num_commercial_user + "\n" + "个人宽带用户数：" + tmp_num_individual_user + "\n";
			o_alarm_text += extrainfo;

			if (tmp_num_commercial_user > "0") {
			  // ne_sub_type=21表示“商业宽带”
			  tmp_ne_sub_type = "21";
			}
			// log.info(o_fp0 + "，broadband-num-user-info：" + extrainfo);
			}
	  }
	  // tmp_ne_sub_type非空，即tmp_ne_sub_type判断为“商业宽带”赋值给ne_sub_type
	  if (StringUtils.isNotBlank(tmp_ne_sub_type)) {
		// 若告警同时为20：“和酒店”、21：“商业带宽”时，则标识告警为20：【和酒店】
		if (o_ne_sub_type == "20" && tmp_ne_sub_type == "21") {
		  o_ne_sub_type = "20";
		} else {
		  o_ne_sub_type = tmp_ne_sub_type;
		}
	  }
	}

	/**
	 * 判断是否满足关联电路账号
	 */
	private boolean if_need_set_circuit()
	{
		boolean ret = false;
		if(o_object_class in ["201","300","9201","9300","8104","8105","41011","270"] && o_sub_alarm_type	==	"68"){
			ret=true;
		}else if(o_eqp_object_class in ["2011"]){
			ret=true;//OLT关联电路 by sunyuqiu edit by liucaiyong@20151222
		}else if(o_vendor_id in ["1","7","8","9"] && o_sub_alarm_type in ["973","975"] && o_object_class in ["8104","9201","41011"] ){
			ret=true;
		}else if(o_vendor_id=="4" && o_standard_alarm_name in ["iOMS与NodeB的连接中断","7650基站退服:S1接口连接失败"] && o_object_class in ["8104","41011"]){
			ret=true;
		}

		log.info(o_fp0+" if_need_set_circuit :"+ret+"/"+o_vendor_id+"/"+o_title_text+"/"+o_object_class);
		return(ret);
	}
	/**
	 *产品号码
	 *add by lgy@20180702 required by wangyingfeng
	 */
	private void setProductNo(){
		String task="";
		String tkey="";
		String tmp="";
		if(StringUtils.isNotBlank(o_gcss_client)&&StringUtils.isNotBlank(o_gcss_service)){
			String[] ServiceId=o_gcss_service.toString().split(",");
			for(String id:ServiceId){
				task= "nrmdb.service";
				tkey = "service:"+id;
				Object[] objects = util.getObject(CUSTOMCACHE, tkey,task);
				List list = objects==null?null:Arrays.asList(objects);
				if(list!=null&&!list.isEmpty())
				{
					tmp = Util.getTempV(list, 6);
					product_no = appendStr(product_no,tmp);
				}
			}
			log.info("fp0:"+o_fp0+" product_no:"+product_no);
		}
	}
	/**
	 * 其他业务处理
	 */
	private void other()
	{
		this.setMoDuan();
		//circuit_port_service();
		if(o_title_text == "VIP小区0流量告警" && o_org_severity=="2" ){
			//log.info(o_fp0+"  o_title_text["+o_title_text+"] o_alarm_text["+o_alarm_text+"]");
			def matcher_v0 = o_alarm_text=~/^(.*LTE流量. 小区流量损失值=)(\d+\.?\d*)(\D+.*$)/
			if(matcher_v0.size()>0){
				int text1 =Float.parseFloat(matcher_v0[0][2])*2
				o_alarm_text=matcher_v0[0][1] + text1+matcher_v0[0][3]
			}
			//log.info(o_fp0+" 处理后 o_title_text["+o_title_text+"] o_alarm_text["+o_alarm_text+"]");
		}

		//gsm/td/lte退服关联电路,sunyuqiu@20150401
		//OLT关联电路 by sunyuqiu edit by liucaiyong@20151222
		if(if_need_set_circuit())
		{
			String key;
			String task="circuit_ne_relation";
			if(o_object_class in ["201","9201","8104","41011"]){
				key = joinKey(task,(o_object_class == "41011" ? "8104" : o_object_class),o_int_id);
			}else if(o_object_class in ["300","9300","8105","270"]){
				//String eqpObj	=	o_eqp_object_class;
				String eqpObj	=	"8104";
				if(o_object_class == "300"){
					eqpObj = "201";
				}else if(o_object_class == "9300"){
					eqpObj = "9201";
				}
				key = joinKey(task,eqpObj,o_ParentIntId);
			}else{//2011
				key = joinKey(task,o_eqp_object_class,o_eqp_int_id);
			}

			//List results = util.getObject(this.CUSTOMCACHE,key,task);
			//redis缓存外挂
				// List results = rutil.getObject(key);
				List results = util.getObject(CUSTOMCACHE, key, task);
				int size = results==null?0:results.size();
				log.debug("fp0-{},key={},list.size={}",o_fp0,key,size);
			if (size>0) {
					String cid	=	Util.getTempV(results,2);
					String cno	=	Util.getTempV(results,3);
					String clev =   Util.getTempV(results,4);

					//if(StringUtils.isNotBlank(cno)&&!circuitno.contains(cno)){//拼接电路编号
					//    circuitno+=(j==0?"":",")+cno;
					//     cids += (j==0?"":",")+cid;
					//    j++;
					//}
					o_circuit_no  = appendStr(o_circuit_no,cno);
					o_circuit_id  = appendStr(o_circuit_id,cid);

					if(StringUtils.isNotBlank(clev)){
						//int tlev=Integer.parseInt(clev);//比较电路级别
						//if(level>tlev){
						//	level=tlev;
						o_circuit_level = LevelCompare("circuit_level",clev,o_circuit_level);
						//}
					}

				//o_circuit_id = cids;
				//o_circuit_no	=	circuitno;
				//o_circuit_level	=	level==1000?"":level+"";
				log.info(o_fp0+" circuit---circuitno:"+o_circuit_no+" o_circuit_level:"+o_circuit_level);
			}
		}

		//增加传输网接入层下带高铁基站高铁小区的网元打上高铁标签（CMCC-GD-DRITXQ-20170302-012 ,sunyuqiu@20170414
		if(o_professional_type == "3" && o_severity_keycode == "27"&&o_eqp_object_class!="2011"&&o_eqp_object_class!="2012"){
			String bnames="";
			String tkey = "";
			String task="circuit_area_relation";
			Circuit circuit = (Circuit) util.getObject(SimpleFindUtil.CIRCUIT_CACHE, new BigDecimal(o_eqp_int_id));
			String circuits = circuit==null?"":circuit.getCircuit_id();
			//log.info(o_fp0+" circuit-area_circuits["+circuits+"] from eqp["+o_eqp_int_id+"]");
			String[] cids = circuits.split(",");
			int k=0;
			for(String cid:cids){
				if(StringUtils.isBlank(cid))
					continue;
				tkey =this.joinKey(task,cid);
				List results = util.getObject(this.CUSTOMCACHE,tkey,task);
				if (results!=null && !results.isEmpty()) {
					for (Object item : results) {
						Object[] result = (Object[])item;
						if (result==null || result.length<1) {
							break;
						}
						List olist = Arrays.asList(result);
						String nid	=   Util.getTempV(olist,1);
						//log.info(o_fp0+" circuit-area_bid:"+nid);
						String bname = "";
						Map map = this.getObjectsValueWithMap(this.joinKey("objects", nid), "objects");
						if(map.size()>0){
							bname = map.get("userlabel");
						}
						//log.info(o_fp0+" circuit-area_bname:"+bname);
						if(StringUtils.isNotBlank(bname) && !bnames.contains(bname)){
							if(k++>0)
								bnames+="、";
							bnames+=bname;
							log.info(o_fp0+" circuit-area:cricuit:"+cid+",int_id:"+nid+",bname:"+bname);
						}
					}
				}
			}
			if(StringUtils.isNotBlank(bnames)){
				o_ne_sub_type = "1";
				log.info(o_fp0+" circuit-area_relation:"+bnames);
			}
			o_alarm_text += "\n关联高铁基站:"+bnames;
		}

		//核心与传输跨专业关联 ,sunyuqiu@20170112
		if(o_sub_alarm_type in ["1000","1001","1002","1003"]){
			String task="port_circuit_core";
			//int j=0;
			List results = util.getObject(this.CUSTOMCACHE,this.joinKey(task,o_int_id,o_object_class),task);
			//String circuitno="";//注意去重
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<1) {
						break;
					}
					List olist = Arrays.asList(result);
					String cno	=   Util.getTempV(olist,0);
					//if(StringUtils.isNotBlank(cno)&&!circuitno.contains(cno)){//拼接电路编号
					//    if(circuitno.length()>254){
					//        break;
					//    }
					//
					//    circuitno+=(j==0?"":",")+cno;
					//    j++;
					//}
					o_circuit_no  = appendStr(o_circuit_no,cno);
				}
			}
			//if(circuitno.length()>254){
			//		    circuitno = circuitno.substring(0,254);
			//		}
			//		o_circuit_no	=	circuitno;
			//o_circuit_no = subStrLen(circuitno);
			log.info(o_fp0+" port_circuit_core["+o_circuit_no+"] by key "+this.joinKey(task,o_int_id,o_object_class));
		}

		if(o_eqp_object_class == "2011"){//OLT告警与传输电路关联,sunyuqiu@20161011
			String ckey;
			String task="olt_res_ne";
			if(o_object_class == "706"){
				task="olt_res_port";
				ckey = this.joinKey(task,o_int_id);
			}else
				ckey = this.joinKey(task,o_eqp_int_id);

			//String circuitno="";//注意去重
			//int j=0;
			List results = util.getObject(this.CUSTOMCACHE,ckey,task);
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<1) {
						break;
					}
					List olist = Arrays.asList(result);
					String cno	=	Util.getTempV(olist,1);

					//if(StringUtils.isNotBlank(cno)&&!circuitno.contains(cno)){//拼接电路编号
					//    circuitno+=(j==0?"":",")+cno;
					//    j++;
					//}
					o_circuit_no  = appendStr(o_circuit_no,cno);
				}
				//o_circuit_no = subStrLen(circuitno);
				log.info(o_fp0+" olt_res_relation:"+o_circuit_no+" by key "+ckey);
			}
		}

				//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
		//if ((o_object_class == "121" || o_object_class == "122"  ) && (o_omc_id == "121"))
		//{
		//    o_severity_keycode          =i_network_type;
		//}
		if ( (o_object_class == "2000") && (o_alarm_title == "0" ||  o_alarm_title == "-2" ))
		{
			o_standard_flag = "1";
		}
		//传输告警的预处理方式全部改成不需要预处理20131212 add by luocheng
		if(o_professional_type=="3")
		{
			o_preprocess_manner = "4";
		}

		//BTS、NODEB告警工单增加“设备类型”
		if(o_object_class in ["201","9201"])
		{
			String myKey="";
			String strEqpType="";
			List myList;
			Object [] result;
			if(o_object_class == "201"){
				myKey = "myWixianBtssitemanager:"+o_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationThree");
			}
			else if(o_object_class == "9201"){
				myKey = "myWixianNodeb:"+o_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationFour");
			}

			if(result != null && result.length>0){
				myList = result==null?null:Arrays.asList(result);
				strEqpType = Util.getTempV(myList,3);
				//log.info(o_fp0+" bts's eqp_type ------int_id:"+o_int_id+",equ_type:"+strEqpType);
				if(StringUtils.isNotBlank(strEqpType)){
					strEqpType = "设备型号:"+strEqpType;
				}
			}
			if(StringUtils.isNotBlank(strEqpType)){
				o_alarm_text = o_alarm_text + "\n"+ strEqpType;
			}
		}

		//动环工程告警不上报 added by liucaiyong@20140228
		if(o_professional_type=="4" && o_send_jt_flag=="3")
		{
			log.debug(o_fp0+" send_jt_flag:"+o_send_jt_flag+",alarm_ne_status:"+o_alarm_ne_status+",alarm_resource_status:"+o_alarm_resource_status);
			if(o_alarm_ne_status in ["0","1"] || o_alarm_resource_status in ["0","1"])
			{
				log.debug(o_fp0+" send_jt_flag:"+o_send_jt_flag+",alarm_ne_status:"+o_alarm_ne_status+",alarm_resource_status:"+o_alarm_resource_status);
			}
			else
			{
				o_send_jt_flag="0";
			}
		}

		//退服告警不上报集团 added by liucaiyong@20140814
		//if(o_sub_alarm_type=="68" && o_send_jt_flag == "1")
		//{
		//	o_send_jt_flag="0";
		//}
		//退服告警上报判断标识为send_jt_flag=1;动环告警上报判断标识为send_jt_flag=1,added by liucaiyong@20150428
		if(o_send_jt_flag == "3"	||	o_sub_alarm_type=="68"){
			o_send_jt_flag = "1";
			//过滤掉基站异常告警
				if(o_alarm_source == "单站单小区性能告警"){
					o_send_jt_flag = "0";
				}
		}
		//电路编码后缀为"ZBZG"的电路上报，20170504
		if(o_circuit_no.contains("ZBZG")){
			o_send_jt_flag = "1";
		}


		//lgy@20181213,传输未标准化告警不上报集团
		if(o_severity_keycode=="41"&&o_professional_type =="3"&&o_standard_flag!="2"){
			o_send_jt_flag = "0";
			o_org_severity = "4";
		}

		//if(o_object_class=="11004")
		//{
		//	o_corr_str=o_business_area;
		//}

				//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
		//MIQ网络类型调整,updated by shichao@2014051618
		//if(o_sub_alarm_type=="970")
			//同一调整为“信令系统”,updated by shichao@20140606
		//    o_severity_keycode = "5290";
		//}

		//话音网告警存机房 added by shanchunlan@20140516
		setSiteType();
		if( o_professional_type =="3" && o_special_field15 != "" && o_object_class in ["706"]){
			if(o_special_field15 == "对端网络类型=本地骨干;"){
				o_type_keycode="25";
			}else if(o_special_field15 == "对端网络类型=本地汇聚;"){
				o_type_keycode="26";
			}else if(o_special_field15 == "对端网络类型=本地接入;"){
				o_type_keycode="27";
			}else if(o_special_field15 == "对端网络类型=省内;"){
				o_type_keycode="41";
			}else if(o_special_field15 == ""){
				o_type_keycode="0";
			}
		}

		//OLT告警，告警细分类型为脱管，OLT脱管场景一 by yjb@20190214
		if (o_object_class == "2011" && o_sub_alarm_type == "90") {
			String task = "olt";
			String oltKey = this.joinKey(task, o_int_id);

			Object[] objects = util.getObject(CUSTOMCACHE, oltKey, task);
			List oltList = objects == null ? null : Arrays.asList(objects);
			if (oltList != null && !oltList.isEmpty()) {
				o_hotel_flag = Util.getTempV(oltList, 10);
				log.info("OLT脱管，o_object_class=" + o_object_class + " o_sub_alarm_type=" + o_sub_alarm_type + " o_fp0=" + o_fp0 + " o_hotel_flag=" + o_hotel_flag);
				//o_hotel_flag == "1"，存储OLT脱管场景一
				if (o_hotel_flag == "1") {
					o_ne_sub_type = "20";
					log.info("OLT脱管，o_object_class=" + o_object_class + " o_sub_alarm_type=" + o_sub_alarm_type + " o_fp0=" + o_fp0 + " o_ne_sub_type=" + o_ne_sub_type);
				}
			}
		}

		// 路由器、端口、交换机告警赋值物理设备类型ne_sub_type
		if (o_object_class in ["900", "905"] || (o_object_class == "706" && o_eqp_object_class == "900")) {
		  if (o_object_class in ["900", "905"]) {
			// redis缓存外挂
			// Object[] objects = (Object[]) rutil.getObject("router_lpad_ne_sub_type:" + o_int_id);
			Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "router_lpad_ne_sub_type:" + o_int_id, "router_lpad_ne_sub_type");
			List objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_ne_sub_type = Util.getTempV(objectsList, 1); // lpad_ne_sub_type
				// log.info("o_fp0=" + o_fp0 + " o_ne_sub_type=" + o_ne_sub_type);
				}
		  } else if (o_object_class == "706" && o_eqp_object_class == "900") {
			// redis缓存外挂
			// Object[] objects = (Object[]) rutil.getObject("router_lpad_ne_sub_type:" + o_eqp_int_id);
			Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "router_lpad_ne_sub_type:" + o_eqp_int_id, "router_lpad_ne_sub_type");
			List objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_ne_sub_type = Util.getTempV(objectsList, 1); // lpad_ne_sub_type
				// log.info("o_fp0=" + o_fp0 + " o_ne_sub_type=" + o_ne_sub_type);
				}
		  }
		}

		// CMCC-GD-DRITXQ-20210122-004_家集客综合运维支撑系统需求调整实时告警接口的过滤规则
		if (o_network_type == "2002") {
		  String key = "objects_it_related_system:" + o_int_id;
		  // redis缓存外挂
		  // Object[] objects = (Object[]) rutil.getObject(key);
		  Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "objects_it_related_system");
		  List objectsList = objects == null ? null : Arrays.asList(objects);
		  if(objectsList != null && !objectsList.isEmpty()) {
			  o_business_type = Util.getTempV(objectsList, 1);
			  }
		}

		if (o_network_type == "500") {
		  // 动环告警网元状态字段映射逻辑优化（CMCC-GD-DRITXQ-20210408-010）：动力机房special_field11带有TEST或test或者设备编码special_field13带有TEST或test
		  if (o_special_field11.contains("TEST") || o_special_field11.contains("test")) {
			def matcher = o_special_field11 =~ /^(.*)TEST|test$/;
			if(matcher.size()>0){
			  // redis缓存外挂
			  // Object[] objects = (Object[]) rutil.getObject("machinery_room_power_name:" + matcher[0][1]);
			  Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "machinery_room_power_name:" + matcher[0][1], "machinery_room_power_name");
			  List objectsList = objects == null ? null : Arrays.asList(objects);
			  if(objectsList != null && !objectsList.isEmpty()) {
				  o_resource_status = Util.getTempV(objectsList, 1); // confirmed
				  o_ne_status       = Util.getTempV(objectsList, 1); // confirmed
				  log.info("machinery_room_power_name-fp0{}, resource_status={}, ne_status={}, power_name={}", o_fp0, o_resource_status ,o_ne_status, matcher[0][1]);
				  } else {
					  // 动环告警切换到统一采集后，因模型和128、129模型不同，设置默认值3：工程实施状态(无业务)
					  o_resource_status = "3";
					  o_ne_status       = "3";
					}
			}
		  } else if (o_special_field13.contains("TEST") || o_special_field13.contains("test")) {
			// redis缓存外挂
			// Object[] objects = (Object[]) rutil.getObject("machinery_room_power_name:" + o_special_field11);
			Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "machinery_room_power_name:" + o_special_field11, "machinery_room_power_name");
			List objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_resource_status = Util.getTempV(objectsList, 1); // confirmed
				o_ne_status       = Util.getTempV(objectsList, 1); // confirmed
				log.info("machinery_room_power_name-fp0{}, resource_status={}, ne_status={}, power_name={}", o_fp0, o_resource_status ,o_ne_status, o_special_field11);
				} else {
				  // 动环告警切换到统一采集后，因模型和128、129模型不同，设置默认值3：工程实施状态(无业务)
				  o_resource_status = "3";
				  o_ne_status       = "3";
				}
		  } else {
			  // 动环告警切换到统一采集后，因模型和128、129模型不同，设置默认值1：现网状态(有业务)
			  o_resource_status = "1";
			  o_ne_status       = "1";
			}
		}

		//if(o_org_type =="2" && o_title_text in ["重点业务TCP建立连接成功率低（5分钟）","重点业务HTTP请求响应成功率低（5分钟）"]
		//                && o_vendor_id == "150" ){
		//    o_ne_label = o_locate_info;
		//    log.info(o_fp0+" set o_ne_label->"+o_ne_label);
		//}
		this.findImportandNode();
		this.end();
		//传输三层拓扑增加线渲染 added by lgy@20180626 required by sunyuqiu
		/*if(o_sub_alarm_type=="821"&&o_object_level=="70601"&&o_object_class=="706"&&o_eqp_object_class in ["2001","2009"]){
				String t_key  = "nrmdb.topo_link_orig:"+o_int_id;
				Boolean tt_switch = false;
		  List results = (List)util.getObject(this.CUSTOMCACHE,t_key,"nrmdb.topo_link_orig");
		  if (results!=null && !results.isEmpty()) {
			  o_link_office=Util.getTempV(results, 1);
			  tt_switch = true;
			  }
		  if (tt_switch==false){
			  t_key  = "nrmdb.topo_link_dest:"+o_int_id;
					results = (List)util.getObject(this.CUSTOMCACHE,t_key,"nrmdb.topo_link_dest");
			  if (results!=null && !results.isEmpty()) {
			  o_link_office=Util.getTempV(results, 1);
				  }
			  }
			}*/
	}

	private void setSiteType(){
		Object[] objects;
		//if(o_professional_type!="1")
		if(o_professional_type in ["3","4"])
			return;

		//话音网告警存机房 added by shanchunlan@20140516
		if(o_sub_alarm_type in ["531","532"] && (o_object_class in ["201","9201","8104","41011"]|| o_vendor_id == "1038")){
			if( o_sub_alarm_type =="531"){
				o_special_field9="市电告警时间为 "+o_event_time+",未获取到电池续航时长,请检查资源配置。"
			}else{
				o_special_field9="低压告警时间为 "+o_event_time+",未获取到电池续航时长,请检查资源配置。"
			}
		}

		String roomid;
		String intKey=joinKey("objects", o_int_id);
		Map map = this.getObjectsValueWithMap(intKey,"objects");

		roomid=map.get("machroom_id");
		// CMCC-GD-DRITXQ-20171115-002  OLT停电隐患衍生告警，liucaiyong@20171228
		if(o_vendor_id=="1038"){//铁塔告警
			roomid = o_site_no;
			intKey=joinKey("building_to_olt_count", o_int_id);
			objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,intKey,"building_to_olt_count");
			if(objects != null){
				o_site_info ="1";
			}
			else{
				o_site_info ="2";
			}
			log.info(o_fp0+" site_info:"+o_site_info);
		}
		if(StringUtils.isBlank(roomid)){
			return;
		}

		String buildingid="";
		intKey=joinKey("machinery_room", roomid);
		objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,intKey,"machinery_room");
		if(objects != null){
			o_special_field22=objects[1];
			buildingid=objects[5];
			// log.info(o_fp0+" buildingid:"+buildingid);
			if(o_sub_alarm_type in ["531","532"] && (o_object_class in ["201","9201","8104","41011"]||o_vendor_id == "1038")){
				//市电告警预处理增加电池续航时间,added by sunyuqiu@20141217,依赖nrmdb.machinery_room->battery_life
				//低压告警预处理增加电池续航时间,added by shanchunlan@20150420
				//o_special_field9  =  objects[6]+"";
				if(objects[6] != "" && objects[6] != null){
					//double i_life = objects[6];
					String s_o6=objects[6];
					float i_life = Float.parseFloat(s_o6);
					int p_hours = i_life*1000;
					Date evt = new Date();
					long evt_t=getDate(o_event_time).getTime()+60*60*p_hours;
					evt.setTime(evt_t);
					//log.info(o_fp0+" s_o6 "+getStrfromDate(evt))
					if( o_sub_alarm_type =="531"){
						o_special_field9="市电告警时间为 "+o_event_time+",电池续航能力为"+i_life+"小时,预计断电时间为 "+getStrfromDate(evt)+"。"
					}else{
						evt_t=getDate(o_event_time).getTime()+60*60*p_hours/6;
						evt.setTime(evt_t);
						o_special_field9="低压告警时间为 "+o_event_time+",电池续航能力为"+i_life+"小时,预计断电时间为 "+getStrfromDate(evt)+"。"
					}
					//log.info(o_fp0+" s_o6 "+getStrfromDate(evt)+" 9:"+ o_special_field9)
				}
				//关于实现对基站市电告警特殊处理需求，added by shanchunlan@20160318
				//if(o_sub_alarm_type  ==  "531"){
				//OLT停电隐患告警变动，altered by  lgy@20180403
				//增加低压类告警的共站机房属性赋值， altered by  lgy@20180831
				if((o_sub_alarm_type  ==  "531" || o_sub_alarm_type  ==  "532") && o_vendor_id != "1038"){
					o_site_info =  objects[7]+"";
					if(o_site_info=="1"){
						String i_olt = getColmnStrgFromCache(roomid);
						if(i_olt !=""){
							o_special_field9 +="共站的OLT名称:"+i_olt;
						}
					}
				}
				else if(o_vendor_id == "1038"&&(o_sub_alarm_type  ==  "531" || o_sub_alarm_type  ==  "532" )){
					if(o_site_info=="1"){
						String i_olt = getColmnStrgFromCache(roomid);
						if(i_olt !=""){
							o_special_field9 +="共站的OLT名称:"+i_olt;
							log.info(o_fp0+" get o_site_info:"+o_site_info+",special_field9:"+o_special_field9);
						}
					}
				}
			}
		}


		//基站告警站点产权单位标识 20150722 shanchulan
		//获取局站名称范围调整为话音网 altered by lgy@20180517 required by wangyingfeng 需求：CMCC-GD-DRITXQ-20180112-008
		intKey=joinKey("building", buildingid);
		Object[] building = util.getObject(CUSTOMCACHE, intKey,"building");
		List buildinglist = building==null?null:Arrays.asList(building);
		if(buildinglist!=null&&!buildinglist.isEmpty()){
			o_special_field19 = Util.getTempV(buildinglist,1);
			if(o_object_class in ["201","300","9201","9300","8104","8105","41011","270"]|| o_vendor_id == "1038"){
				//无线告警关联站点并推送EOMS，by liaoxia@20170821
				o_site_type=Util.getTempV(buildinglist,5);
			}
			if(o_object_class in ["201","8104","41011"]){//关于干扰场景下受扰区域的特征批量告警开发的需求,required by sunyuqiu,lcy@20190322
							o_township = Util.getTempV(buildinglist,6);
						}
		}
		log.info(o_fp0+" get o_site_type:"+o_site_type+",special_field19:"+o_special_field19);
	}

	/**
	 * 需要最后处理的逻辑
	 */
	private void end()
	{
		//lgy@20190124,频次数默认处理
		/*if(StringUtils.isBlank(o_alarm_act_count)){
			o_alarm_act_count="0";
			}*/
		//lgy@20190116,解决彩铃告警的corr_str字段过长
		if(o_eqp_object_class=="140"){
			o_corr_str="";
		}
		//电路级别
		if(StringUtils.isNotBlank(o_circuit_no)){
			String[] circuits = o_circuit_no.split(",");
			for (String circuit : circuits){
				String queryKey = circuit.trim();
				if(StringUtils.isBlank(queryKey))
					continue;

				queryKey = "gd:circuit:level:" + queryKey;
				Object[] result = util.getObject(this.CUSTOMCACHE,queryKey,"gdCircuitLevel");
				if (result!=null && result.length>0) {
					o_circuit_level = LevelCompare("circuit_level",Util.getTempV(Arrays.asList(result), 0),o_circuit_level);
				}
			}
		}

		//集客告警上报,暂时用电路级别填充跨域,added by liucaiyong@20150721
		if(StringUtils.isNotBlank(o_gcss_client)&&StringUtils.isNotBlank(o_circuit_level)){
			o_service_crossdomain_type = o_circuit_level;
		}

		//集客告警上报(省级),added by liucaiyong@20150721
		// 跨省集客专线衍生告警（集团工作）的补充需求：集客告警标志=1（集客跨省专线的集客告警）
		// if(o_service_crossdomain_type in ["1","2"]){
		// if(o_service_crossdomain_type in ["1","2"] && o_redefine_severity == "1"){
		// 省部接口跨省集客专线告警上报逻辑调整（CMCC-GD-DRITXQ-20210519-004）：告警的“网元组ID”（group_id）字段不包含“集客省部接口抑制业务组”（group_id=252809044）,则上报集团
		if(o_service_crossdomain_type in ["1","2"] && o_redefine_severity == "1" && !o_group_id.contains("252809044")){
			o_send_jt_flag = "1";
		}

		this.processWNMSReal();

		if(o_sub_alarm_type=="967" || o_alarm_title in ["28864770","28864769"]){//解决地市关注事件影响标准化率,liucaiyong@20170315
			o_standard_flag = "2";
			if(StringUtils.isBlank(o_standard_alarm_name)){
				o_standard_alarm_name = o_title_text;
			}
		}

		//MIQ性能告警调整厂家
		//if(o_sub_alarm_type=="970")
		//{
		//	o_vendor_id = "956";
		//	o_vendor_name = "MIQ系统";
		//}

				//网络类型调整（仅保留传输及动环） shanchunlan,liu
		//if (o_object_class=='121' || o_object_class=='122' ||o_object_class=='909' || o_object_class=='124' ) //909已经退网
		//if(StringUtils.isBlank(o_severity_keycode)&&(o_object_class=='121' || o_object_class=='122' || o_object_class=='124'))
		//{
		//    o_severity_keycode ='13';
		//}
		//
		////LTE数据网 网络类型调整 (shanchunlan@20140314)
		//if(StringUtils.isBlank(o_severity_keycode)&&o_object_class in ["8101","8102","8103","8106","8108"])
		//{
		//    o_severity_keycode ='5273';
		//}
		//
		//if(o_object_class in ["124"])
		//{
		//    //124 判断LTE-CG
		//    String cgKey=joinKey("objects", o_int_id);
		//    Map map = this.getObjectsValueWithMap(cgKey,"objects");
		//    if(map.size()>0)
		//    {
		//        String cgNetwork=map.get("network_type");
		//        if(cgNetwork == "7")
		//        {
		//            o_severity_keycode ='5273';
		//        }
		//    }
		//}

		//add by linzongji at 2011-11-07
		//def sqlStr;
		String ykey = "prealarmproject@"+o_ne_label;

		Object[] ppro = util.getObject(CUSTOMCACHE, ykey,"nrmdb.Prealarmproject");
		List plist = ppro==null?null:Arrays.asList(ppro);
		if(plist!=null&&!plist.isEmpty())
		{
			o_special_field14=Util.getTempV(plist,0);
		}
		else
		{
			o_special_field14="";
		}

		alarmtext4Chuanshu();

		if (o_vendor_severity != null && o_vendor_severity!="0" && o_vendor_severity!="")
		{
			//sql = "select id from tia_alarm_dict  where type=101016 and  txt= '" + o_vendor_severity+"'";
			//list = Util.queryByHSql(sql);
			//String key = this.joinKey("tia_alarm_dict", "101016",o_vendor_severity);
			String key = "tia_alarm_dict@101016@"+o_vendor_severity;
			Object[] dict = util.getObject(CUSTOMCACHE, key,"tia_alarm_dict.0");
			if(dict!=null)
			{
				o_extra_string3 = dict[0];
			}
		}
		else {
			o_extra_string3 = '1';
		}

		if(o_org_type != "2" && o_vendor_id=="1" && o_object_class =="122" && o_omc_id=="121" && o_probable_cause_txt!="" && o_probable_cause_txt!=null){
			o_title_text = o_probable_cause_txt;
		}
		if(o_vendor_id == "9014"){//shichao@20161219,安全事件
			o_gcss_client_level = o_special_field10;
		}
		o_special_field10="";
		if(o_object_class =="200" ||o_object_class =="9200"||o_object_class =="130"||o_object_class =="131"){
			String relKey = this.joinKey("objects_relation", o_int_id, o_object_class);
			Object[] relation = util.getObject(CUSTOMCACHE, relKey,"objects_relation");
			//String relKey = this.joinKey("cm_objects_relation", o_int_id);
			//Object[] relation = util.getObject(CUSTOMCACHE, relKey,"cm_objects_relation");
			List relList = relation==null?null:Arrays.asList(relation);
			if(relList!=null&&!relList.isEmpty())
			{
				Object[] result = (Object[]) relList.get(0);
				List olist = Arrays.asList(result);
				//o_special_field10=Util.getTempV(relList,0);
				o_special_field10=Util.getTempV(olist,4);
			}
		}
		//MME的告警增加归属POOL信息 fw add @20160518
		if(o_object_class in ["8101"] && o_eqp_object_class in ["8101"] && StringUtils.isNotBlank(o_eqp_int_id) ){
			String queryKey  = "objects_relation:"+o_eqp_int_id+":8101";
			List results = (List)util.getObject(this.CUSTOMCACHE,queryKey,"objects_relation");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					List olist = Arrays.asList(result);
					o_special_field10  = Util.getTempV(olist, 4);
				}
			}
		}
		if(o_object_class =="121" ||o_object_class =="122"){
			o_extra_id3="14";
		}

				//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
		/*客户侧设备网络类型默认为客户侧设备*/
		//if(o_professional_type == "99")
		//{
		//    o_severity_keycode="5272";
		//}

		/*GZUMG02和GZIMGW101的工单判重逻辑：告警标准名+网元名+告警对象。告警对象采用关联集客的关键信息*/
		if(o_ne_label == "GZUMG02" || o_ne_label=="GZIMGW101")
		{
			o_alarm_unit = o_special_field20;
		}

		//LTE核心网IP,by liucaiyong@20160108
		if(o_object_class in ["102","121","122","124","6109","8101","8102","8106","8108","8109","81091"] && StringUtils.isBlank(o_special_field13)){
			String fkey = "core_ne:"+o_int_id;
			Object[] fobjs = util.getObject(CUSTOMCACHE, fkey,"core_ne");
			List flist = fobjs==null?null:Arrays.asList(fobjs);
			if(flist!=null&&!flist.isEmpty()){
				o_special_field13=Util.getTempV(flist,1);
			}
		}

		//取消二干波分与集客的关联,added by liucaiyong@20170214,by sunyuqiu
		if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"] && StringUtils.isNotBlank(o_gcss_client)){
			o_gcss_client="";
			o_gcss_client_num="";
			o_gcss_client_name="";
			o_gcss_client_level="";
			o_gcss_client_grade="";
			o_gcss_client_grade_mgt = "";
			o_gcss_service="";
			o_gcss_service_num="";
			o_gcss_service_type="";
			o_gcss_service_level="";
			o_gcss_service_sub_type="";
		}
		this.setProductNo();
		this.setDefaultValue();
	}

	/**
	 * 默认值的特殊处理
	 */
	private void setDefaultValue()
	{
		if(StringUtils.isNotBlank(o_circuit_id)){
			o_circuit_id = this.distinceString(o_circuit_id);
		}
		if(StringUtils.isNotBlank(o_circuit_no)){
			o_circuit_no = this.distinceString(o_circuit_no);
		}
		if(StringUtils.isNotBlank(o_gcss_service)){
			o_gcss_service = this.distinceString(o_gcss_service);
		}
		if(StringUtils.isNotBlank(o_gcss_client)){
			o_gcss_client = this.distinceString(o_gcss_client);
		}
		if(StringUtils.isNotBlank(product_no)){
			product_no = this.distinceString(product_no);
		}

		//CMCC-GD-DRITXQ-20160707-001, by pengyoubing@201608xx
		if(o_eqp_object_class == "2012"){
			o_resource_status = "1";
			o_ne_status = "1";
			o_severity_keycode = "27";
		}
		if(o_eqp_object_class == "2011"){// by pengyoubing@20160818
			o_severity_keycode = "27";
		}
		if (StringUtils.isBlank(o_alarm_ne_status))
		{
			o_alarm_ne_status = "1";
		}
		if (StringUtils.isBlank(o_alarm_resource_status))
		{
			o_alarm_resource_status = "1";
		}
		if(StringUtils.isBlank(o_resource_status))
		{
			o_resource_status="1";
		}
		//ne_status默认值  by liucaiyong@20191010, shanchunlan
		if(StringUtils.isBlank(o_ne_status))
		{
			o_ne_status="0";
		}
		if(StringUtils.isBlank(o_standard_flag))
		{
			o_standard_flag="2";
		}
		if(StringUtils.isBlank(o_send_jt_flag)||StringUtils.isBlank(o_object_class)||o_object_class in ["0","-1"]||o_eqp_object_class=="100")
		{
			o_send_jt_flag="0";
		}
		//20190112,无线专业的，限制已标准化的告警才上报集团
		if(o_object_class in ["201","300","9201","9300","8104","8105","41011","270","3300","3201"]){
			if(o_standard_flag == "2" && o_send_jt_flag == "1"){
				o_send_jt_flag = "1";
			}else{
				o_send_jt_flag = "0";
			}
		}
		//20190920,频次为2及以上的性能告警，调整为不上报集团。
		if(o_org_type == "2" && StringUtils.isNotBlank(o_alarm_act_count) && o_send_jt_flag == "1"){
			int actcount = Integer.parseInt(o_alarm_act_count);
			if(actcount > 1){
				o_send_jt_flag = "0";
			}
		}

		o_alarm_origin = "0";
		//10.20支掉，什么时候增加吴剑决定
		//o_remote_object_class=o_special_field17;

				//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
		//if(o_omc_id=="1502")
		//{
		//    o_severity_keycode="150";
		//}

		//add by wujian at 20130802
		if (o_correlate_alarm_flag==null || o_correlate_alarm_flag=="")
		{
			o_correlate_alarm_flag = "1";
		}

		if(StringUtils.isNotBlank(o_remote_eqp_alias)){
			o_remote_eqp_alias = subStrLen(o_remote_eqp_alias,64,"");
		}
		if(StringUtils.isBlank(o_sub_alarm_type)){
			o_sub_alarm_type = "0";
		}
		//if("null" == o_board_type){
		if(StringUtils.isNotBlank(o_board_type) && "NULL".equals(o_board_type.toUpperCase())){
			o_board_type = "";
		}
		//if("null" == o_alarm_check){
		if(StringUtils.isNotBlank(o_alarm_check) && "NULL".equals(o_alarm_check.toUpperCase())){
			o_alarm_check = "";
		}
		if(o_professional_type=="3"||o_vendor_id=="1010"||o_vendor_id=="9010"){
			o_alarm_check = "";
		}
		if(o_professional_type=="3"||o_vendor_id=="1010"||o_vendor_id=="9010"){
			o_alarm_check = "";
		}
	}

	/**
	 * 小区 VIP id文本映射
	 * @param key
	 * @return
	 */
	private String vipCellMaping(String key)
	{
		if(StringUtils.isBlank(key))
		{
			return "";
		}
		try{
			int i = Integer.parseInt(key);
			switch(i)
			{
				case 0:
					return "非VIP";
				case 6:
					return "VVIP类型";
				case 7:
					return "一级VIP";
				case 8:
					return "二级VIP";
				case 9:
					return "三级VIP";
				case 10:
					return "超级VIP";
				default:
					return "";
			}
		}catch(Exception e)
		{
			return "";

		}
	}

	/**
	 * 基站 VIP id文本映射
	 * @param key
	 * @return
	 */
	private String vipSiteMaping(String key)
	{
		if(StringUtils.isBlank(key))
		{
			return "";
		}
		try{
			int i = Integer.parseInt(key);
			switch(i)
			{
				case 0:
					return "非VIP";
				case 1:
					return "VIP";
				case 2:
					return "VVIP类型";
				case 3:
					return "超级VIP基站";
				case 4:
					return "一级VIP";
				case 5:
					return "二级VIP";
				case 6:
					return "三级VIP";
				case 7:
					return "非基站机房";
				default:
					return "";
			}
		}catch(Exception e)
		{
			return "";

		}
	}

	/**
	 * 基站 VIP object_level映射
	 * @param key
	 * @return
	 */
	private String vipSiteLevelMaping(String key)
	{
		if(StringUtils.isBlank(key))
		{
			return "";
		}
		try{
			int i = Integer.parseInt(key);
			switch(i)
			{
				case 0:
					return "0";
				case 7:
					return "0";
				case 2:
					return "1";
				case 3:
					return "1";
				case 4:
					return "1";
				case 5:
					return "1";
				case 6:
					return "1";
				default:
					return "";
			}
		}catch(Exception e)
		{
			return "";

		}
	}

	/**
	 * 小区 VIP object_level映射
	 * @param key
	 * @return
	 */
	private String vipCellLevelMaping(String key)
	{
		if(StringUtils.isBlank(key))
		{
			return "";
		}
		try{
			int i = Integer.parseInt(key);
			switch(i)
			{
				case 0:
					return "10";
				case 7:
					return "11";
				case 8:
					return "12";
				case 9:
					return "13";
				case 6:
					return "14";
				case 10:
					return "15";
				default:
					return "";
			}
		}catch(Exception e)
		{
			return "";

		}
	}

	private String getStrfromDate(Date d)
	{
		String str="";
		SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		try{
			str = sdf.format(d);
		}catch(ParseException e){return str; }
		return str;
	}


	private String getTransObjectsVal(String int_id,int ValNo)
	{
		String str="";
		// String intKey = "objects_trans:" + int_id;
		String intKey = "objects_trans_fdn_id:" + int_id;
		// Object[] objects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, intKey,"objects_trans");
		Object[] objects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, intKey,"objects_trans_fdn_id");
		if(objects != null){
			str=objects[ValNo];
		}
		return str;
	}

	private String getColmnStrgFromCache(String machromm_id)
	{
		String task="olts_of_machroom";
		String key = task+":"+machromm_id;

		String retString="";
		int k=0;
		List results = (List)util.getObject(this.CUSTOMCACHE,key,task);
		if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				List olist = Arrays.asList(result);
				String i_val	=	Util.getTempV(olist,1);

				if(StringUtils.isNotBlank(i_val)&&!retString.contains(i_val)){//防止重复数据
					if((retString+i_val).length()>254){
						break;
					}
					retString+=(k==0?"":";")+getTransObjectsVal(i_val,5);
					k++;
				}
			}
		}
		log.info(o_fp0+" getColmnStrgFromCache"+" 【"+retString+"】");
		return retString ;
	}

	/**
	 *根据spc_hex查询对端设备信息并填写
	 */
	private void setRemoteInfoBySpcHex(){
		try{
			String task="t_ne_spc";
			Object[] remotes = util.getObject(CUSTOMCACHE, task+":"+o_remote_eqp_alias ,task);
			List remotelist = remotes==null?null:Arrays.asList(remotes);
			if(remotelist!=null&&!remotelist.isEmpty()){
				o_remote_int_id	=	Util.getTempV(remotelist, 0);
				o_remote_eqp_label = Util.getTempV(remotelist, 1);
				o_remote_resource_status =Util.getTempV(remotelist, 2);
				o_remote_eqp_alias	=	o_remote_eqp_label;
				log.info(o_fp0+" setRemoteInfoBySpcHex:: get remote_int_id="+o_remote_int_id+" remote_eqp_label="+o_remote_eqp_label+" remote_resource_status="+o_remote_resource_status);
			}
		}catch(Exception e){
			log.info(o_fp0+" setRemoteInfoBySpcHex:: get remote-error :"+e.getMessage());
		}
	}

	/**
	 *根据对端别明光查询对端设备信息并填写,适用HSS
	 */
	private void setHSSRemoteInfoByAlias(){
		String task="remote-hss";
		String ikey = task+":"+o_remote_eqp_alias;

		List	list = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, ikey, task);
		if (list != null&& list.size() >0) {
			for (int i = 0; i < list.size(); i++) {
				Object[] objs = (Object[]) list.get(i);
				if (objs.length>0) {
					o_remote_int_id 			= objs[0]+"";
					if(StringUtils.isNotBlank(o_remote_int_id)){
						o_remote_eqp_label	    =	objs[1]+"";
						o_remote_resource_status=	objs[2]+"";
						break;
					}
				}
			}
		}
		log.info(o_fp0+" setHSSRemoteInfoByAlias:: get remote_int_id="+o_remote_int_id+" remote_eqp_label="+o_remote_eqp_label+" remote_resource_status="+o_remote_resource_status);
	}

	/**
	 * 本端工程状态映射
	 * @param key
	 * @return
	 */
	private String projectMaping(String key)
	{
		if(StringUtils.isBlank(key))
		{
			return "";
		}
		try{
			int i = Integer.parseInt(key);
			switch(i)
			{
				case 1:
					return "3";
				case 2:
					return "4";
				case 3:
					return "5";
				case 4:
					return "8";
				case 5:
					return "9";
				case 6:
					return "10";
				case 12:
					return "12";
				case 13:
					return "13";
				case 14:
					return "14";
				case 15:
					return "38";
				case 45:
					return "45";
				default:
					return "1";
			}
		}catch(Exception e)
		{
			return "1";

		}
	}

	/**
	 * 根据对端工程映射
	 * @param local_project
	 * @param remote
	 * @param remote_project
	 * @return
	 */
	private String projectRemoteMaping(String local_project,String remote,String remote_project)
	{
		if(StringUtils.isBlank(remote) || remote=="99")
		{
			return this.projectMaping(local_project) ;
		}
		if(local_project!="0")
		{
			return this.projectMaping(local_project);
		}
		int re = Integer.parseInt(remote);
		try{
			switch(re)
			{
				case 0:
					return "6";
				case 1:
					try{
						int i = Integer.parseInt(remote_project);
						switch(i)
						{
							case 1:
								return "27";
							case 2:
								return "28";
							case 3:
								return "29";
							case 4:
								return "30";
							case 5:
								return "31";
							case 6:
								return "32";
							case 12:
								return "33";
							case 13:
								return "36";
							case 14:
								return "37";
							case 15:
								return "39";
							default:
								return "1";
						}
					}catch(Exception e)
					{
						return "1";

					}
				case 2:
					return "15";
				case 3:
				case 6:
					return "17";
				case 4:
					return "6";
				case 5:
					return "18";
				case 7:
					return "7";
				case 8:
					return "16";
				case 9:
					return "40";
				case 10:
					return "41";
				case 11:
					return "42";
				case 12:
					return "43";
				case 13:
					return "44";
				default:
					return this.projectMaping(local_project);
			}
		}catch(Exception e){

			return this.projectMaping(local_project);
		}
	}

	/**
	 * MSC[object_class=130]业务地市信息查询 --[add][20130609][wujian][]
	 */
	private void redefineCityFromYW()
	{
		if (o_object_class=="130" && o_standard_alarm_name=="BSC（RNC）与MSC的位置区（小区或服务区）配置不一致") {
			String rkey = "gd:mscserverCityRedefine:"+o_int_id;
			Object[] result = util.getObject(this.CUSTOMCACHE,rkey,"mscserverCityRedefine");
			if (result!=null && result.length>0) {
				o_extra_string1= Util.getTempV(Arrays.asList(result),0);
			}
			//log.debug(o_fp0+" jredefineCityFromYW(city="+o_extra_string1+") "+rkey);
		}
	}

	/**
	 add by daixueyue on 2013 09 10
	 增加代维信息
	 */
	public void handlerAddAField(CommonAlarm src, CommonAlarm dest){
		String dbFildOne = "";
		String dbFildTwo = "";
		String dbFildThree="";
		List myList ;
		Object [] result = null;
		String myKey;

		//传输网 跟集客
		if(o_eqp_object_class in ["2013","2001","2008","2009","2011","2012","161","163","6118","900","901","2007","2034"]){
			if(o_eqp_object_class == "2013"){
				myKey = "myOlp:"+o_eqp_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"chuanshuInfomationFive");
			}
			if(o_eqp_object_class == "2001"){
				myKey = "transElementSdh:"+o_eqp_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"chuanshuInfomation");
			}
			if(o_eqp_object_class == "2008"|| o_eqp_object_class == "2034"){
				myKey = "transElementWdm:"+o_eqp_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"chuanshuInfomationOne");
			}


			if(o_eqp_object_class == "2009"){
				myKey = "transElementPtn:"+o_eqp_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"chuanshuInfoPTN");

			}
			if(o_eqp_object_class == "2011"){
				myKey = "olt:"+o_eqp_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"olt");
			}
			if(o_eqp_object_class == "2012"){
				//myKey = "onu:"+o_fm_eqp_int_id;
				//result = util.getObject(this.CUSTOMCACHE,myKey,"onu");
				//redis缓存外挂
						  // result = rutil.getObject("onu:"+ o_eqp_idn);
						  result = util.getObject(CUSTOMCACHE, "onu:"+ o_eqp_idn, "onu");
			}
			if(o_eqp_object_class == "161"){
				myKey = "myJikePbx:"+o_eqp_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationOne");
			}
			if(o_eqp_object_class == "163"){
				myKey = "myJikeConverter:"+o_eqp_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationTwo");
			}
			if(o_eqp_object_class == "6118"){
				myKey = "myJikeIad:"+o_eqp_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationThree");
			}
			if(o_eqp_object_class == "900"){
				myKey = "myJikeRouter:"+o_eqp_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationFour");
			}
			if(o_eqp_object_class == "901"){
				myKey = "myJikeFirewall:"+o_eqp_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationFive");
			}
			if(o_eqp_object_class == "2007"){
				myKey = "myJikeMsap:"+o_eqp_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationSix");
			}

			// 集客拉远开通业务口派单对象调整（CMCC-GD-DRITXQ-20210421-035）
			String representation = ""; // 客户端维护单位epresentation
			// if (o_network_type in ["401", "402", "403", "404", "406", "409"] && o_object_class == "706" && o_severity_keycode in ["25", "26", "27"]) {
			if (o_professional_type == "3" && o_object_class == "706" && o_severity_keycode in ["25", "26", "27"]) {
				String pstr = ""; // port_type
				List results;
				// redis缓存外挂
				// results = rutil.getObject("circuit_port_service_port:" + o_int_id);
				results = util.getObject(CUSTOMCACHE, "circuit_port_service_port:" + o_int_id, "circuit_port_service_port");
				if (results!=null && !results.isEmpty()) {
					for (Object items : results) {
						Object[] item = (Object[])items;
						if (item == null || item.length < 1) {
							break;
							}
							List olist = Arrays.asList(item);
							String ptype = Util.getTempV(olist,1);
							pstr = appendStr(pstr,ptype);
					}
				}

				if(StringUtils.isNotBlank(pstr)){
					// port_type=1表示告警对象端口为对应产品的业务口
					if(pstr.contains("1")){
						// redis缓存外挂
						// List resultsall = rutil.getObject("circuit_port_service_port:" + o_int_id);
						List resultsall = util.getObject(CUSTOMCACHE, "circuit_port_service_port:" + o_int_id, "circuit_port_service_port");
						results = resultsall.get(0); // 只取第一条数据，缓存sql使用order by升序业务级别service_level，使最高级别的资源排序到第一条，相同级别随机取，集客业务级别（GCSS_SERVICE_LEVEL）:（-1：AAA+>0：AAA>1：AA>2：A>3：普通>：4：未知）
						if (results!=null && !results.isEmpty()) {
							String service_id	=	Util.getTempV(results,3); // service_id
							log.debug("fp0-{}, int_id={}, eqp_int_id={}, gcss_service_type={}, service_level_results={}, service_id={}", o_fp0, o_int_id, o_eqp_int_id, o_gcss_service_type, results, service_id);
							if (StringUtils.isBlank(representation) && o_gcss_service_type.contains("40001")) {
								// 传输专线
								// redis缓存外挂
								// 传输专线a端
								// results = rutil.getObject("ip_specialline_service_representation_a:" + service_id + ":" + o_eqp_int_id);
								results = util.getObject(CUSTOMCACHE, "ip_specialline_service_representation_a:" + service_id + ":" + o_eqp_int_id, "ip_specialline_service_representation_a");
								if (results!=null && !results.isEmpty()) {
									representation =	Util.getTempV(results,2); // 客户端维护单位representation_a
									log.debug("fp0-{}, gcss_service_type={}, ip_specialline_service_representation_a={}", o_fp0, o_gcss_service_type, representation);
									}

								if (StringUtils.isBlank(representation)) {
										// 传输专线a端获取不到客户端维护单位representation_a，接着查询传输专线z端
										// results = rutil.getObject("ip_specialline_service_representation_z:" + service_id + ":" + o_eqp_int_id);
										results = util.getObject(CUSTOMCACHE, "ip_specialline_service_representation_z:" + service_id + ":" + o_eqp_int_id, "ip_specialline_service_representation_z");
										if (results!=null && !results.isEmpty()) {
											representation =	Util.getTempV(results,2); // 客户端维护单位representation_b
											log.debug("fp0-{}, gcss_service_type={}, ip_specialline_service_representation_z={}", o_fp0, o_gcss_service_type, representation);
											}
								}
							}

							if (StringUtils.isBlank(representation) && o_gcss_service_type.contains("40004")) {
								// 互联网专线
								// redis缓存外挂
								// results = rutil.getObject("internet_line_service_representation:" + service_id + ":" + o_eqp_int_id);
								results = util.getObject(CUSTOMCACHE, "internet_line_service_representation:" + service_id + ":" + o_eqp_int_id, "internet_line_service_representation");
								if (results!=null && !results.isEmpty()) {
									representation =	Util.getTempV(results,2); // 客户端维护单位representation
									log.debug("fp0-{}, gcss_service_type={}, internet_line_service_representation={}", o_fp0, o_gcss_service_type, representation);
									}
							}

							if (StringUtils.isBlank(representation) && o_gcss_service_type.contains("40003")) {
								// 语音专线
								// redis缓存外挂
								// results = rutil.getObject("ip_voice_service_representation:" + service_id + ":" + o_eqp_int_id);
								results = util.getObject(CUSTOMCACHE, "ip_voice_service_representation:" + service_id + ":" + o_eqp_int_id, "ip_voice_service_representation");
								if (results!=null && !results.isEmpty()) {
									representation =	Util.getTempV(results,2); // 客户端维护单位representation
									log.debug("fp0-{}, gcss_service_type={}, ip_voice_service_representation={}", o_fp0, o_gcss_service_type, representation);
									}
							}

							if (StringUtils.isBlank(representation) && o_gcss_service_type.contains("40008")) {
								// IPVPN专线
								// redis缓存外挂
								// results = rutil.getObject("vpn_service_representation:" + service_id + ":" + o_eqp_int_id);
								results = util.getObject(CUSTOMCACHE, "vpn_service_representation:" + service_id + ":" + o_eqp_int_id, "vpn_service_representation");
								if (results!=null && !results.isEmpty()) {
									representation =	Util.getTempV(results,2); // 客户端维护单位representation
									log.debug("fp0-{}, gcss_service_type={}, vpn_service_representation={}", o_fp0, o_gcss_service_type, representation);
									}
							}

							if (StringUtils.isBlank(representation) && o_gcss_service_type.contains("40012")) {
								// 集团WLAN专线
								// redis缓存外挂
								// results = rutil.getObject("wlan_service_representation:" + service_id + ":" + o_eqp_int_id);
								results = util.getObject(CUSTOMCACHE, "wlan_service_representation:" + service_id + ":" + o_eqp_int_id, "wlan_service_representation");
								if (results!=null && !results.isEmpty()) {
									representation =	Util.getTempV(results,2); // 客户端维护单位representation
									log.debug("fp0-{}, gcss_service_type={}, wlan_service_representation={}", o_fp0, o_gcss_service_type, representation);
									}
							}
							// log.debug("fp0-{}, gcss_service_type={}, representation={}", o_fp0, o_gcss_service_type, representation);
							}
					}
				}
			}

			if(result != null && result.length>0){
				myList = result==null?null:Arrays.asList(result);
				dbFildOne = Util.getTempV(myList,1);
				dbFildTwo = Util.getTempV(myList,2);
				o_special_field18 ="";
				// 如果从资源中获取到客户端维护单位representation，则更新到“设备:”
				if(StringUtils.isNotBlank(representation)){
						o_special_field18 += "设备:"+representation+";";
				}
				if(StringUtils.isNotBlank(dbFildOne) && StringUtils.isBlank(representation)){
					o_special_field18 += "设备:"+dbFildOne+";";
				}
				if(StringUtils.isNotBlank(dbFildTwo)){
					o_special_field18 += "线路:"+dbFildTwo;
				}
			}
			log.info(o_fp0+" dw-specialFild18="+o_special_field18+",key="+myKey);
		}
		//无线专业
		if(o_eqp_object_class in ["1001","1002","11004"] || o_object_class in ["201","9201","8104","8105","300","9300","41011","270","3300","3201"]){
			if(o_eqp_object_class == "1002" ){
				//它是属于WLAN-AP 类型的,需要特殊处理
				if(o_city_id in ["1641999133","98385249","838185425","1022477377","-40145851","-274261379","1756771793","1050163130","1628882058","-1414777210","1528115507","229360282","1515153790","852452198","-649370270","1703003042","104629030","-2007780382","-1674715417","-863153540","-2107737273"]){
					myKey = "myWixianAp:"+o_eqp_int_id;
					result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationOne");
				}
			}
			if(o_eqp_object_class == "1001")
			{
				//WLAN-AC ,update by liucaiyong@2013102117
				if(o_city_id in ["1641999133","98385249","838185425","1022477377","-40145851","-274261379","1756771793","1050163130","1628882058","-1414777210","1528115507","229360282","1515153790","852452198","-649370270","1703003042","104629030","-2007780382","-1674715417","-863153540","-2107737273"]){
					myKey = "myWixianAc:"+o_eqp_int_id;
					result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationNight");
				}
			}
			if(o_eqp_object_class == "11004"){
				//它是属于直放站的
				if(o_city_id in ["1641999133","98385249","838185425","1022477377","-40145851","-274261379","1756771793","1050163130","1628882058","-1414777210","1528115507","229360282","1515153790","852452198","-649370270","1703003042","104629030","-2007780382","-1674715417","-863153540","-2107737273"]){
					myKey = "myWixianRepeater:"+o_eqp_int_id;
					result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationTwo");
				}
			}

			if(o_object_class == "201" || (o_eqp_object_class == "200" && o_vendor_id == "7")){
				myKey = "myWixianBtssitemanager:"+o_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationThree");
			}
			if(o_object_class == "9201"){
				myKey = "myWixianNodeb:"+o_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationFour");
			}
			if(o_object_class in ["8104","41011"]){
				myKey = "myWixianEnodeb:"+o_int_id;
				result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationFive");
			}
			if(o_object_class == "300"){
				myKey = "myWixianBtssitemanager:"+o_ParentIntId;
				result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationThree");
			}
			if(o_object_class == "9300"){
				myKey = "myWixianNodeb:"+o_ParentIntId;
				result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationFour");
			}
			if(o_object_class in ["8105","270"]){
				myKey = "myWixianEnodeb:"+o_ParentIntId;
				result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationFive");
			}
			//20191203, 增加5G小区代维，added by liucaiyong
			if(o_eqp_object_class == "3201"){
				myKey = "gnodeb:"+o_int_id;
				if(o_object_class == "3300"){
					myKey = "gnodeb:"+o_ParentIntId;
				}
				result = util.getObject(this.CUSTOMCACHE,myKey,"gnodeb");
			}
			if(result != null && result.length>0){
				myList = result==null?null:Arrays.asList(result);
				dbFildOne = Util.getTempV(myList,1);
				if(StringUtils.isNotBlank(dbFildOne)){
					o_special_field18 = "设备:"+dbFildOne;
				}
			}
			log.info(o_fp0+" dw-specialFild18="+o_special_field18+",key="+myKey);
		}
		//2G基站与OLT共址和低压告警 特殊处理  ---added by lgy@20180403 工单：CMCC-GD-DRITXQ-20180323-007
		//lgy@20190116,增加4G基站，需求单号：CMCC-GD-DRITXQ-20181121-003
		if(o_sub_alarm_type in ["531","532"]&&o_site_info=="1"&&o_object_class in ["201","8104","41011"]){
			String task = "olts_of_machroom";
			List oList = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, joinKey(task,o_site_no), task);
			if (oList != null && !oList.isEmpty()){
				Object[] objs = (Object[]) oList.get(0);//只取一条记录
				String intKey=objs[1];
				myKey = "olt:"+intKey;
				result = util.getObject(this.CUSTOMCACHE,myKey,"olt");
				if(result != null && result.length>0){
					myList = Arrays.asList(result);
					dbFildOne = Util.getTempV(myList,1);
					dbFildOne =StringUtils.isBlank(dbFildOne) ?"自维":dbFildOne;  //代维为空，赋默认值：自维
					String userlabel=Util.getTempV(myList,1);
					if(StringUtils.isNotBlank(dbFildOne)){
						o_special_field18 = StringUtils.isBlank(o_special_field18) ? "跨专业:"+dbFildOne : o_special_field18+ ";跨专业:"+dbFildOne;
					}
				}
				//遍历将OLT信息赋值到告警正文中
				Object[]	myKey1;
				String myKey2="";
				String userlabel="";
				String port_num="";
				String related_cell_num="";
				String related_client_num="";
				String link_onu_num="";
				// task = "objects_trans";
				task = "objects_trans_fdn_id";
				for(int i=0;i<oList.size();i++){
					objs = (Object[]) oList.get(i);
					intKey=objs[1];
					myKey1 = util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKey(task,intKey),task);
					if(myKey1 == null || myKey1.length==0){
						continue;
					}
					myList = myKey1==null?null:Arrays.asList(myKey1);
					userlabel= Util.getTempV(myList, 5);
					myKey2 = "olt:"+intKey;
					result = util.getObject(this.CUSTOMCACHE,myKey2,"olt");
					myList = result==null?null:Arrays.asList(result);
					port_num=Util.getTempV(myList,7);
					related_cell_num=Util.getTempV(myList,8);
					related_client_num=Util.getTempV(myList,5);
					link_onu_num=Util.getTempV(myList,4);
					o_alarm_text = o_alarm_text + "\nOLT名称"+(i+1)+"："+userlabel+"\nPON口数量："+port_num+"\n覆盖小区数："+related_cell_num+"\n承载家宽用户数："+related_client_num+"\n下带ONU数："+link_onu_num+"\n"
				}
			}
		}
		//动环专业
		if(o_professional_type=="4")
		{
			myKey="vw_machinery_room_dh:"+o_special_field11;
			result = util.getObject(this.CUSTOMCACHE,myKey,"nrmdb.vw_machinery_room_dh");
			if(result != null && result.length>0){
				myList = result==null?null:Arrays.asList(result);
				dbFildOne = Util.getTempV(myList,3);
				dbFildTwo = Util.getTempV(myList,4);
				dbFildThree = Util.getTempV(myList,5);
			}


			if(StringUtils.isNotBlank(dbFildOne) && o_eqp_object_class in ["30004","30005","30006","30008","30012","30013","30014","30020","30022","30023","30024","30025","61079","61080"])
			{
				//动力代维
				o_special_field18 = "设备:"+dbFildOne;
			}
			else if(StringUtils.isNotBlank(dbFildTwo) && o_eqp_object_class in ["30007","30015","30016","30017","30018"])
			{
				//空调代维
				o_special_field18 = "设备:"+dbFildTwo;
			}

			//if(StringUtils.isNotBlank(dbFildThree) &&o_sub_alarm_type == "703")
			if(StringUtils.isNotBlank(dbFildThree))
			{
				//市电告警-发电代维
				if(StringUtils.isNotBlank(o_special_field18))
				{
					o_special_field18=o_special_field18+";";
				}
				o_special_field18 = o_special_field18+"线路:"+dbFildThree;
			}
		}

				//PTN伪线、隧道告警关联集客, liucaiyong@20190410
				this.JikePwTunnel();

		//需要用到代维信息，从other()函数移动过来
		//required by luocheng @20131120 ,edited by liucaiyong @2013112117
		//增加“集客”过滤,updated by liucaiyong@2014022817
		//非集客告警
		o_redefine_severity = "2";
		if(StringUtils.isNotBlank(o_gcss_client))
		{
			//集客告警标记-仅根据集客判断,updated by liucaiyong@20150413
			o_redefine_severity="1";
			log.debug(o_fp0+" mark-jike-alais o_redefine_severity:"+o_redefine_severity+",o_gcss_client:"+o_gcss_client+",o_special_field18:"+o_special_field18);
		}

		this.setJiaKe();
		// 商宽业务标识和商宽用户数统计
		this.broadband();
		this.JikeFilter();
		//lgy@20190117,关于单个PON故障和FTTB ONU故障工单直派装维线路班
		//单个PON口告警
		//lcy@20190513 细分类型691
		// 细分类型693：PON LOS预警告警【CMCC-GD-DRITXQ-20200820-004 关于互感pon口类预警派单装维线路班组的需求】
		// if(o_object_class == "706" && o_eqp_object_class == "2011" && o_sub_alarm_type in ["691", "693"] && o_redefine_severity != "1"){
		// 【优化需求】关于对PON LOS告警相关规则优化调整（CMCC-GD-DRITXQ-20210610-001）
		if(o_object_class == "706" && o_eqp_object_class == "2011" && o_redefine_severity != "1" && (o_sub_alarm_type in ["691", "693"] || (o_vendor_id == "8" && o_alarm_title in ["2290466","9673360","12298548","9925954"]))){
			String Addr="";
			if(StringUtils.isNotBlank(o_corr_str)){
				String corr_strId=Util.getCRC32(o_corr_str);
				myKey 	= this.joinKey("addr_line_relation123",corr_strId);
				String task 	= "addr_line_relation123";
				Object[] objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,myKey,task);
				List objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					Addr	=	Util.getTempV(objectsList, 2);
				}else{
					myKey 	= this.joinKey("addr_line_relation13",corr_strId);
					task 	= "addr_line_relation13";
					objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,myKey,task);
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						Addr	=	Util.getTempV(objectsList, 2);
					}else{
						myKey 	= this.joinKey("addr_line_relation12",corr_strId);
						task 	= "addr_line_relation12";
						objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,myKey,task);
						objectsList = objects == null ? null : Arrays.asList(objects);
						if(objectsList != null && !objectsList.isEmpty()) {
							Addr	=	Util.getTempV(objectsList, 2);
						}else{
							myKey 	= this.joinKey("addr_line_relation23",corr_strId);
							task 	= "addr_line_relation23";
							objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,myKey,task);
							objectsList = objects == null ? null : Arrays.asList(objects);
							if(objectsList != null && !objectsList.isEmpty()) {
								Addr	=	Util.getTempV(objectsList, 2);
							}
						}
					}
				}
				if(StringUtils.isNotBlank(Addr)){
					o_special_field18="设备:"+Addr+";线路:";
				}else{
					o_special_field18="设备:自维客响;线路:";
				}
			}else{
				o_special_field18="设备:自维客响;线路:";
			}
			log.info(o_fp0+"   单个PON口告警代维单位="+o_special_field18);
		}
		//FTTB ONU告警
		if(o_eqp_object_class=="2012"&&o_object_class=="2012"&&o_ne_sub_type=="201200"&&o_redefine_severity!="1"){
			// String task="pon_cover";//Pon_cover_relation
			// myKey=this.joinKey(task,o_int_id);
			// Object[] objects = util.getObject(PORTCACHE,myKey,task);
			String key = "pon_cover:" + o_int_id;
			// redis缓存外挂
			// Object[] objects = (Object[]) rutil.getObject(key);
			Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "pon_cover");
			List objectsList = objects == null ? null : Arrays.asList(objects);
			String Rangename = "";
			if(objectsList!=null&&!objectsList.isEmpty()){
				String Addr_1 = Util.getTempV(objectsList,3);
				String Addr_2 = Util.getTempV(objectsList,4);
				String Addr_3 = Util.getTempV(objectsList,5);
				if(!(StringUtils.isBlank(Addr_1)&&StringUtils.isBlank(Addr_2)&&StringUtils.isBlank(Addr_3))){
					String Addr_123ID = Util.getCRC32(Addr_1+Addr_2+Addr_3);
					String task="addr_line_relation123";
					myKey=this.joinKey(task,Addr_123ID);
					objects = util.getObject(SimpleFindUtil.CUSTOM_CACHE,myKey,task);
					objectsList = objects==null?null:Arrays.asList(objects);
					if(objectsList!=null&&!objectsList.isEmpty()){
						Rangename = Util.getTempV(objectsList, 2);
					}
				}
			}
			if(StringUtils.isNotBlank(Rangename)){
				o_special_field18="设备:"+Rangename+";线路:";
			}else{
				o_special_field18="设备:自维;线路:";
			}
			log.info(o_fp0+"   FTTB ONU告警代维单位="+o_special_field18);
		}
		//小型PTN,物理设备类型、集客业务字段字段赋值 added by lgy@20180619 required by sunyuqiu@CMCC-GD-DRITXQ-20180511-007
		if(o_vendor_id in ["1010","9010"]&&o_eqp_object_class=="2009"){
			o_ne_sub_type="10";
			//o_gcss_service_level="4";
			//o_redefine_severity="1";
			//o_network_type_top="6";
		}
		//add by lgy@20180620 required by wangyingfeng
		if(o_redefine_severity=="1"){
			o_alarm_text+="\n产品号码: "+product_no;
		}
		//lgy@20190108,传输家、集客的一、二级专业赋值
		if(o_professional_type=="3"){
			if(o_redefine_severity=="1"){
				o_network_type_top="11";
				o_network_type="1100";

								//集客告警二次标准化    liucaiyong@20190920
				this.setNewNetworkType(dest);
								this.setNewAlarmStandard(src, dest);
			}else if(o_redefine_severity=="3"){
				o_network_type_top="12";
				o_network_type="1201";
			}
		}

	}

	private void JikeFilter()
	{
		//过滤集客
		if(StringUtils.isBlank(o_gcss_client)){
			return;
		}

		if(StringUtils.isBlank(o_group_id)){
			o_group_id='';
		}

		boolean filter = false;//不在  指定标题组中，则取消集客关联
		if(!o_group_id.contains("1454304217") && o_professional_type =="3"){
			filter = true;//不在 标题组[关联集客告警-传送网]
			log.info(o_fp0 + " jieke filter from group[1454304217]");
		}

		//数据网专业的告警不关联集客，o_group_id不包含：标题组[关联集客告警-数据网]，by yjb@20190214
		if (!o_group_id.contains("167110101") && o_professional_type == "2") {
			filter = true;
			log.info(o_fp0 + "jike filter from group[167110101]");
		}

		// IT网告警根据标题组关联集客业务（CMCC-GD-DRITXQ-20210421-036）：IT网专业告警（network_type_top=9）的“网元组ID”（group_id）字段不包含“关联集客告警-IT网”组（group_id=615144481），则取消集客关联
		if (!o_group_id.contains("615144481") && o_network_type_top == "9") {
		    filter = true; // 不在标题组[关联集客告警-IT网]
		    log.info(o_fp0 + "jike filter from group[615144481]");
		}

		if(!filter){
			return;
		}

		//集客字段置空
		o_gcss_client="";
		o_gcss_client_num="";
		o_gcss_client_name="";
		o_gcss_client_level="";
		o_gcss_client_grade="";
		o_gcss_client_grade_mgt = "";
		o_gcss_service="";
		o_gcss_service_num="";
		o_gcss_service_type="";
		o_gcss_service_level="";
		o_gcss_service_sub_type="";

		//集客标志字段判断
		if(StringUtils.isNotBlank(o_home_client_num)&&o_home_client_num!="0"){
			o_redefine_severity = "3";//家客
			o_network_type_top = "12";
		} else if (o_professional_type == "2") {  //数据网专业的告警不关联集客，o_group_id不包含：标题组[关联集客告警-数据网]，by yjb@20190214
			o_redefine_severity = "2";//非家客集客
			log.info(o_fp0 + "jike filter from group[167110101] o_redefine_severity=" + o_redefine_severity);
		} else {
			o_redefine_severity = "2";//非家客集客
			o_network_type_top = "4";
		}

	}
	//lgy@20190117,PTN伪线、隧道告警关联集客
	private void JikePwTunnel(){
		if(o_group_id.contains("940157255")){
			//集客字段置空
			o_gcss_client="";
			o_gcss_client_num="";
			o_gcss_client_name="";
			o_gcss_client_level="";
			o_gcss_client_grade="";
			o_gcss_client_grade_mgt = "";
			o_gcss_service="";
			o_gcss_service_num="";
			o_gcss_service_type="";
			o_gcss_service_level="";
			o_gcss_service_sub_type="";

			List objectsList;
			String circuit_id;
			String task="ptn_PwTunnel";//Pon_cover_relation
			String key=this.joinKey(task,o_fm_int_id);
			//List results = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key, task);
			//redis缓存外挂
			// List results = rutil.getObject(key);
			objectsList = util.getObject(CUSTOMCACHE, key, task);
			if(objectsList!=null&&!objectsList.isEmpty()){
				circuit_id = Util.getTempV(objectsList,1);
				if(StringUtils.isNotBlank(circuit_id)){
					setGcss("610",circuit_id);
				}
				log.info(o_fp0 + " rel ptn-pw/tunnel/label-circuit: " + circuit_id);
				//追加到 circuit_id,circuit_no ,liucaiyong@20190410
				o_circuit_id=appendStr(o_circuit_id,circuit_id);
				objectsList = util.getObject(CUSTOMCACHE, joinKey("gd:jike:circuit:namefromid",circuit_id),"jikeCircuitTableFromId");
				if(objectsList!=null&&!objectsList.isEmpty())
				{
					circuit_id = Util.getTempV(objectsList, 0);
					o_circuit_no=appendStr(o_circuit_no,circuit_id);
					//增加circuit_level  ,liucaiyong@20190416
					objectsList = util.getObject(this.CUSTOMCACHE,"gd:circuit:level:"+circuit_id,"gdCircuitLevel");
					if (objectsList != null&&!objectsList.isEmpty()) {
						circuit_id = Util.getTempV(objectsList, 0);
						if(StringUtils.isNotBlank(circuit_id)){
							o_circuit_level = LevelCompare("circuit_level",circuit_id,o_circuit_level);
						}
					}
				}
			}
		}
	}
	/**
	 * 赋值到1406消息中
	 * @param destRecord
	 */
	private void set1406Value(CommonAlarm destRecord)
	{
		Util.setValue(destRecord,"fp0",o_fp0);
		Util.setValue(destRecord,"fp1",o_fp1);
		Util.setValue(destRecord,"fp2",o_fp2);
		Util.setValue(destRecord,"fp3",o_fp3);
		Util.setValue(destRecord,"c_fp0",o_c_fp0);
		Util.setValue(destRecord,"c_fp1",o_c_fp1);
		Util.setValue(destRecord,"c_fp2",o_c_fp2);
		Util.setValue(destRecord,"c_fp3",o_c_fp3);
		Util.setValue(destRecord,"time_stamp",o_time_stamp);
		Util.setValue(destRecord,"int_id",o_int_id);
		Util.setValue(destRecord,"object_class",o_object_class);
		Util.setValue(destRecord,"vendor_id",o_vendor_id);
		Util.setValue(destRecord,"alarm_title",o_alarm_title);
		Util.setValue(destRecord,"event_time",o_event_time);
		Util.setValue(destRecord,"org_severity",o_org_severity);
		Util.setValue(destRecord,"redefine_severity",o_redefine_severity);
		Util.setValue(destRecord,"group_severity",o_group_severity);
		Util.setValue(destRecord,"region_severity",o_region_severity);
		Util.setValue(destRecord,"vendor_severity",o_vendor_severity);
		Util.setValue(destRecord,"org_type",o_org_type);
		Util.setValue(destRecord,"redefine_type",o_redefine_type);
		Util.setValue(destRecord,"vendor_type",o_vendor_type);
		Util.setValue(destRecord,"active_status",o_active_status);
		Util.setValue(destRecord,"cancel_time",o_cancel_time);
		Util.setValue(destRecord,"alarm_text",o_alarm_text);
		Util.setValue(destRecord,"omc_id",o_omc_id);
		Util.setValue(destRecord,"omc_alarm_id",o_omc_alarm_id);
		Util.setValue(destRecord,"probable_cause",o_probable_cause);
		Util.setValue(destRecord,"probable_cause_txt",o_probable_cause_txt);
		Util.setValue(destRecord,"locate_info",o_locate_info);
		Util.setValue(destRecord,"related_tkgp",o_related_tkgp);
		Util.setValue(destRecord,"corr_str",o_corr_str);
		Util.setValue(destRecord,"type_keycode",o_type_keycode);
		Util.setValue(destRecord,"severity_keycode",o_severity_keycode);
		Util.setValue(destRecord,"title_text",o_title_text);
		Util.setValue(destRecord,"event_id",o_event_id);
		Util.setValue(destRecord,"event_cat",o_event_cat);
		Util.setValue(destRecord,"vendor_name",o_vendor_name);
		Util.setValue(destRecord,"ne_label",o_ne_label);
		Util.setValue(destRecord,"ne_location",o_ne_location);
		Util.setValue(destRecord,"city_name",o_city_name);
		Util.setValue(destRecord,"city_id",o_city_id);
		Util.setValue(destRecord,"region_id",o_region_id);
		Util.setValue(destRecord,"region_name",o_region_name);
		Util.setValue(destRecord,"channel_type",o_channel_type);
		Util.setValue(destRecord,"special_field0",o_special_field0);
		Util.setValue(destRecord,"special_field1",o_special_field1);
		Util.setValue(destRecord,"special_field2",o_special_field2);
		Util.setValue(destRecord,"special_field3",o_special_field3);
		Util.setValue(destRecord,"special_field4",o_special_field4);
		Util.setValue(destRecord,"special_field5",o_special_field5);
		Util.setValue(destRecord,"special_field6",o_special_field6);
		Util.setValue(destRecord,"special_field7",o_special_field7);
		Util.setValue(destRecord,"special_field8",o_special_field8);
		Util.setValue(destRecord,"special_field9",o_special_field9);
		Util.setValue(destRecord,"special_field10",o_special_field10);
		Util.setValue(destRecord,"special_field11",o_special_field11);
		Util.setValue(destRecord,"special_field12",o_special_field12);
		Util.setValue(destRecord,"special_field13",o_special_field13);
		Util.setValue(destRecord,"special_field14",o_special_field14);
		Util.setValue(destRecord,"special_field15",o_special_field15);
		Util.setValue(destRecord,"special_field16",o_special_field16);
		Util.setValue(destRecord,"special_field17",o_special_field17);
		Util.setValue(destRecord,"special_field18",o_special_field18);
		Util.setValue(destRecord,"special_field19",o_special_field19);
		Util.setValue(destRecord,"special_field20",o_special_field20);
		Util.setValue(destRecord,"special_field21",o_special_field21);
		Util.setValue(destRecord,"special_field22",o_special_field22);
		Util.setValue(destRecord,"special_field23",o_special_field23);
		Util.setValue(destRecord,"parent_int_id",o_ParentIntId);
		Util.setValue(destRecord,"ParentObjectClass",o_ParentObjectClass);
		Util.setValue(destRecord,"alarm_unit",o_alarm_unit);
		Util.setValue(destRecord,"alarm_content",o_alarm_content);
		Util.setValue(destRecord,"sub_alarm_type",o_sub_alarm_type);
		Util.setValue(destRecord,"alarm_origin",o_alarm_origin);
		// Util.setValue(destRecord,"province_id","-1489894494");
		Util.setValue(destRecord,"province_id",o_province_id);
		// Util.setValue(destRecord,"province_name","广东省");
		Util.setValue(destRecord,"province_name",o_province_name);
		Util.setValue(destRecord,"ack_flag",o_ack_flag);
		Util.setValue(destRecord,"ack_user",o_ack_user);
		Util.setValue(destRecord,"ack_time",o_ack_time);
		Util.setValue(destRecord,"ack_terminal",o_ack_terminal);
		Util.setValue(destRecord,"network_type",o_network_type);
		Util.setValue(destRecord,"tmsc_cat",o_tmsc_cat);
		Util.setValue(destRecord,"stp_cat",o_stp_cat);
		Util.setValue(destRecord,"resource_status",o_resource_status);
		Util.setValue(destRecord,"alarm_resource_status",o_alarm_resource_status);
		Util.setValue(destRecord,"professional_type",o_professional_type);
		Util.setValue(destRecord,"nms_name",o_nms_name);
		Util.setValue(destRecord,"extra_string1",o_extra_string1);
		Util.setValue(destRecord,"extra_string2",o_extra_string2);
		Util.setValue(destRecord,"extra_string3",o_extra_string3+"");
		Util.setValue(destRecord,"extra_id1",o_extra_id1+"");
		Util.setValue(destRecord,"extra_id2",o_extra_id2);
		Util.setValue(destRecord,"extra_id3",o_extra_id3);
		Util.setValue(destRecord,"site_no",o_site_no);
		Util.setValue(destRecord,"circuit_no",o_circuit_no);
		Util.setValue(destRecord,"link_office",o_link_office);
		Util.setValue(destRecord,"alarm_source",o_alarm_source);
		Util.setValue(destRecord,"sys_vendor_id",o_sys_vendor_id);
		Util.setValue(destRecord,"eqp_int_id",o_eqp_int_id);
		Util.setValue(destRecord,"eqp_object_class",o_eqp_object_class);
		Util.setValue(destRecord,"eqp_version",o_eqp_version);
		Util.setValue(destRecord,"eqp_label",o_eqp_label);
		Util.setValue(destRecord,"eqp_alias",o_eqp_alias);
		Util.setValue(destRecord,"ne_alias",o_ne_alias);
		Util.setValue(destRecord,"ne_status",o_ne_status);
		Util.setValue(destRecord,"ne_admin_status",o_ne_admin_status);
		Util.setValue(destRecord,"alarm_ne_status",o_alarm_ne_status);
		Util.setValue(destRecord,"logic_alarm_type",o_logic_alarm_type);
		Util.setValue(destRecord,"logic_sub_alarm_type",o_logic_sub_alarm_type);
		Util.setValue(destRecord,"standard_alarm_name",o_standard_alarm_name);
		Util.setValue(destRecord,"standard_alarm_id",o_standard_alarm_id);
		Util.setValue(destRecord,"attachment",o_attachment);
		Util.setValue(destRecord,"effect_ne",o_effect_ne);
		Util.setValue(destRecord,"effect_service",o_effect_service);
		Util.setValue(destRecord,"alarm_value",o_alarm_value);
		Util.setValue(destRecord,"preprocess_manner",o_preprocess_manner);
		Util.setValue(destRecord,"province_process_flag",o_province_process_flag);
		Util.setValue(destRecord,"department_process_flag",o_department_process_flag);
		Util.setValue(destRecord,"ticket_confirm_manner",o_ticket_confirm_manner);
		Util.setValue(destRecord,"send_jt_flag",o_send_jt_flag);
		Util.setValue(destRecord,"port_num",o_port_num);
		Util.setValue(destRecord,"channel_num",o_channel_num);
		Util.setValue(destRecord,"locate_name",o_locate_name);
		Util.setValue(destRecord,"remote_int_id",o_remote_int_id);
		Util.setValue(destRecord,"remote_eqp_label",o_remote_eqp_label);
		Util.setValue(destRecord,"remote_eqp_alias",o_remote_eqp_alias);
		Util.setValue(destRecord,"remote_resource_status",o_remote_resource_status);
		Util.setValue(destRecord,"remote_proj_sub_status",o_remote_proj_sub_status);
		Util.setValue(destRecord,"standard_alarm_name_id",o_standard_alarm_name_id);
		Util.setValue(destRecord,"standard_flag",o_standard_flag);
		Util.setValue(destRecord,"correlate_alarm_flag",o_correlate_alarm_flag);
		Util.setValue(destRecord,"alarm_act_count",o_alarm_act_count);
		Util.setValue(destRecord,"nms_alarm_id",o_nms_alarm_id);
		Util.setValue(destRecord,"object_level",o_object_level);
		Util.setValue(destRecord,"gcss_client",o_gcss_client);
		Util.setValue(destRecord,"gcss_client_num",o_gcss_client_num);
		Util.setValue(destRecord,"gcss_client_name",o_gcss_client_name);
		Util.setValue(destRecord,"gcss_client_level",o_gcss_client_level+"");
		Util.setValue(destRecord,"gcss_service",o_gcss_service);
		Util.setValue(destRecord,"gcss_service_num",o_gcss_service_num);
		Util.setValue(destRecord,"gcss_service_type",o_gcss_service_type);
		Util.setValue(destRecord,"gcss_service_level",o_gcss_service_level+"");
		Util.setValue(destRecord,"circuit_id",o_circuit_id);
		Util.setValue(destRecord,"gcss_client_grade",o_gcss_client_grade+"");
		Util.setValue(destRecord,"gcss_client_grade_mgt",o_gcss_client_grade_mgt+"");
		Util.setValue(destRecord,"remote_object_class",o_remote_object_class);
		Util.setValue(destRecord,"circuit_level",o_circuit_level);
		//高铁,add by liuaiyong@20150624
		Util.setValue(destRecord,"alarm_important_level",o_alarm_important_level);
		Util.setValue(destRecord,"effect_circuit_num",o_effect_circuit_num);
		Util.setValue(destRecord,"interrupt_circuit_id",o_interrupt_circuit_id);
		Util.setValue(destRecord,"interrupt_circuit_no",o_interrupt_circuit_no);
		Util.setValue(destRecord,"interrupt_circuit_state",o_interrupt_circuit_state);
		Util.setValue(destRecord,"interrupt_gcss_client_level",o_interrupt_gcss_client_level);
		Util.setValue(destRecord,"network_type_top",o_network_type_top);
		Util.setValue(destRecord,"remark_exist",o_remark_exist);
		Util.setValue(destRecord,"service_crossdomain_type",o_service_crossdomain_type);
		Util.setValue(destRecord,"site_info",o_site_info);
		Util.setValue(destRecord,"site_type",o_site_type);
		//RRU 20150624 add fuwei
		Util.setValue(destRecord,"rlocate_ne_int_id",o_rlocate_ne_int_id);
		Util.setValue(destRecord,"rlocate_ne_name",o_rlocate_ne_name);
		Util.setValue(destRecord,"rlocate_ne_type",o_rlocate_ne_type);
		Util.setValue(destRecord,"ne_sub_type",o_ne_sub_type);
		//新增家客,add by liucaiyong@20160412
		Util.setValue(destRecord,"link_onu_num",o_link_onu_num);
		Util.setValue(destRecord,"home_client_num",o_home_client_num);

		Util.setValue(destRecord,"layer_rate",o_layer_rate);
		Util.setValue(destRecord,"board_type",o_board_type);
		Util.setValue(destRecord,"alarm_check",o_alarm_check);

		Util.setValue(destRecord,"alarm_reason",o_alarm_reason);
		Util.setValue(destRecord,"scence_type",o_scence_type);
		Util.setValue(destRecord,"site_poweroff",o_site_poweroff);
		Util.setValue(destRecord,"group_id",o_group_id);
		Util.setValue(destRecord,"business_type",o_business_type);
		Util.setValue(destRecord,"business_system_id",o_business_system_id);
		Util.setValue(destRecord,"business_system",o_business_system);
		Util.setValue(destRecord,"ems_id",o_ems_id);
		Util.setValue(destRecord,"town_id",o_town_id);
		Util.setValue(destRecord,"township",o_township);
		Util.setValue(destRecord,"vm_ids",o_vm_ids);
		Util.setValue(destRecord,"pr_ids",o_pr_ids);
		Util.setValue(destRecord,"area_type",o_area_type);
		Util.setValue(destRecord,"ne_ip",o_ne_ip);
		Util.setValue(destRecord,"gcss_service_sub_type",o_gcss_service_sub_type);
		Util.setValue(destRecord,"gcss_service_code",o_gcss_service_code);
		Util.setValue(destRecord,"proj_time",o_proj_time);
		Util.setValue(destRecord,"group_name",o_group_name);
	}


	private Date getDate(String str)
	{
		Date date = getDate(str,"yyyy-MM-dd HH:mm:ss");
		return date;
	}
	private Date getDate(String str,String pattern)
	{
		SimpleDateFormat sdf =new SimpleDateFormat(pattern);
		Date date=null;
		try{
			date = sdf.parse(str);
		}
		catch(ParseException e){
			return date;
		}
		return date;
	}
	//get substr of len
	private String subStrLen(String str){
		return subStrLen(str,254);
	}
	private String subStrLen(String str,int len){
		return subStrLen(str,len,",");
	}
	private String subStrLen(String str,int len,String sep){
		if(StringUtils.isBlank(str) ||str.length()<len){
			return str;
		}

		str = str.substring(0,len);
		return str.substring(0,len - str.reverse().indexOf(sep) -1);
	}
	//此函数可能导致内存泄露
	private String subStrLenLen(String str,int len,String sep){
		if(StringUtils.isBlank(str)){
			return str;
		}
		byte[] strArr = str.getBytes();
		if(strArr.length<=len)
			return str;

		strArr = Arrays.copyOfRange(strArr, 0, len);
		if(StringUtils.isNotBlank(sep)){
			byte[] sepArr = sep.getBytes();
			int sepInx=-1;
			for(int i=0;i<strArr.length-sepArr.length;i++){
				boolean posed = true;
				for(int j=0;j<sepArr.length;j++){
					if(strArr[i+j] != sepArr[j]){
						posed = false;
						break;
					}
				}
				if(posed){
					sepInx = i;
				}
			}
			if(sepInx>0){
				strArr = Arrays.copyOfRange(strArr, 0, sepInx);
			}
		}
		return new String(strArr);
	}

	private String appendStr(String str,String substr,String sep){
		if(StringUtils.isBlank(substr)){
			return str;
		}
		if(StringUtils.isBlank(str) || substr.equals(str)){
			return substr;
		}
		if(substr.contains(sep)){
			String[] strsubs = substr.split(sep);
			for(String strsub:strsubs){
				str = appendStr(str,strsub,sep);
			}
			return str;
		}
		if(str.startsWith(substr+sep) || str.endsWith(sep+substr) || str.contains(sep+substr+sep)){
			return str;
		}
		return str+sep+substr;
	}
	private String appendStr(String str,String substr){
		return appendStr(str,substr,",");
	}

	public void idn2Intid() {
		// String eqp_int_id_method = "";
			if(StringUtils.isNotBlank(o_idn)) {
					//o_int_id = jcrc.getCRC32(o_idn);
					o_int_id = StringUtils.isNotBlank(o_int_id) ? o_int_id : jcrc.getCRC32(o_idn);
					o_fm_int_id = o_int_id;
			}

			// if(StringUtils.isNotBlank(o_eqp_idn)) {
				// o_eqp_int_id = jcrc.getCRC32(o_eqp_idn);
					// o_eqp_int_id = StringUtils.isNotBlank(o_eqp_int_id) ? o_eqp_int_id : jcrc.getCRC32(o_eqp_idn);
					// o_fm_eqp_int_id = o_eqp_int_id;
			// }
			// objects_trans中object_class不相同的网元，用crc32算法算出对应的fdn_id相同，导致告警匹配到错误的网元。经讨论，需把使用fdn_id匹配资源改成fdn匹配资源。
			if(StringUtils.isNotBlank(o_eqp_idn)) {
				// o_professional_type == "3"匹配太范，与缓存不匹配
				// if(o_professional_type == "3") {
				if(o_professional_type == "3" && o_object_class in ["100", "2001", "2008", "2009", "2011", "2033", "2034", "2050"] && o_resource_status != "2") {
					// eqp_int_id_method = "cache";
					String eqp_int_id_cache = "";
					// Object[] objects = null;
					// List objectsList = null;
					String key = "objects_trans:" + o_eqp_idn;
					// redis缓存外挂
					// Object[] objects = (Object[]) rutil.getObject(key);
					Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "objects_trans");
					List objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
							eqp_int_id_cache = Util.getTempV(objectsList, 0);
							}
						o_eqp_int_id = StringUtils.isNotBlank(o_eqp_int_id) ? o_eqp_int_id : eqp_int_id_cache;
						o_fm_eqp_int_id = o_eqp_int_id;
				} else {
					// o_eqp_int_id = jcrc.getCRC32(o_eqp_idn);
					// eqp_int_id_method = "getCRC32";
					o_eqp_int_id = StringUtils.isNotBlank(o_eqp_int_id) ? o_eqp_int_id : jcrc.getCRC32(o_eqp_idn);
					o_fm_eqp_int_id = o_eqp_int_id;
				}
			}
			log.debug("idn-" + o_fp0 + ",idn/int_id=" + o_idn + "/" + o_fm_int_id + ",eqp_idn/eqp_int_id=" + o_eqp_idn + "/" + o_fm_eqp_int_id);
			// log.debug("idn-" + o_fp0 + ",idn/int_id=" + o_idn + "/" + o_fm_int_id + ",eqp_idn/eqp_int_id=" + o_eqp_idn + "/" + o_fm_eqp_int_id + ",eqp_int_id_method=" + eqp_int_id_method);
			idn4EPC();
			idn4ChuanShu();
			idn4LTE();
			idn4NFV();
	}

	public void idn4ChuanShu()
	{
		//过滤出 传输，统一采集
		if(o_professional_type!= "3")
			return;
		if(StringUtils.isBlank(o_idn))
			return;

		if(o_object_class in ["2031","2700"]){//GCP类型无法映射到综合监
			o_object_class = "100";
		}
		if(o_eqp_object_class in ["2031","2700"]){//GCP类型无法映射到综合监控
			o_eqp_object_class = "100";
		}
		//ne_location赋值120消息的eqp_label+locate_info  added by lgy@20181025 required by shanchunlan
		if(o_eqp_object_class in ["2011","2012"]){
			o_ne_location="neName:"+o_eqp_label+";locationInfo:"+o_locate_info;
		}
		String key="";
		// String task="objects_trans";
		String task="objects_trans_fdn_id";
		Object[] objects = null;
		List objectsList = null;

		String roomId;
		String portSpeed = "";
		//int赋值
		if(o_object_class == "706" && o_eqp_object_class == "2011"){//OLT端口
			//key	=	"ptp_pon:"+o_fm_int_id;
			//task = "ptp_pon";
			//objects = (Object[]) util.getObject(CUSTOMCACHE, key,task);
			//redis缓存外挂
				  // objects = (Object[]) rutil.getObject("ptp_pon:"+ o_idn);
				  objects = (Object[]) util.getObject(CUSTOMCACHE, "ptp_pon:"+ o_idn, "ptp_pon");
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_int_id 				= Util.getTempV(objectsList, 1);
				o_ne_label			=	Util.getTempV(objectsList, 2);

				o_link_onu_num = Util.getTempV(objectsList,3);//related_onu_ftth_num+related_onu_fttb_num
				o_home_client_num = Util.getTempV(objectsList,4);//related_client_num
				o_special_field1 = Util.getTempV(objectsList,5);//related_cell_num
				o_special_field4 = Util.getTempV(objectsList,8);//iptv

				portSpeed	=	Util.getTempV(objectsList, 6);
				o_object_level 	= Util.getTempV(objectsList, 7);
				//is_uplink	=	Util.getTempV(objectsList, 9);
				log.debug("ptp_pon-fp0={}, object_level={}", o_fp0, o_object_level);
			}

			if(StringUtils.isBlank(o_object_level)){
				o_object_level = "70601";
			}
		}
		else if(o_object_class == "706"){//其他网元端口
			// key	=	"port:"+o_fm_int_id;
			// task = "port";
			//objects = (Object[]) util.getObject(PORTCACHE, key,task);
			//redis缓存外挂
			// objects = (Object[]) rutil.getObject("ptp:"+o_idn);
			objects = (Object[]) util.getObject(CUSTOMCACHE, "ptp:"+o_idn, "ptp");
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_int_id 				= Util.getTempV(objectsList, 0);
				o_ne_label			=	Util.getTempV(objectsList, 1);
				o_object_level 	= Util.getTempV(objectsList, 4);

				portSpeed	=	Util.getTempV(objectsList, 2);
				log.debug("ptp-fp0={}, int_id={}, ne_label={}, object_level={}, portSpeed={}", o_fp0, o_int_id, o_ne_label, o_object_level, portSpeed);
			}

			if(StringUtils.isBlank(o_object_level)){
				o_object_level = "70601";
			}
		}
		else if(o_object_class == "10011" && o_eqp_object_class == "2011"){//OLT板卡
			//key	=	"board_config_pon:"+o_fm_int_id;
			//task = "board_config_pon";
			//objects = (Object[]) util.getObject(CUSTOMCACHE, key,task);
			//redis缓存外挂
				  // objects = (Object[]) rutil.getObject("board_config_pon:"+ o_idn);
				  objects = (Object[]) util.getObject(CUSTOMCACHE, "board_config_pon:"+ o_idn, "board_config_pon");
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_int_id 				= Util.getTempV(objectsList, 1);
				o_ne_label			=	Util.getTempV(objectsList, 2);

				o_link_onu_num = Util.getTempV(objectsList,3);//related_onu_ftth_num+related_onu_fttb_num
				o_home_client_num = Util.getTempV(objectsList,4);//related_client_num
				o_special_field1 = Util.getTempV(objectsList,5);//related_cell_num
				o_special_field4 = Util.getTempV(objectsList,12);//iptv

				//板卡类型
				String tmp	=	Util.getTempV(objectsList, 6);
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"板卡名称="	+	tmp	+	";";

				boardMap.put("board_type",tmp);

				//板卡子类型,added by sunyuqiu@20151119
				tmp = Util.getTempV(objectsList, 8);
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"板卡子类型="	+	tmp	+	";";
				//软件版本,added by sunyuqiu@20151119
				tmp = Util.getTempV(objectsList, 7);
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"软件版本="	+	tmp	+	";";
				//硬件版本,added by sunyuqiu@20151119
				tmp = Util.getTempV(objectsList, 9);
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"硬件版本="	+	tmp	+	";";
				//序列号
				tmp = Util.getTempV(objectsList, 10);
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"序列号="	+	tmp	+	";";
				//板卡端口数
				tmp = Util.getTempV(objectsList, 11);
				//传输 板卡信息 后面添加软件版本信息
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"板卡端口数="	+	tmp	+	";";
				//log.info(o_fp0+" 添加软件版本信息("+softver+") ");
			}
		}
		else if(o_object_class == "10011"){//其他网元板卡
			key	=	"board:"+o_fm_int_id;
			task = "board";
			objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_int_id 				= Util.getTempV(objectsList, 0);
				o_ne_label			=	Util.getTempV(objectsList, 1);

				//板卡类型
				String tmp	=	Util.getTempV(objectsList, 2);
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"板卡名称="	+	tmp	+	";";

				boardMap.put("board_type",tmp);

				//板卡子类型,added by sunyuqiu@20151119
				tmp = Util.getTempV(objectsList, 5);
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"板卡子类型="	+	tmp	+	";";
				//软件版本,added by sunyuqiu@20151119
				tmp = Util.getTempV(objectsList, 4);
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"软件版本="	+	tmp	+	";";
				//硬件版本,added by sunyuqiu@20151119
				tmp = Util.getTempV(objectsList, 6);
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"硬件版本="	+	tmp	+	";";
				//序列号
				tmp = Util.getTempV(objectsList, 7);
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"序列号="	+	tmp	+	";";
				//板卡端口数
				tmp = Util.getTempV(objectsList, 8);
				//传输 板卡信息 后面添加软件版本信息
				o_extra_string1+=	StringUtils.isBlank(tmp)	?	""	:	"板卡端口数="	+	tmp	+	";";
				//log.info(o_fp0+" 添加软件版本信息("+softver+") ");
			}
		}
		else if(o_object_class == "2012"){
			//网元告警，网元信息用告警对象信息,update by liucaiyong@20160725
			o_eqp_int_id 	= o_int_id;
			//o_eqp_label		=	o_ne_label;  ?
			o_eqp_object_class	=	o_object_class;
			o_fm_eqp_int_id = o_fm_int_id;
			o_eqp_idn = o_idn;

			//2.ONU 告警
			//task = "onu";
			//key = "onu:"+o_fm_int_id;
			//objects = (Object[]) util.getObject(CUSTOMCACHE, key,task);
			//redis缓存外挂
				  // objects = (Object[]) rutil.getObject("onu:"+ o_idn);
				  objects = (Object[]) util.getObject(CUSTOMCACHE, "onu:"+ o_idn, "onu");
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_home_client_num=Util.getTempV(objectsList,5);//related_client_num
				String business_scene	=	Util.getTempV(objectsList,4);//business_scene
				if(StringUtils.isBlank(business_scene)){
					business_scene = "1";
				}
				o_ne_sub_type = "20120"+business_scene;//0（FTTB）-----201200（FTTB）/1（FTTH）------201201（FTTH）

				o_int_id 				= Util.getTempV(objectsList, 6);
				o_ne_label			=	Util.getTempV(objectsList, 7);
				o_ne_status=	Util.getTempV(objectsList, 8);
				o_site_no	=	Util.getTempV(objectsList, 3);//功能合并
				roomId	=	o_site_no;

				o_eqp_int_id 	= o_int_id;
				o_eqp_label		=	o_ne_label;
				o_eqp_object_class	=	o_object_class;
				o_resource_status	=	o_ne_status;

				o_region_id					= Util.getTempV(objectsList, 9);//地市割接到综合EMS导致地市名不一致
				o_city_id						= Util.getTempV(objectsList, 10);//地市割接到综合EMS导致地市名不一致

				o_object_level 	= Util.getTempV(objectsList, 11);//site_grade  1:vip,2:非vip
				log.debug("onu-fp0={}, object_level={}", o_fp0, o_object_level);
				if(StringUtils.isNotBlank(o_object_level) && o_object_level =="1"){
					o_object_level = "6";
				}else{
					o_object_level = "5";//5:(ONU)非VIP,6:(ONU)VIP
				}


			}

			if(StringUtils.isBlank(o_ne_sub_type)){
				o_ne_sub_type = "201201";
			}

			//task="pon_cover";//Pon_cover_relation
			//key=this.joinKey(task,o_int_id);
			//objects = util.getObject(PORTCACHE,key,task);
			//redis缓存外挂
				  // objects = (Object[]) rutil.getObject("pon_cover:"+o_int_id);
				  objects = (Object[]) util.getObject(CUSTOMCACHE, "pon_cover:"+o_int_id, "pon_cover");
			objectsList = objects==null?null:Arrays.asList(objects);
			if(objectsList!=null&&!objectsList.isEmpty()){
				o_ne_alias = Util.getTempV(objectsList,1);
			}
		}
		else if(o_object_class in ["2006","150110"]){
			//	//3.时隙
			//	key = "ctp:"+o_fm_int_id;
			//	task = "ctp";
			o_object_class	=	"150110";
			idn4Ctp();
		}
		else if(o_object_class == "2035"){
			//4.OT_AID
			o_object_class	=	"150111";
		}
		else{
			if(o_object_class in ["2011","2012"]){//网元告警，网元信息用告警对象信息,update by liucaiyong@20160725
				o_eqp_int_id 	= o_int_id;
				//o_eqp_label		=	o_ne_label;
				o_eqp_object_class	=	o_object_class;
			}

			//4. 其他告警
			// key	=	"objects_trans:"+o_fm_int_id;
			key	=	"objects_trans_fdn_id:"+o_fm_int_id;
			objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_int_id 				= Util.getTempV(objectsList, 0);
				o_severity_keycode	= Util.getTempV(objectsList, 1);
				o_object_class 	= Util.getTempV(objectsList, 16);
				o_ne_label			=	Util.getTempV(objectsList, 5);
				o_ne_status=	Util.getTempV(objectsList, 4);
				o_site_no	=	Util.getTempV(objectsList, 18);//功能合并
				roomId	=	Util.getTempV(objectsList, 18);

				o_eqp_int_id 	= o_int_id;
				o_eqp_label		=	o_ne_label;
				o_eqp_object_class	=	o_object_class;
				o_resource_status	=	o_ne_status;

				o_region_id					= Util.getTempV(objectsList, 20);//地市割接到综合EMS导致地市名不一致
				o_city_id						= Util.getTempV(objectsList, 7);//地市割接到综合EMS导致地市名不一致
			}
			if(objectsList != null)
				log.info(o_fp0+" get-region_id["+o_region_id+"],list-size:"+objectsList.size());
			else
				log.info(o_fp0+" get-region_id["+o_region_id+"]");
		}

		//EQP赋值,端口/时隙
		if(StringUtils.isNotBlank(o_fm_eqp_int_id) && o_object_class in ["706","150110","10011","150111","15089"]){
			// key = "objects_trans:"+o_fm_eqp_int_id;
			key = "objects_trans_fdn_id:"+o_fm_eqp_int_id;
			// task = "objects_trans";
			task = "objects_trans_fdn_id";
			objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_eqp_int_id 				= Util.getTempV(objectsList, 0);
				o_severity_keycode			= Util.getTempV(objectsList, 1);
				o_eqp_object_class 	= Util.getTempV(objectsList, 16);
				o_eqp_label					=	Util.getTempV(objectsList, 5);
				o_resource_status		=	Util.getTempV(objectsList, 4);
				o_site_no						=	Util.getTempV(objectsList, 18);//功能合并
				roomId							=	Util.getTempV(objectsList, 18);
				o_ne_status					=	o_resource_status;
				o_region_id					= Util.getTempV(objectsList, 20);//地市割接到综合EMS导致地市名不一致
				o_city_id						= Util.getTempV(objectsList, 7);//地市割接到综合EMS导致地市名不一致
			}
			if(objectsList != null)
				log.info(o_fp0+" get-region_id["+o_region_id+"],list-size:"+objectsList.size());
			else
				log.info(o_fp0+" get-region_id["+o_region_id+"]");
		}

		//CMCC-GD-DRITXQ-20160706-012  gpon告警2次标准化
		//对于网元名含EMS的gpon告警，如果同时包含onu则设备类型置为onu，如果不含onu，但含olt，则置为olt，如果都不包含则置为onu
		if(o_eqp_object_class in ["2011","2012"]){
			if(o_ne_label.startsWith("EMS=")){
				if(o_ne_label.contains("ONU")){
					o_eqp_object_class = "2012";
				}else if(o_ne_label.contains("OLT")){
					o_eqp_object_class = "2011";
				}else{
					o_eqp_object_class = "2012";
				}
			}
		}

		//层速率
		if(StringUtils.isNotBlank(o_layer_rate)){
			key = this.joinKey("tia_layer_rate_dict",o_vendor_id,o_eqp_object_class,o_layer_rate);
			task = "tia_layer_rate_dict";
			objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_layer_rate	= Util.getTempV(objectsList, 5);
				o_locate_name	=	Util.getTempV(objectsList, 4);
				log.info(o_fp0+" map:["+key+"] sucess:"+o_layer_rate);
				if(o_layer_rate == "85" && StringUtils.isNotBlank(portSpeed) && o_object_class == "706"){
					//以太网物理端口,端口速率代替层速率
					key 	= this.joinKey("tia_alarm_dict",portSpeed,"1600");
					task 	= "tia_alarm_dict.2";
					objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,key,task);
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						portSpeed	=	Util.getTempV(objectsList, 2);
						key = "tia_alarm_dict@110701@"+portSpeed;
						o_layer_rate	=	this.getDictValue(key,"tia_alarm_dict.0");
						o_locate_name	=	portSpeed;
					}
				}
			}else{
				o_layer_rate	=	"22";
				o_locate_name	=	"速率无关";
				log.info(o_fp0 + " can't map layer_rate:"+key);
			}
		}
		//board_type,20170801
		//alter by lgy@20181207  默认修改为-1000
		if(StringUtils.isNotBlank(o_board_type)){
			key = "tia_alarm_dict@1314@"+o_board_type;
			o_board_type	=	this.getDictValue(key,"tia_alarm_dict.0");
			if(StringUtils.isBlank(o_board_type)){
				o_board_type = "-1000";
			}
		}else{
			o_board_type = "-1000";
		}

		//o_alarm_resource_status,o_alarm_ne_status--网元名包含工程
		//if(StringUtils.isNotBlank(o_ne_label)&&o_eqp_object_class!="2011"&&(o_ne_label.contains("工程")||o_ne_label.contains("调测")||o_ne_label.contains("停闭")||o_ne_label.contains("施工"))){
		//lgy@20190116,调整关键字标工规则，required by wangyingfeng
		if(o_eqp_object_class=="2009"&&StringUtils.isNotBlank(o_ne_label)&&StringUtils.isNotBlank(o_eqp_label)){
			String tmp=o_ne_label.replace(o_eqp_label,"");
			log.info(o_fp0+"  ne_label=["+o_ne_label+"],eqp_label=["+o_eqp_label+"],告警定位对象名称-网元名称=["+tmp+"]");
			if(tmp.contains("工程")||tmp.contains("调测")||tmp.contains("停闭")||tmp.contains("施工")){
				o_alarm_resource_status = "25";
				o_alarm_ne_status = o_alarm_resource_status;
				i_alarm_ne_status   =  o_alarm_ne_status;
			}else{
				o_alarm_resource_status = "1";
				o_alarm_ne_status = o_alarm_resource_status;
			}
		}
		//corr_str
		if(StringUtils.isNotBlank(roomId)){
			//根据roomid -- machine_room.related_building
			//related_building--building.city_name
			key	=	joinKey("machinery_room", roomId);
			objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,"machinery_room");
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_special_field22	=	Util.getTempV(objectsList, 1);//功能合并---阿尔卡特告警网元归属站点信息获取 added by sunyuqiu@20140520
				String buildingId	=	Util.getTempV(objectsList, 5);

				if(StringUtils.isNotBlank(buildingId)){
					key	=	joinKey("building", buildingId);
					objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,"building");
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						o_corr_str	=	Util.getTempV(objectsList, 4);
						o_special_field7	=	Util.getTempV(objectsList, 1);
						o_special_field6  = o_corr_str;
						o_special_field19 = Util.getTempV(objectsList, 1);// add by lgy@20180521 required by wangyingfeng CMCC-GD-DRITXQ-20180112-008
						if(o_eqp_object_class=="2011"){
							o_site_type	=	Util.getTempV(objectsList,5);	// liucaiyong@20190513 by wangyinfeng CMCC-GD-DRITXQ-20181130-018
						}
						log.info(o_fp0+"   corr_str:"+o_corr_str);
					}
				}
			}
		}


		o_special_field9	=	"";
		String tmp	=	"";
		//1.所属子网
		key = "topo_trans_subnet:"+o_eqp_label;
		task = "topo_trans_subnet";
		objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,task);
		objectsList = objects == null ? null : Arrays.asList(objects);
		if(objectsList != null && !objectsList.isEmpty()) {
			tmp	=	Util.getTempV(objectsList, 1);
			//tmp	=	StringUtils.isBlank(tmp)	?	""	:	"所属子网="	+	tmp	+	";";
			//o_special_field11       =       tmp;
			tmp	=	StringUtils.isBlank(tmp)	?	""	:	"所属子网="	+	tmp;
			o_special_field11       =       tmp;
			tmp = StringUtils.isBlank(tmp)	?	""	:	tmp + ";";

			if(tmp.indexOf(',')>0){
				tmp = tmp.substring(0,tmp.indexOf(','))+";";
			}
			//对端网元的网络类型信息,by shanchunlan@20150413
			o_special_field9 += tmp;
			//log.info(o_fp0+" subnet:["+o_special_field11+"] sp9:"+o_special_field9);
			log.debug("topo_trans_subnet, fp0={}, special_field9={}, special_field11={}", o_fp0, o_special_field9, o_special_field11);
		}
		//2.对端网元=,对端端口名=,对端板卡名=
		tmp	=	"";
		if(o_object_class == "706"){
			key = "port_z_relation:"+o_int_id;
			task = "port_z_relation";
			//objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,task);
			//redis缓存外挂
			// objects = (Object[]) rutil.getObject(key);
			objects = (Object[]) util.getObject(CUSTOMCACHE, key, task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				tmp	=	Util.getTempV(objectsList, 1);
				tmp =	StringUtils.isBlank(tmp)	?	""	:	"对端网元="	+	tmp	+	";";
				o_special_field9	+=	tmp;

				tmp	=	Util.getTempV(objectsList, 2);
				o_special_field9	+=	StringUtils.isBlank(tmp)	?	""	:	"对端端口名="	+	tmp	+	";";

				//对端网元的网络类型信息,by shanchunlan@20150413
				tmp	=	Util.getTempV(objectsList, 5);

				String boardFdn	=	Util.getTempV(objectsList, 3);

				// key =	"objects_trans:"+tmp;
				key =	"objects_trans_fdn_id:"+tmp;
				// task	=	"objects_trans";
				task	=	"objects_trans_fdn_id";
				objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,task);
				objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					tmp	=	Util.getTempV(objectsList, 1);
					tmp	=	getNetWorkType(tmp,1);
					if(StringUtils.isNotBlank(tmp)){
						o_special_field15	=	"对端网络类型="+tmp+";";
					}
				}

				if(StringUtils.isNotBlank(boardFdn)){
					//对端板卡名=
					key = "board:"+boardFdn;
					task = "board";
					objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,task);
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						tmp	=	Util.getTempV(objectsList, 1);
						o_special_field9	+=	StringUtils.isBlank(tmp)	?	""	:	"对端板卡名="	+	tmp	+	";";
					}
				}
			}
		}

		//3.单板告警关联集客，boardMap包含单板类型
		setBoardCircuit();

		//地市
		if(StringUtils.isBlank(o_city_id)){
			if(StringUtils.isNotBlank(o_region_id)){
				//优先region
				//String rkey		=	"region_city_local:region_id:"+o_region_id;
				String rName	=	getRegion(o_region_id);
				if(StringUtils.isNotBlank(rName)){
					o_region_name	=	rName;
				}
			}
			o_city_name = o_region_name;
		}

		//其他逻辑
		//new change 将o_probable_cause置空调整到SubProbableCause
		//o_probable_cause = "";//统一采集传的是字符串
		o_nms_alarm_id	=	o_omc_alarm_id;
		o_omc_alarm_id	=	"";
		o_extra_string1	=	o_ems_id;
		o_alarm_content   = o_ne_label ;

		if(o_org_type=="2" && o_professional_type == "3" && o_eqp_object_class == "2009"){
			o_severity_keycode  =  StringUtils.isNotBlank(o_severity_keycode) ? o_severity_keycode : "41";
			//o_severity_keycode = i_network_type;
		}else if(StringUtils.isNotBlank(o_severity_keycode)){
			//o_severity_keycode-->tai_zhzy_text2num_dict.txt-->tia_alarm_dict.id
			o_severity_keycode	=	getNetWorkType(o_severity_keycode,0);
		}else{
			o_severity_keycode	=	"0";
		}
		//i_network_type	=	o_severity_keycode;

		//o_extra_id3,layer_rate-->tia_alarm_dict(110701).txt-->tia_alarm_dict(101015).id
		key 	= this.joinKey("tia_alarm_dict",o_layer_rate,"110701");
		task 	= "tia_alarm_dict.2";
		objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,task);
		objectsList = objects == null ? null : Arrays.asList(objects);
		if(objectsList != null && !objectsList.isEmpty()) {
			o_locate_info	=	Util.getTempV(objectsList, 2);
			key	= "tia_alarm_dict@101015@"+o_locate_info;
			o_extra_id3	=	this.getDictValue(key,"tia_alarm_dict.0");
		}
		//nms_name->alarm_source
		if(o_nms_name == "统一采集"){
			tmp = o_alarm_source;
			o_alarm_source = o_nms_name;
			o_nms_name = tmp;
		}

		//杰鑫 ,252->16
		if(o_vendor_id == "252"){
			o_vendor_id = "16";
		}
	}

	public void idn4LTE(){
		//if(StringUtils.isBlank(o_idn))
		// 	return;

		if(o_professional_type == "3")
			return;

		//中兴omc_alarm_id超长,update by liucaiyong@20180115
		o_nms_alarm_id	=	o_omc_alarm_id;
		o_omc_alarm_id	=	"";
	}

	public void idn4Ctp(){
		if(o_professional_type != "3")
			return;
		 if(o_object_class != "150110")
			return;
			if(!(o_eqp_object_class in ["2001","2034","2008"]))
			return;
	  log.info(o_fp0+" ctp_idn:["+ o_idn +"]");
		def matcher;
		def var1,var2;

		// if(o_eqp_object_class in ["2034","2008","2001"]){
		if(o_eqp_object_class in ["2034","2008"]){
			// if("8" == o_vendor_id){
			// if(o_vendor_id == "8" || (o_vendor_id == "7" && (o_nms_name != "GD-L-U31-7-P" || o_nms_name != "GD-L-U31-8-P"))){
			if(o_vendor_id == "8" || (o_vendor_id == "7" && !(o_nms_name in ["GD-L-U31-7-P", "GD-L-U31-8-P"]))){
					//华为SOCKET接口  “告警定位对象”=“网元名称neName”+“locationInfo”
					// 中兴SOCKET接口的CTP解析逻辑参照华为SOCKET接口（排除GD-L-U31-7-P、GD-L-U31-8-P）
					matcher = o_alarm_text =~ /\"neName\":\"([^\"]*)\"\,.*\"locationInfo\":\"([^\"]*)\"\,/;
					if(matcher.size()>0)
			  {
				  var1 = matcher[0][1];
				  var2 = matcher[0][2];
				  if(StringUtils.isNotBlank(var1)&&var1!="null"&&StringUtils.isNotBlank(var2)&&var2!="null"){
					  o_ne_label = var1 + ":" + var2;
				  }
			  }else{
				  //华为老接口  “告警定位对象”=“网元名称eqp_label”+“locationInfo”(:LocationInfo=0-subrack-46-U1N402-2(IN2/OUT2)-OCh:1-ODU4:1-ODU0:2:DeviceIP=)
				  matcher = o_alarm_text =~ /:LocationInfo=(.*):DeviceIP=/;
				  if(matcher.size()>0)
				  {
					  var1 = matcher[0][1];
					   if(StringUtils.isNotBlank(var1)){
						   o_ne_label = o_eqp_label + ":" + var1;
					   }
				  }
			  }
				// }else if("7" == o_vendor_id || ("202" == o_vendor_id && o_alarm_text.contains("ALARM-START"))){
				}else if((o_vendor_id == "7" && o_nms_name in ["GD-L-U31-7-P", "GD-L-U31-8-P"]) || ("202" == o_vendor_id && o_alarm_text.contains("ALARM-START"))){
					//中兴CORBA接口 烽火CORBA接口
					//根据CTP=前的内容解析出端口名称（蓝色字体部分），通过CTP=后的内容解析出具体时隙（红色字体部分）
					//EMS=GD-L-U31-8-P:ManagedElement=9754-虎门1-虎门M721环:PTP=/rack=1/shelf=1/slot=11/port=453_2:CTP=/10ge=1
					// 中兴CORBA接口：GD-L-U31-7-P、GD-L-U31-8-P
					matcher = o_idn =~ /(EMS.*):CTP=\/(.*)/;
					if(matcher.size()>0)
			  {
				  var1 = matcher[0][1];
				  var2 = matcher[0][2];

				  var1 = portNo(var1);
				  if(StringUtils.isNotBlank(var1) && StringUtils.isNotBlank(var2)){
					  var2 = var2.replaceAll(/\\//,"-");
					  var2 = var2.replaceFirst(/.*([r|m]s)(\d+)=(\d+)/,{
							  it[1].toUpperCase() + (it[2] == "1"?"":it[2]) + ":" + it[3];
						  });
						  var2 = var2.replaceAll(/([^=]+)=(\d+)/,{
							  it[1].toUpperCase() + ":" + it[2];
						  });
						  var2 = var2.replaceAll("ODU2E","ODU2e");
					  o_ne_label =  var1 + ":" + var2;
				  }
			  }
				}else if("202" == o_vendor_id){
					//烽火OTN socket:告警定位对象=网元名称-rack号-shelf号-slot号_板卡类型.port编号-CTP编号
					//其中rack号，shelf号，slot号，板卡类型，port编号，CTP编号，均从告警正文的locationInfo截取，port为1位时需在前面补0，CTP需大小写及冒号的转换
					matcher = o_alarm_text =~ /rack=(\d+)\/shelf=(\d+)\/slot=(\d+)\/port=(\d+)/;
					if(matcher.size()>0)
			  {
				  var1 = matcher[0][1] + "-" + matcher[0][2] + "-" + matcher[0][3];
				  var2 = matcher[0][4];
				  if(var2.length() == 1){
					  var2 = "0" + var2;
				  }
				  //matcher = o_alarm_text =~ /\"neName\"\s*:\s*\"([^\"]*)\"\,\S*\"holderType\"\s*:\s*\"(\w+)\"\,/;
				  //matcher = o_alarm_text =~ /\"holderType\"\s*:\s*\"(\w+)\"\,/;
				  matcher = o_alarm_text =~ /\"neName\"\s*:\s*\"([^\"]*)\"\,/;
				  if(matcher.size()>0){
					  //var1 = matcher[0][1] + "-" + var1 + "_" + matcher[0][2] + "." + var2;
					  var1 = matcher[0][1] + "-" + var1 + "_" + o_board_type + "." + var2;
					  //var1 = o_eqp_label + "-" + var1 + "_" + matcher[0][1] + "." + var2;
					  matcher = o_alarm_text =~ /NAME=\'CTP\',VALUE=\'([^\']*)\'/;
					  if(matcher.size()>0){
						  var2 = matcher[0][1];
						  if(StringUtils.isNotBlank(var2)){
						  var2 = var2.replaceAll(/\\//,"-");
						  var2 = var2.replaceFirst(/.*([r|m]s)(\d+)=(\d+)/,{
								  it[1].toUpperCase() + (it[2] == "1"?"":it[2]) + ":" + it[3];
							  });
							  var2 = var2.replaceAll(/([^=]+)=(\d+)/,{
								  it[1].toUpperCase() + ":" + it[2];
							  });
							  var2 = var2.replaceAll("ODU2E","ODU2e");
						  o_ne_label = var1 + var2;
					  }
					  }
				  }
			  }else{
				  //烽火OTN socket报文 新格式:如果未适配到“ctp”信息，则取值“locationInfo”
				  //	"locationInfo" : "2306桂江（电层框）:CCU[1-01]:防雷单元:106",
				  matcher = o_alarm_text =~ /\"locationInfo\"\s*:\s*\"([^\"]*)\"\,/;
				  if(matcher.size()>0){
							  o_ne_label = matcher[0][1];
				  }
			  }
				}
		}else if(o_eqp_object_class == "2001"){
				matcher = o_idn =~ /(EMS=.*):CTP=\/(.*)/;
			  if(matcher.size()>0)
			  {
				  var1 = matcher[0][1];
				  var2 = matcher[0][2];
				  var1 = portNo(var1);
				  if(StringUtils.isNotBlank(var1)){
					  //厂家=中兴、上海贝尔，或EMS名称为“GD-U2000-5-P”时，正序
					  boolean ord = true;
						  //厂家=华为，且EMS名称不为“GD-U2000-5-P”时，倒序
						  if(o_vendor_id == "8" && o_ems_id != "GD-U2000-5-P"){
							  ord = false;
						  }
						  def ctp_no;
						  ctp_no = var2.replaceFirst(/.*([r|m]s)(\d+)=(\d+)/,{
							  it[1].toUpperCase() + (it[2] == "1"?"":it[2]) + ":" + it[3];
						  });

						  ctp_no = ctp_no.replaceFirst(/sts3c_au4[\-a-z]*=(\d+)/,'155M$1');
						  ctp_no = ctp_no.replaceFirst(/vt2_tu12-k=(\d+)-l=(\d+)-m=(\d+)/,{
							  "2M" + (ord ? klm(it[1]  as int,it[2]  as int,it[3]  as int) :klm(it[3]  as int,it[2]  as int,it[1]  as int) )
						  });
						  ctp_no = ctp_no.replaceFirst(/sts3c_au3[\-a-z]*=(\d+)/,'45M$1');
						  ctp_no = ctp_no.replaceFirst(/vt2_tu12[\-a-z]*=(\d+)/,'2M$1');

						  if(ctp_no.contains("MS")||ctp_no.contains("MS")){
							  o_ne_label = var1 + "-" + ctp_no;
						  }else
							  o_ne_label = var1 + "/" + ctp_no;
				  }
			  }
		}
		log.info(o_fp0+" ctp:["+ o_ne_label +"]");
	}
	private String portNo(String idn){
	  //Object[] objects = (Object[]) util.getObject(PORTCACHE, "port:"+jcrc.getCRC32(idn),"port");
	  //redis缓存外挂
	  // Object[] objects = (Object[]) rutil.getObject("ptp:"+idn);
	  Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "ptp:"+idn, "ptp");
	  List objectsList = objects == null ? null : Arrays.asList(objects);
	  if(objectsList != null && !objectsList.isEmpty()) {
		  return	Util.getTempV(objectsList, 1);
	  }
			return null;
		}
	private String klm(def k,def l,def m){
	  return 3*7*(k-1) + 3*(l-1) + m;
	}

	public void idn4NFV(){
		if(o_network_type_top=="20" && o_eqp_object_class == "1617"){
			Object[] objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, joinKey("objects_it_rel",o_int_id),"nrmdb.objects_it_rel");
				List objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
			  o_int_id	=	Util.getTempV(objectsList, 1);
			  o_eqp_int_id = o_int_id;

			  log.info(o_fp0+" nfv,change-1617-id:["+ o_fm_int_id +"]-["+ o_int_id +"]");
		  }
			/**
				1. select r.related_int_id eqp_int_id
						from nrmdb.objects_it_relation r
						where r.int_id = 告警int_id
						and r.object_class=1616
						and r.related_object_class=1617

						2.related_int_id 赋给 int_id ,eqp_int_id

						3.样例681669488	3402424781	2357617569	752300998
						**/
		}
		if(o_network_type_top=="20"){
			o_int_id = o_eqp_int_id;
		}
	}

	private void SetNFValarm(){
		String tkey="";
		String task="";
		Object[] objects;
		List objectsList;

		//CMCC-GD-DRITXQ-20200323-009-大区云VNF与I层告警关联综资 wangyingfeng, add by liucaiyong@20200429
		if(o_network_type_top=="20"){
			  tkey = joinKey("objects_it",o_eqp_int_id);
			task = "objects_it";
			objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_site_no	=	Util.getTempV(objectsList, 1);
				o_ne_status	=	Util.getTempV(objectsList, 2);
				o_resource_status	=	Util.getTempV(objectsList, 2);
				o_region_id=	Util.getTempV(objectsList, 3);
				o_city_id=	Util.getTempV(objectsList, 4);
				// CMCC-GD-DRITXQ-20210311-002：关于实现NFV同个设备类型告警派单到不同科室的需求
				o_object_level = Util.getTempV(objectsList, 5); // ne_cat
				log.info(o_fp0+" get [vnf-objects-it] room:"+o_site_no+";ne_status:"+o_ne_status+";city_id:"+o_city_id+";object_level:"+o_object_level);
				// 解决统一采集推送的region_name为广州时，(StringUtils.isBlank(o_region_name)无法匹配资源问题
				this.addRegionInfo(o_city_id,o_city_name);
			}
		}

		//host、server
		if(o_network_type_top=="20" && o_eqp_object_class == "1617"){
			//tkey = "objects_it:"+o_eqp_int_id+":1616";
			tkey = "objects_it:"+o_eqp_int_id+":1617";
			task = "nrmdb.objects_it";
			objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				//o_omc_id	=	Util.getTempV(objectsList, 2);
				o_resource_status = Util.getTempV(objectsList, 6);
				o_ne_status = Util.getTempV(objectsList, 6);
				o_city_id = Util.getTempV(objectsList, 8);
				if(StringUtils.isNotBlank(o_omc_id)){
					tkey = "objects_it:"+o_omc_id+":1614";
					objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						o_ems_id	=	Util.getTempV(objectsList, 5);
					}
				}
			}
			else{
				tkey = "objects_it:"+o_eqp_int_id+":1521";
				objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
				objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					//o_omc_id	=	Util.getTempV(objectsList, 2);
					o_ParentIntId	=	Util.getTempV(objectsList, 3);

					o_resource_status = Util.getTempV(objectsList, 6);
						o_ne_status = Util.getTempV(objectsList, 6);
						o_city_id = Util.getTempV(objectsList, 8);
					if(StringUtils.isNotBlank(o_omc_id)){
						tkey = "objects_it:"+o_omc_id+":1614";
						objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
						objectsList = objects == null ? null : Arrays.asList(objects);
						if(objectsList != null && !objectsList.isEmpty()) {
							o_ems_id	=	Util.getTempV(objectsList, 5);
						}
					}
				}
			}
		}
		//diskArray、firewall、switch
		if(o_network_type_top=="20" && o_eqp_object_class in ["1620","901","905"]){
			if(o_eqp_object_class=="1620"){
				tkey = "objects_it:"+o_eqp_int_id+":"+o_eqp_object_class;
				task = "nrmdb.objects_it";
				objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
				objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					//o_omc_id	=	Util.getTempV(objectsList, 2);
					o_resource_status = Util.getTempV(objectsList, 6);
						o_ne_status = Util.getTempV(objectsList, 6);
						o_city_id = Util.getTempV(objectsList, 8);
					if(StringUtils.isNotBlank(o_omc_id)){
						tkey = "objects_it:"+o_omc_id+":1614";
						objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
						objectsList = objects == null ? null : Arrays.asList(objects);
						if(objectsList != null && !objectsList.isEmpty()) {
							o_ems_id	=	Util.getTempV(objectsList, 5);
						}
					}
				}
			}else{
				tkey = "objects:"+o_eqp_int_id;
				task = "objects";
				objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, tkey,task);
				objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					//o_omc_id	=	Util.getTempV(objectsList, 25);

					if(StringUtils.isNotBlank(o_omc_id)){
						tkey = "objects_it:"+o_omc_id+":1614";
						task = "nrmdb.objects_it";
						objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
						objectsList = objects == null ? null : Arrays.asList(objects);
						if(objectsList != null && !objectsList.isEmpty()) {
							o_ems_id	=	Util.getTempV(objectsList, 5);
						}
					}
				}
			}
		}
		//vm
		if(o_network_type_top=="20" && o_eqp_object_class=="508"){
			tkey = "objects_it:"+o_eqp_int_id+":"+o_eqp_object_class;
			task = "nrmdb.objects_it";
			objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				//o_omc_id	=	Util.getTempV(objectsList, 2);
				o_ParentIntId	=	Util.getTempV(objectsList, 3);
				o_business_system_id = Util.getTempV(objectsList, 4);

				o_resource_status = Util.getTempV(objectsList, 6);
				o_ne_status = Util.getTempV(objectsList, 6);
				o_city_id = Util.getTempV(objectsList, 8);
								o_rlocate_ne_type = Util.getTempV(objectsList, 9);

								log.info(o_fp0+" vnf-rltype["+o_rlocate_ne_type+"]");

				if(StringUtils.isNotBlank(o_omc_id)){
					tkey = "objects_it:"+o_omc_id+":1614";
					objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						o_ems_id	=	Util.getTempV(objectsList, 5);
					}
				}
				if(StringUtils.isNotBlank(o_business_system_id)){
					tkey = "objects_it:"+o_business_system_id+":20";
					objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						o_business_system	=	Util.getTempV(objectsList, 5);
					}
				}
			}
		}
		//vdisk、vnic
		if(o_network_type_top=="20" && o_object_class in ["1515","1516"]){
			o_eqp_object_class="508";
			tkey = "objects_it:"+o_int_id+":"+o_object_class;
			task = "nrmdb.objects_it";
			objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_eqp_int_id	=	Util.getTempV(objectsList, 3);
				if(StringUtils.isNotBlank(o_eqp_int_id)){
					tkey = "objects_it:"+o_eqp_int_id+":508";
					objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						o_eqp_label		=	Util.getTempV(objectsList, 5);
						//o_omc_id	=	Util.getTempV(objectsList, 2);
						if(StringUtils.isNotBlank(o_omc_id)){
							tkey = "objects_it:"+o_omc_id+":1614";
							objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
							objectsList = objects == null ? null : Arrays.asList(objects);
							if(objectsList != null && !objectsList.isEmpty()) {
								o_ems_id	=	Util.getTempV(objectsList, 5);
							}
						}
					}
				}
			}
		}
		//vCSCF、vTAS、mme、sgw
		if(o_network_type_top=="20" && o_object_class in ["6111","6148","8101","8102"]){
			tkey = "objects:"+o_int_id;
			task = "objects";
			objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, tkey,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			//vCSCF、vTAS
			if(objectsList != null && !objectsList.isEmpty()&& o_object_class in ["6111","6148"]) {
				//o_omc_id	=	Util.getTempV(objectsList, 25);
				o_business_system_id	=	Util.getTempV(objectsList, 26);
				if(StringUtils.isNotBlank(o_omc_id)){
					tkey = "objects:"+o_omc_id;
					objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, tkey,task);
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						o_ems_id	=	Util.getTempV(objectsList, 6);
					}
				}
				if(StringUtils.isNotBlank(o_business_system_id)){
					tkey = "objects_it:"+o_business_system_id+":20";
					task = "nrmdb.objects_it";
					objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						o_business_system	=	Util.getTempV(objectsList, 5);
					}
				}
			}
			//mme、sgw
			else if (objectsList != null && !objectsList.isEmpty()&& o_object_class in ["8101","8102"]){
				o_business_system_id	=	Util.getTempV(objectsList, 26);
				if(StringUtils.isNotBlank(o_business_system_id)){
					tkey = "objects_it_vnf:"+o_business_system_id+":508";
					task = "nrmdb.objects_it_vnf";
					objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						//o_omc_id	=	Util.getTempV(objectsList, 2);
						if(StringUtils.isNotBlank(o_omc_id)) {
							tkey = "objects_it:"+o_omc_id+":1614";
							task = "nrmdb.objects_it";
							objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
							objectsList = objects == null ? null : Arrays.asList(objects);
							if(objectsList != null && !objectsList.isEmpty()) {
								o_ems_id	=	Util.getTempV(objectsList, 5);
							}
						}
					}
					tkey = "objects_it:"+o_business_system_id+":20";
					task = "nrmdb.objects_it";
					objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						o_business_system	=	Util.getTempV(objectsList, 5);
					}
				}
			}
			log.info(o_fp0+"  [mme、sgw] omc_id="+o_omc_id+",ems_id="+o_ems_id+",business_system_id="+o_business_system_id+",business_system="+o_business_system);
		}
		//CMCC-GD-DRITXQ-20190308-018   需求名称：请亿阳开发NFV告警关联规则（华为告警关联）required by wangyingfeng ,add by liucaiyong@20190516
		if(o_network_type == "2001" && o_eqp_object_class == "111" && o_vendor_id == "8"){
			//o_vm_ids = 1,0,2 -- 1,2     --> o_pr_ids
			if(StringUtils.isNotBlank(o_vm_ids)&& !"0,0,0".equals(o_vm_ids)){
			String[] vm_ids = o_vm_ids.split(",");
			task = "nrmdb.objects_it";
			String pr_id;
			for(String vm_id:vm_ids)
			{
				if(StringUtils.isBlank(vm_id)||"0".equals(vm_id)||"null".equals(vm_id.toLowerCase())){
					continue;
			  }
			  objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, joinKey("objects_it",vm_id,"508"),task);
			  objectsList = objects == null ? null : Arrays.asList(objects);
			  if(objectsList != null && !objectsList.isEmpty()) {
				  pr_id	=	Util.getTempV(objectsList, 3);
				  if(StringUtils.isNotBlank(pr_id)){
					  o_pr_ids = appendStr(o_pr_ids, pr_id);
					}
					   }
			}
			log.info(o_fp0+"  nfv-vm_ids["+o_vm_ids+"]-pr_ids["+o_pr_ids+"]");
			}
		}

		// CMCC-GD-DRITXQ-20190613-005 - 关于告警过滤器中“机房名称”字段完善的需求
		if(StringUtils.isBlank(o_special_field22) && o_network_type_top=="20" && o_eqp_object_class in ["1617","508","1614","1615","1620"]){
				tkey = joinKey("objects_it",o_eqp_int_id);
			task = "objects_it";
			objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_site_no	=	Util.getTempV(objectsList, 1);
				//log.info(o_fp0+" get site_no:"+o_site_no+",special_field22:"+o_special_field22);
			}
		}else if(StringUtils.isBlank(o_special_field22) && o_network_type_top=="20" && o_eqp_object_class in ["8101","8102","111","901","905"]){
				tkey = joinKey("objects",o_eqp_int_id);
			task = "objects";
			objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, tkey,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_site_no	=	Util.getTempV(objectsList, 20);
				//log.info(o_fp0+" get site_no:"+o_site_no+",special_field22:"+o_special_field22);
			}
		}else if(StringUtils.isBlank(o_special_field22) && o_network_type_top in ["2","3","7","8","9"]){
			tkey = joinKey("objects",o_eqp_int_id);
			task = "objects";
			objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, tkey,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_site_no	=	Util.getTempV(objectsList, 20);
				//log.info(o_fp0+" get site_no:"+o_site_no+",special_field22:"+o_special_field22);
			}
		   }

		//log.info(o_fp0+" get 1site_no:"+o_site_no+",special_field22:"+o_special_field22);
		if(StringUtils.isNotBlank(o_site_no)){
			log.info(o_fp0+" get 2site_no:"+o_site_no+",special_field22:"+o_special_field22);
				tkey = joinKey("machinery_room",o_site_no);
			task = "machinery_room";
			objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_special_field22	=	Util.getTempV(objectsList, 1);
				log.info(o_fp0+" get site_no:"+o_site_no+",special_field22:"+o_special_field22);
			}
		}

				//NFV三个重要字段“网元状态”、“告警对象工程状态”、“地区名称”的填写  wangyingfeng  ,add by liucayong@20191023
		if(o_network_type_top=="20" && o_eqp_object_class in ["1614","1615"]){
				tkey = joinKey("objects_it",o_eqp_int_id);
			task = "objects_it";
			objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tkey,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_resource_status = Util.getTempV(objectsList, 2);
				o_ne_status = Util.getTempV(objectsList, 2);
				o_city_id = Util.getTempV(objectsList, 4);
			}
		}
		if(o_network_type_top=="20" && o_eqp_object_class in ["111","115","1600"]){
				tkey = joinKey("objects",o_eqp_int_id);
			task = "objects";
			objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, tkey,task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				o_resource_status = Util.getTempV(objectsList, 5);
				o_ne_status = Util.getTempV(objectsList, 5);
				o_city_id = Util.getTempV(objectsList, 8);
				this.addRegionInfo(o_city_id,o_city_name);
			}
		}
		   if(StringUtils.isBlank(o_region_name) && StringUtils.isNotBlank(o_city_id)){
				   this.addRegionInfo(o_city_id,o_city_name);
				   //o_region_name = getJikeRegionName("region_city_local:region_id:" + o_region_id,"jikeRegion");
		   }


	}
	private void SubProbableCause(){
			//liuciayong@20190929,放在 二次标准 化之后
			this.setJikeStandard();

		//lgy@20190104,传输nms_alarm_id存放到告警正文中，便于查找原始告警
		if(o_professional_type=="3"){
			o_alarm_text+="\n厂家原始告警唯一标识："+o_nms_alarm_id;
		}
		//new change 针对probable_cause做特殊处理,针对标准化验证  added by lgy@20181114
		//if(o_eqp_object_class!="8104"){
		//    o_nms_alarm_id=o_probable_cause;
		//    o_probable_cause="";
		//}
		o_probable_cause_txt = o_probable_cause + " " + o_probable_cause_txt;
		// o_probable_cause="";
		// probable_cause置空导致高铁rru无法统计，统一采集推送的数据是字符串，故障管理系统数据库是NUMBER(10)，会导致入库报错，通过正则表达式匹配是否为精度10位整数，不是则置空probable_cause
		def matcher = o_probable_cause =~ /^[-+]?\d{1,10}$/;
		if(matcher.size() == 0 && StringUtils.isNotBlank(o_probable_cause)){
		  log.info("probable_cause set blank, fp0={}, probable_cause={}", o_fp0, o_probable_cause);
		  o_probable_cause = "";
		}

		//关于集团要求八大区传输动环告警上报工作的分析，liucaiyong@191220
		if(o_professional_type=="3"){
			//o_eqp_label, o_eqp_alias
			if(StringUtils.isNotBlank(o_circuit_no) && o_circuit_no.contains("/八大区")){
					o_send_jt_flag = "1";
					o_eqp_alias = o_eqp_label + "（八大区）";
					o_ne_sub_type = "100";
				}
		}else if(o_professional_type=="4"){
				if(StringUtils.isNotBlank(o_eqp_label) && o_eqp_label.contains("八大区") && o_ne_status in ["1","3","7"]){
					o_send_jt_flag = "1";
					o_ne_sub_type = "101";
				}
		}

		//全专业告警，已标准化的才上报，其他不上报,liucaiyong@20190117
		if(o_redefine_severity != "1" ){
			if(o_standard_flag == "2" && o_send_jt_flag == "1"){
				o_send_jt_flag = "1";
			}else{
				o_send_jt_flag = "0";
			}
		}

		//临时上报,lcy@20190226
			//if(o_title_text in ["外部网元连接中断"]){
			//	o_send_jt_flag = "1";
			//}

			//集团检查调整:规避告警级别、告警标题 有空的可能 , liucaiyong@20190411
			if(StringUtils.isBlank(o_title_text) || StringUtils.isBlank(o_org_severity))
		{
			o_send_jt_flag = "0";
		}
		//集团检查调整:基站、小区告警要求改为仅上报现网有业务的告警, liucaiyong@20190411
		if(o_object_class in ["201","300","9201","9300","8104","8105","41011","270","3300","3201"] && o_send_jt_flag == "1"){
			if(o_ne_status != "1"){
				o_send_jt_flag = "0";
			}
		}
		//集团检查调整:对于RRU退服（sub_alarm_type=681）告警，当物理设备类型（ne_sub_type）为空，或 告警远端对象类型（rlocate_ne_type）为空时，修改为不上报集团。 liucaiyong@20190925
		//if(o_send_jt_flag == "1" && o_sub_alarm_type == "681" && (StringUtils.isBlank(o_ne_sub_type) || StringUtils.isBlank(o_rlocate_ne_type)))
		//{
		//    o_send_jt_flag = "0";
		//}
			//高铁RRU退服告警的上报不再使用过滤器条件，通过“上报集团标志”体现，序号S21修改为：对于RRU退服（sub_alarm_type=681）告警，当物理设备类型（ne_sub_type）为高铁相关，且 告警远端对象类型（rlocate_ne_type）为RRU时，才上报集团.liucaiiyong@2019118
			if(o_sub_alarm_type == "681"){
				if(o_ne_sub_type in ["20101","30001","810401","810501"] && o_rlocate_ne_type in ["711","8111"]){
					o_send_jt_flag = "1";
				}else{
					o_send_jt_flag = "0";
				}
			}
			//虚拟化性能告警暂不上报 yangxiaomin@20200309
			if(o_network_type_top == "20" && o_org_type == "2"){
				o_send_jt_flag = "0";
			}

	}

	//设置网络类型 recType，返回类型,0:枚举；1：文字
	private String getNetWorkType(String value,int recType)
	{
		if(StringUtils.isBlank(value)){
			return "";
		}
		String networkType="";
		String key = "tai_zhzy_dict:SERVICE_LEVEL:"+value;
		String task = "tai_zhzy_dict";
		Object[] objects = null;
		List objectsList = null;

		objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,task);
		objectsList = objects == null ? null : Arrays.asList(objects);
		if(objectsList != null && !objectsList.isEmpty()) {
			String tmp	=	Util.getTempV(objectsList, 2);
			log.info(o_fp0+" o_network_type-3:"+tmp);
			if(recType == 0){
				key = "tia_alarm_dict@1002@"+tmp;
				networkType	=	this.getDictValue(key,"tia_alarm_dict.0");
			}
			else{
				networkType	=	tmp;
			}
		}
		log.debug("getNetWorkType-fp0={}, networkType={}", o_fp0, networkType);
		return networkType;
	}

	private String getPortGxzyRelation()
	{
		String info="";
		if(o_object_class == "706"){
			String key="";
			String task="objects_trans";
			Object[] objects = null;
			List objectsList = null;
			task = "port_gxzy_relation";
			key = "port_gxzy_relation:"+o_int_id;
			//objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,task);
			//redis缓存外挂
			// objects = (Object[]) rutil.getObject(key);
			objects = (Object[]) util.getObject(CUSTOMCACHE, key, task);
			objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				int i = 0;
				String optStr="\n光路：";
				String cabStr="\n光缆段：\n";

				String Opt;
				String Cab;
				for (Object item : objectsList) {
					Object[] result = (Object[])item;
					if (result==null || result.length<4) {
						break;
					}
					List olist = Arrays.asList(result);
					String opt = Util.getTempV(olist, 1);
					String cab = Util.getTempV(olist, 2);
					String seg = Util.getTempV(olist, 3);

					if(StringUtils.isBlank(opt)){
						continue;
					}

					if(StringUtils.isBlank(Opt)||Opt!=opt){
						optStr += opt+"、";
					}
					if(StringUtils.isBlank(cab)){
						continue;
					}
					if(StringUtils.isBlank(Cab)){
						//第一次
						i++;
						cabStr	+= i+")"+cab;
						if(StringUtils.isNotBlank(seg)){
							cabStr	=	cabStr+"("+seg;
						}
					}else if(Cab != cab){
						//不同 光缆段
						cabStr	+=	")\r\n";
						i ++;
						cabStr	+=	i+")"+cab;
						if(StringUtils.isNotBlank(seg)){
							cabStr	=	cabStr+"("+seg;
						}
					}
					else{
						//相同 光缆段
						cabStr	+="、"+seg;
					}

					Opt = opt;
					Cab	= cab;
				}
				optStr = optStr.substring(0,optStr.length()-1);
				cabStr = cabStr+")";
				info+=optStr;
				info+=cabStr;
			}
		}
		return info;
	}

	//单板告警关联集客，单板关联端口(网元)，再关联电路，再关联集客
	private void setBoardCircuit(){
		if(o_object_class != "10011")
			return ;
		if(boardMap.size()<2){
			//title
			boardMap.put("BD_STATUS",1);
			boardMap.put("HARD_BAD",1);
			boardMap.put("Replaceable Unit Missing",1);
			boardMap.put("Replaceable Unit Problem",1);
			boardMap.put("Replace Unit Failure",1);
			boardMap.put("单板脱位",1);
			boardMap.put("单板运行不正常",1);
			boardMap.put("接口板工作不正常",1);
			boardMap.put("Board Out of Plac",1);
			//电源类告警
			boardMap.put("POWER_ABNORMAL",2);
			boardMap.put("单板电压 电源失效",2);
			boardMap.put("单板 电源故障",2);
			boardMap.put("单板电压 电源故障",2);
			boardMap.put("单板电压 电源掉电",2);
			//board_type
			boardMap.put("ES1",1);
			boardMap.put("ES4",1);
			boardMap.put("ES16",1);
			boardMap.put("FE",1);
			boardMap.put("SFE4",1);
			boardMap.put("SED",1);
			boardMap.put("SEC",1);
			boardMap.put("SEE",1);
			boardMap.put("EFT8",1);
			boardMap.put("EFS0",1);
			boardMap.put("EGS6",1);
			boardMap.put("EGT6",1);
			boardMap.put("EMS4",1);
			boardMap.put("EGS4",1);
			boardMap.put("EFS",1);
			boardMap.put("PD2S",1);
			boardMap.put("SP1D",1);
			boardMap.put("SP2D",1);
			boardMap.put("PL1S",1);
			boardMap.put("SP3S",1);
			boardMap.put("PQ1",1);
			boardMap.put("SQ1",1);
			boardMap.put("OI2D",1);
			boardMap.put("SL1D",1);
			boardMap.put("EF8F",1);
			boardMap.put("R16E1F",1);
			boardMap.put("R4CSB",1);
			boardMap.put("R4ASB",1);
			boardMap.put("EG8",1);
			boardMap.put("EG16",1);
			boardMap.put("ETFC",1);
			boardMap.put("MD1",1);
			boardMap.put("EFG2",1);
			boardMap.put("R4EGC",1);
			boardMap.put("R8EGE",1);
			boardMap.put("R8EGF",1);
			boardMap.put("CO1",1);
			boardMap.put("AD1",1);
			boardMap.put("ML1",1);
			//电源类告警
			boardMap.put("PW",2);
			boardMap.put("PWRA",2);
			boardMap.put("PIU",2);
		}

		o_special_field9	+=	o_extra_string1;

		String boardType = boardMap.get("board_type");
		//if(boardMap.containsKey(o_title_text) && boardMap.containsKey(boardType)){
		if(boardMap.get(o_title_text)==1 && boardMap.get(boardType)==1){
			//关联算法1： 单板->端口->电路 关联到集客
			String rbsql="select int_id from nrmdb.ptp where related_board_id = "+o_int_id;
			List objectsList =Util.queryBySql(rbsql);
			if(objectsList != null && !objectsList.isEmpty()) {
				String pId	=	Util.getTempV(objectsList, 0);
				if(StringUtils.isNotBlank(pId)){
					Circuit circuit = (Circuit) util.getObject(SimpleFindUtil.CIRCUIT_CACHE, new BigDecimal(pId));
					if(circuit!=null){
						//o_circuit_no=circuit.getCircuit_no()==null?o_circuit_no:circuit.getCircuit_no();
						//o_circuit_id=circuit.getCircuit_id()==null?o_circuit_id:circuit.getCircuit_id();
						o_circuit_no=appendStr(o_circuit_no,circuit.getCircuit_no());
						o_circuit_id=appendStr(o_circuit_id,circuit.getCircuit_id());
						log.info(o_fp0+" set-board["+o_int_id+"]-port["+pId+"]-circuit["+o_circuit_id+"]");
					}
				}
			}
		}
		else if(boardMap.get(o_title_text)==2 && boardMap.get(boardType)==2 && o_eqp_object_class == "2009"){
			//关联算法2：PTN电源类单板，如果根据 [单板->端口->电路] 没有关联到集客，则需要根据 [单板->网元->电路] 关联集客,required by sunyuqiu@20160301
			String rbsql="select related_equip_id from nrmdb.board_config where int_id="+o_int_id;
			List objectsList =Util.queryBySql(rbsql);
			if(objectsList != null && !objectsList.isEmpty()) {
				String neId	=	Util.getTempV(objectsList, 0);
				if(StringUtils.isNotBlank(neId)){
					Circuit circuit = (Circuit) util.getObject(SimpleFindUtil.CIRCUIT_CACHE, new BigDecimal(neId));
					if(circuit!=null){
						//o_circuit_no=circuit.getCircuit_no()==null?o_circuit_no:circuit.getCircuit_no();
						//o_circuit_id=circuit.getCircuit_id()==null?o_circuit_id:circuit.getCircuit_id();
						o_circuit_no=appendStr(o_circuit_no,circuit.getCircuit_no());
						o_circuit_id=appendStr(o_circuit_id,circuit.getCircuit_id());
						log.info(o_fp0+" set-board["+o_int_id+"]-ne["+neId+"]-circuit["+o_circuit_id+"]");
					}
				}
			}
		}
		boardMap.remove("board_type");
		o_extra_string1="";
	}


	private void alarmtext4Chuanshu(){
		if(o_professional_type != "3"||StringUtils.isBlank(o_idn))
			return;

		//5+2
		if(StringUtils.isNotBlank(o_idn)){
			o_alarm_text	+=	"\n传输电路编号="	+	StringUtils.isBlank(o_circuit_no)?"":o_circuit_no;
			//o_alarm_text	+=	"\n告警正文="+o_extra_string3;//实际为花名册KEY值

			o_extra_string3	=	"";
		}

		//other
		if(o_standard_flag	==	"2"){
			if(o_severity_keycode == "41"){
				o_province_process_flag	=	"1";
				o_department_process_flag	=	"1";
				o_preprocess_manner	=	"1";
			}
			else{
				o_province_process_flag	=	"2";
				o_department_process_flag	=	"3";
			}

			//杰鑫“设备通信不正常”告警标准名不一致
			if(o_vendor_id == "16" && o_standard_alarm_name == "EDFA通信不正常"){
				o_standard_alarm_name = "设备通信不正常";
			}
		}

		//GPON集客增加光路信息
		String asstype="";
		String optinfo="";//光路信息
		if(StringUtils.isNotBlank(o_gcss_service)&&( o_object_class=="2012" || o_object_class=="2011")){
			int iopt=0;//光路统计
			String[] services = o_gcss_service.split(",");
			for(int i = 0; i < services.length; i++) {
				String serviceid=services[i];
				String relkey = this.joinKey("service", serviceid);
				Object[] relation = util.getObject(CUSTOMCACHE, relkey,"nrmdb.service");
				List relList = relation==null?null:Arrays.asList(relation);
				if(relList!=null&&!relList.isEmpty()){
					String tmp=Util.getTempV(relList,4);
					if(StringUtils.isNotBlank(tmp)){
						optinfo="光路名称="+tmp;
						iopt++;
					}
					tmp=Util.getTempV(relList,5);
					if(StringUtils.isNotBlank(tmp)){
						asstype=tmp;
					}
				}
			}
			if(services.length>0){
				if(StringUtils.isNotBlank(asstype)){
					o_attachment = asstype;
				}
				optinfo+="\n总共"+services.length+"条专线,关联光路"+iopt+"条";
			}
			else{
				optinfo="未关联到专线";
			}
			if(StringUtils.isNotBlank(optinfo))
				o_alarm_text+="\n"+optinfo;
			//log.debug(o_fp0+" gpon"+o_gcss_service+" relate gcss_service optinfo:"+optinfo+", asstype:"+asstype);
		}


		//5+2
		if(StringUtils.isNotBlank(o_idn)&&o_object_class	==	"706"){
			String portGxzy	=	getPortGxzyRelation();
			o_alarm_text	+=	StringUtils.isBlank(portGxzy)?"":"\n"+portGxzy;
		}

		//special_field9 追加到告警正文,update by liucaiyong ,required by luocheng @20140711
		if(StringUtils.isNotBlank(o_special_field9)){
			o_alarm_text+="\n"+o_special_field9;
		}

		//传输设备型号解析,added by liucaiyong ,required by sunyuqiu @20141020
		String modelKey="";
		String modelTask="";
		if(o_eqp_object_class == "2009") {
			modelKey = "transElementPtn:"+o_eqp_int_id;
			modelTask = "chuanshuInfoPTN";
		}
		else if(o_eqp_object_class == "2001") {
			modelKey = "transElementSdh:"+o_eqp_int_id;
			modelTask = "chuanshuInfomation";
		}
		else if(o_eqp_object_class in ["2008","2034"]) {
			modelKey = "transElementWdm:"+o_eqp_int_id;
			modelTask = "chuanshuInfomationOne";
		}
		else if(o_eqp_object_class == "2011") {
			modelKey = "olt:"+o_eqp_int_id;
			modelTask = "olt";
		}
		else if(o_eqp_object_class == "2013") {
			modelKey = "myOlp:"+o_eqp_int_id;
			modelTask = "chuanshuInfomationFive";
		}

		if(StringUtils.isNotBlank(modelKey)){
			Object[] modelObject = util.getObject(CUSTOMCACHE, modelKey,modelTask);
			List modelList = modelObject==null?null:Arrays.asList(modelObject);
			String model = "";
			if(modelList!=null&&!modelList.isEmpty()){
				model = Util.getTempV(modelList,3);
			}
			int pos = o_alarm_text.indexOf('网元名称');
			if(pos>0){
				pos = o_alarm_text.substring(pos).indexOf('\n')+pos;
				o_alarm_text = o_alarm_text.substring(0,pos) + "\n网元型号= "+ model + o_alarm_text.substring(pos);
			}
			else{
				o_alarm_text +="\n网元型号="+model;
			}
		}
	}

	private void idn4EPC(){
		if(o_object_class != "10011"|| !(o_vendor_id in ["1","7","8"]) || !(o_eqp_object_class in ["124","8101","8102","8106"])){
			return;
		}

		String bkey;
		String board="";
		String task = "board_location";
		if(o_vendor_id =="1"){
			//爱立信的，直接给出 board_type
			task = "tia_alarm_dict.0";
			bkey = "tia_alarm_dict@1314@" + o_board_type;
		}else if(o_vendor_id=="8" && o_eqp_object_class == "8102"){
			//华为sgw,xxx:1
			task = "board_location_hw";
			bkey = this.joinKey(task,o_ne_label);
		}else{
			bkey = this.joinKey(task,o_ne_label);
		}

		Object[] dict = util.getObject(this.CUSTOMCACHE, bkey,task)
		List olist = dict==null?null:Arrays.asList(dict);
		if(olist!=null&&!olist.isEmpty())
		{
			if(o_vendor_id =="1"){
				board = o_board_type;
			}else{
				board = Util.getTempV(olist, 5);
			}
			o_board_type = Util.getTempV(olist, 0);
			log.info(o_fp0+" epc board_type["+o_board_type+"] from ne_label["+o_ne_label+"]");
		}else{
			log.info(o_fp0+" epc board_type["+o_board_type+"] not found res ,set default[-1000]");
			o_board_type = "-1000";
		}

		if(StringUtils.isBlank(o_board_type)){
			o_board_type = "-1000";
		}

		//告警对象名，由 【网元名:架:框:槽】改成【网元名-板卡类型-架_框_槽】
		int pos = o_ne_label.indexOf(":");
		if(pos > 0)
			o_ne_label = o_ne_label.substring(0,pos) + "-" + board + "-" + o_ne_label.substring(pos+1).replace(":","_");
		//log.info(o_fp0+" epc board_type["+o_board_type+"] to ne_label["+o_ne_label+"]");

		//o_idn = o_ne_label;
		o_int_id = jcrc.getCRC32(o_ne_label);
		Object[] objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, "objects:"+o_eqp_int_id,"objects");
		olist= objects == null ? null : Arrays.asList(objects);
		if(olist!=null&&!olist.isEmpty())
		{
			o_city_id = Util.getTempV(olist, 8);
		}
	}

	private void setSDHcircuit(){
		// liucaiyong@20191009,SDH上增加WDM,OTN范围 by shanchunlan
		//if(o_eqp_object_class!="2001"){
		if(!(o_eqp_object_class in ["2001","2034","2008"])){
			return;
		}
		if(!(o_object_class in ["150110","706"])){
			return;
		}

		String task;
		if(o_object_class == "150110"){
			task = "ctp_to_circuit";
		}else if(o_object_class == "706"){
			task = "ptp_to_circuit";
		}else{
			return;
		}

		Object[] objects;
		List list;
		String tmp;
		//objects = util.getObject(CUSTOMCACHE, joinKey(task,o_int_id),task);
		//redis缓存外挂
	  // objects = (Object[]) rutil.getObject(joinKey(task,o_int_id));
	  objects = (Object[]) util.getObject(CUSTOMCACHE, joinKey(task,o_int_id), task);
	  list = objects==null?null:Arrays.asList(objects);
	  if(list!=null&&!list.isEmpty()){
		  tmp = Util.getTempV(list, 1);
		  if(StringUtils.isNotBlank(tmp)){
			  o_circuit_id  = appendStr(o_circuit_id,tmp);

			  objects = util.getObject(CUSTOMCACHE, "gd:jike:circuit:namefromid:" + tmp,"jikeCircuitTableFromId");
			list = objects==null?null:Arrays.asList(objects);
			if(list!=null&&!list.isEmpty())
			{
				tmp = Util.getTempV(list, 0);//cno
				o_circuit_no=appendStr(o_circuit_no,tmp);
			}
				log.info(o_fp0+"  set-sdh-circuit:"+o_circuit_id + ",circuit-no:"+ tmp +" by int_id:"+o_int_id);
		  }
	  }
	}

	/**
	 * 场景监控字段设置
	 * @param dest
	 */
	private void setScenecAlarm(){
		if((o_object_class.equals("2011")&&o_sub_alarm_type.equals("684"))
				||(o_object_class in ["201","300","8105","8104","41011","270"] && o_sub_alarm_type in ["68","973"])){
			log.debug("scence-{},退服场景SRS 符合,object_class={},sub_alarm_type={}",o_fp0,o_object_class,o_sub_alarm_type);

			o_alarm_reason = "0";
			o_scence_type = "0";
			o_site_poweroff = "0";

			String key = "scene_srs@10003@"+o_region_id;
			List list = (List)util.getObject(SimpleFindUtil.RESOURCE_CACHE,key,"scene_srs");
			Date now = new Date();
			int type = getSceneType(list,now);
			log.debug("scence-{},退服场景SRS 1,key={},list={},type={}",o_fp0,key,list==null?0:list.size(),type);
			if(type!=4){
				o_scence_type = String.valueOf(type);
				return ;
			}
			key = "scene_srs@10004@"+o_city_id;
			list = (List)util.getObject(SimpleFindUtil.RESOURCE_CACHE,key,"scene_srs");
			type = getSceneType(list,now);
			log.debug("scence-{},退服场景SRS 2,key={},list={},type={}",o_fp0,key,list==null?0:list.size(),type);
			if(type!=4){
				o_scence_type = String.valueOf(type);
				return ;
			}

			key = "scene_srs_ne@57@"+o_int_id;
			list = (List)util.getObject(SimpleFindUtil.RESOURCE_CACHE,key,"scene_srs_ne");
			type = getSceneType(list,now);
			log.debug("scence-{},退服场景SRS 3,key={},list={},type={}",o_fp0,key,list==null?0:list.size(),type);
			if(type!=4){
				o_scence_type = String.valueOf(type);
				return ;
			}

		}else{
			log.debug("scence-{},退服场景SRS 不符合,object_class={},sub_alarm_type={}",o_fp0,o_object_class,o_sub_alarm_type);
		}

		// CMCC-GD-DRITXQ-20201120-006：无线故障监控增加覆盖场景字段
		// 4G小区、5G小区资源接入覆盖场景、覆盖场景细化、二级覆盖场景及二级覆盖场景细化
		// 随机取基站下挂【覆盖场景】有值的小区的覆盖场景，若下挂小区覆盖场景均为空，则基站的覆盖场景也留空即可
		if (o_object_class in ["8104", "8105", "3201", "3300"] && StringUtils.isNotBlank(o_int_id)) {
		  // 覆盖场景
		  String cover_area = "";
		  // 覆盖场景细化
		  String cover_area_info = "";
		  // 二级覆盖场景
		  String cover_sec_area = "";
		  // 二级覆盖场景细化
		  String cover_sec_area_info = "";
		  // 告警正文额外新增信息
		  String extrainfo = "";
		  if (o_object_class == "8105") {
			// redis缓存外挂
			// Object[] objects = (Object[]) rutil.getObject("eutrancell:" + o_int_id);
			Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "eutrancell:" + o_int_id, "eutrancell");
			List objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				cover_area          = Util.getTempV(objectsList, 1);
				cover_area_info     = Util.getTempV(objectsList, 2);
				cover_sec_area      = Util.getTempV(objectsList, 3);
				cover_sec_area_info = Util.getTempV(objectsList, 4);
				}
		  } else if (o_object_class == "3300") {
			// redis缓存外挂
			// Object[] objects = (Object[]) rutil.getObject("nrcell:" + o_int_id);
			Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "nrcell:" + o_int_id, "nrcell");
			List objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				cover_area          = Util.getTempV(objectsList, 1);
				cover_area_info     = Util.getTempV(objectsList, 2);
				cover_sec_area      = Util.getTempV(objectsList, 3);
				cover_sec_area_info = Util.getTempV(objectsList, 4);
				}
		  } else if (o_object_class == "8104") {
			// redis缓存外挂
			// Object[] objects = (Object[]) rutil.getObject("enodeb:" + o_int_id);
			Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "enodeb:" + o_int_id, "enodeb");
			List objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				cover_area          = Util.getTempV(objectsList, 1);
				cover_area_info     = Util.getTempV(objectsList, 2);
				cover_sec_area      = Util.getTempV(objectsList, 3);
				cover_sec_area_info = Util.getTempV(objectsList, 4);
				}
		  } else if (o_object_class == "3201") {
			// redis缓存外挂
			// Object[] objects = (Object[]) rutil.getObject("gnodeb:" + o_int_id);
			Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "gnodeb_cover_area:" + o_int_id, "gnodeb_cover_area");
			List objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				cover_area          = Util.getTempV(objectsList, 1);
				cover_area_info     = Util.getTempV(objectsList, 2);
				cover_sec_area      = Util.getTempV(objectsList, 3);
				cover_sec_area_info = Util.getTempV(objectsList, 4);
				}
		  }
		  extrainfo += "\n" + "覆盖场景：" + "【" + cover_area + "】" + "-" + "【" + cover_area_info + "】" + "-" + "【" + cover_sec_area + "】" + "-" + "【" + cover_sec_area_info + "】";
		  o_alarm_text += extrainfo;
		  // log.info(o_fp0 + "，cover_area-info：" + extrainfo);
		}
	}

	/**
	 * 获取最小的type
	 * @param list
	 * @param now
	 * @return
	 */
	private int getSceneType(List list,Date now){
		int result=4;
		if(list==null||list.size()<=0){
			return result;
		}
		for(Object item:list){
			Object[] array = (Object[])item;
			int type = ParseUtil.parseInt(array[0]);
			Date start_time = ParseUtil.parseDate(array[3]);
			Date stop_time = ParseUtil.parseDate(array[4]);
			if(start_time.before(now)&&stop_time.after(now)&&type>=1&&type<result){
				if((result=type)==1){
					break;
				}
			}
		}
		return result;
	}


	private String getRegion(String rid){
		if(regionMap.size()==0){
			regionMap.put("1954403854","汕头");
			regionMap.put("362836539","阳江");
			regionMap.put("-1599349917","惠州");
			regionMap.put("1819935571","深圳");
			regionMap.put("792359234","汕尾");
			regionMap.put("-1125282617","茂名");
			regionMap.put("2141108882","肇庆");
			regionMap.put("1131194941","清远");
			regionMap.put("879804769","珠海");
			regionMap.put("-506001368","中山");
			regionMap.put("609737586","广州");
			regionMap.put("349252210","河源");
			regionMap.put("-169307475","江门");
			regionMap.put("1901071257","云浮");
			regionMap.put("-594453696","东莞");
			regionMap.put("-178654600","韶关");
			regionMap.put("617791944","潮州");
			regionMap.put("1264590310","梅州");
			regionMap.put("-435321011","湛江");
			regionMap.put("-2089824983","揭阳");
			regionMap.put("1510006446","佛山");
		}

		if(regionMap.containsKey(rid)){
			return regionMap.get(rid);
		}else{
			return "";
		}
	}

	private boolean execute(Command command, CommonAlarm src, CommonAlarm dest) {
		context.put(StaticData.LOGGER,     log);
		context.put(StaticData.ALARM_120,  src);
		context.put(StaticData.ALARM_1406, dest);
		return command.execute(context);
	}

	private String TranNetworkType(String extra_id3){
		if(NetworkTypeMap.size()==0){
			NetworkTypeMap.put("3","302");
			NetworkTypeMap.put("4","302");
			NetworkTypeMap.put("5","302");
			NetworkTypeMap.put("6","302");
			NetworkTypeMap.put("7","302");
			NetworkTypeMap.put("14","221");
			NetworkTypeMap.put("20","301");
			NetworkTypeMap.put("23","801");
			NetworkTypeMap.put("27","801");
			NetworkTypeMap.put("29","801");
			NetworkTypeMap.put("59","801");
			NetworkTypeMap.put("60","801");
			NetworkTypeMap.put("63","801");
			NetworkTypeMap.put("64","801");
			NetworkTypeMap.put("65","801");
			NetworkTypeMap.put("66","801");
			NetworkTypeMap.put("67","801");
			NetworkTypeMap.put("68","801");
			NetworkTypeMap.put("69","801");
			NetworkTypeMap.put("71","801");
			NetworkTypeMap.put("72","801");
			NetworkTypeMap.put("73","801");
			NetworkTypeMap.put("74","801");
			NetworkTypeMap.put("75","801");
			NetworkTypeMap.put("76","801");
			NetworkTypeMap.put("77","801");
			NetworkTypeMap.put("78","801");
			NetworkTypeMap.put("79","801");
			NetworkTypeMap.put("80","801");
			NetworkTypeMap.put("81","801");
			NetworkTypeMap.put("82","801");
			NetworkTypeMap.put("83","801");
			NetworkTypeMap.put("84","801");
			NetworkTypeMap.put("85","801");
			NetworkTypeMap.put("86","801");
			NetworkTypeMap.put("91","1202");
			NetworkTypeMap.put("92","801");
			NetworkTypeMap.put("93","801");
			NetworkTypeMap.put("96","801");
			NetworkTypeMap.put("97","801");
			NetworkTypeMap.put("98","801");
			NetworkTypeMap.put("99","801");
			NetworkTypeMap.put("100","801");
			NetworkTypeMap.put("101","801");
			NetworkTypeMap.put("107","801");
			NetworkTypeMap.put("109","801");
			NetworkTypeMap.put("110","801");
			NetworkTypeMap.put("112","801");
			NetworkTypeMap.put("113","801");
			NetworkTypeMap.put("114","801");
			NetworkTypeMap.put("115","801");
			NetworkTypeMap.put("116","801");
			NetworkTypeMap.put("117","801");
			NetworkTypeMap.put("118","801");
			NetworkTypeMap.put("120","801");
			NetworkTypeMap.put("122","801");
			NetworkTypeMap.put("125","301");
			NetworkTypeMap.put("154","301");
			NetworkTypeMap.put("171","801");
			NetworkTypeMap.put("172","801");
			NetworkTypeMap.put("179","801");
			NetworkTypeMap.put("198","801");
			NetworkTypeMap.put("215","801");
			NetworkTypeMap.put("219","801");
			NetworkTypeMap.put("220","801");
			NetworkTypeMap.put("223","801");
			NetworkTypeMap.put("265","1202");
			NetworkTypeMap.put("268","801");
			// OTT省中心节点=277（一级专业：家宽=12、二级专业：数据侧=1202）
			NetworkTypeMap.put("277","1202");
			NetworkTypeMap.put("285","1202");
			NetworkTypeMap.put("287","902");
			NetworkTypeMap.put("288","902");
			NetworkTypeMap.put("291","903");
			NetworkTypeMap.put("296","801");
			// 东信数据网IMS数通=349（一级专业：核心网=2、二级专业：PS域-GPRS=223）
			NetworkTypeMap.put("349","223");
			// 知识城省管设备=350（一级专业：IT网=9、二级专业：网管网=901）
			NetworkTypeMap.put("350","901");
			// OTT业管平台=351（一级专业：家宽=12、二级专业：数据侧=1202）
			NetworkTypeMap.put("351","1202");
			// OTT_CDN=352（一级专业：家宽=12、二级专业：数据侧=1202）
			NetworkTypeMap.put("352","1202");
			// 网络线4A=353（一级专业：IT网=9、二级专业：网管网=901）
			NetworkTypeMap.put("353","901");
			// 银河播控平台=354（一级专业：家宽=12、二级专业：数据侧=1202）
			NetworkTypeMap.put("354","1202");
			// 溯源中心=405（一级专业：内容网=7、二级专业：公共=701
			NetworkTypeMap.put("405","701");
			// 内容中心=406（一级专业：内容网=7、二级专业：公共=701
			NetworkTypeMap.put("406","701");
			// 边缘中心节点=407（一级专业：内容网=7、二级专业：公共=701
			NetworkTypeMap.put("407","701");
			// 边缘下沉节点=408（一级专业：内容网=7、二级专业：公共=701
			NetworkTypeMap.put("408","701");
		}

		if(NetworkTypeMap.containsKey(extra_id3)){
			return NetworkTypeMap.get(extra_id3);
		}else{
			return "0";
		}
	}
	private String TranEqpObjectClass(String eqp_object_class){
		if(eqpObjectClassMap.size()==0){
			//eqpObjectClassMap.put("124","269");
			//eqpObjectClassMap.put("8102","8109");
			eqpObjectClassMap.put("66003","900");
			eqpObjectClassMap.put("3004","905");
		}
		if(eqpObjectClassMap.containsKey(eqp_object_class)){
			return eqpObjectClassMap.get(eqp_object_class);
		}else{
			return eqp_object_class;
		}
	}
	/**
	 * 最新标准化处理
	 * @param src
	 * @param dest
	 */
	private void setNewAlarmStandard(CommonAlarm src, CommonAlarm dest){
		//new change 对传输、东信侧 阿尔卡特做临时转化成上海贝尔
		if(o_vendor_id=="0" && (o_omc_id in ["6601","6602","6603","6607","6608"] || o_professional_type == "3")){
			o_vendor_id="12";
			o_vendor_name = "上海贝尔";
		}
		//new change对本地与集团不同的设备类型ID 做变换
		log.info("fp0:"+o_fp0+" old eqp_object_class:"+o_eqp_object_class+"  object_class:"+o_object_class);
		o_eqp_object_class=TranEqpObjectClass(o_eqp_object_class);
		o_object_class=TranEqpObjectClass(o_object_class);

		//关于实现告警设备 类型统一,lcy@20190619,required by wangyingfneg
		if(o_object_class in ["6111","6103","6102"]){
					o_object_class = "6123";
				}
				if(o_eqp_object_class in ["6111","6103","6102"]){
					o_eqp_object_class = "6123";
				}else if(o_eqp_object_class == "8103"){
					o_eqp_object_class = "8102";
				}else if(o_eqp_object_class == "8108"){
					o_eqp_object_class = "8106";
				}else if(o_object_class in ["81091","8109"]){
					o_eqp_object_class = "81093";
				}

		log.info("fp0:"+o_fp0+"  new eqp_object_class:"+o_eqp_object_class+"  object_class:"+o_object_class);
		dest.setValue("standard_flag", o_standard_flag);
		dest.setValue("org_type", o_org_type);
		dest.setValue("org_severity", o_org_severity);
		dest.setValue("professional_type", o_professional_type);
		dest.setValue("eqp_object_class", o_eqp_object_class);
		dest.setValue("vendor_id", o_vendor_id);
		dest.setValue("title_text", o_title_text);
		dest.setValue("object_class", o_object_class);
		dest.setValue("probable_cause", o_probable_cause);
		dest.setValue("locate_name", o_locate_name);
		dest.setValue("eqp_version", o_eqp_version);
		dest.setValue("vendor_severity", o_vendor_severity);
		dest.setValue("alarm_explanation", o_alarm_explanation);
		dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
		dest.setValue("alarm_check", o_alarm_check);
		dest.setValue("layer_rate", o_layer_rate);
		dest.setValue("board_type", o_board_type);

		String srcVendorId = o_vendor_id;
		if(o_professional_type == "4") {	// 动环告警vendor_id使用50000
			o_vendor_id = "50000";
			dest.setValue("vendor_id", o_vendor_id);
		}

		log.info("new stand-{} begin,prof={}, title_text={}, alarm_explanation_addition={}, locate_name={}, network_type={}, vendor_id={}, eqp_object_class={}, org_type={}", o_fp0, o_professional_type, o_title_text, o_alarm_explanation_addition, o_locate_name, o_network_type, o_vendor_id, o_eqp_object_class, o_org_type);

		this.execute(alarmStandCommand, src, dest);

		if(o_professional_type == "4") {	// 还原告警vendor_id
			o_vendor_id = srcVendorId;
			this.execute(powerStandardIdCommand, src, dest);	// 动环网管告警ID处理
		}


		if(dest.getString("standard_flag") == "3") {
			dest.setValue("standard_alarm_id", "0000-000-000-00-000000");
		}
		log.info("new stand-{} finish,flag={},standard_alarm_id={},vendor={}", o_fp0, dest.getString("standard_flag"), dest.getString("standard_alarm_id"), o_vendor_id);


		o_standard_flag = dest.getString("standard_flag");

		o_org_type = dest.getString("org_type");
		o_org_severity = dest.getString("org_severity");
		o_logic_alarm_type = dest.getString("logic_alarm_type");
		//o_logic_sub_alarm_txt = dest.getString("logic_sub_alarm_txt");
		o_standard_alarm_name = dest.getString("standard_alarm_name");
		o_standard_alarm_id = dest.getString("standard_alarm_id");
		o_effect_ne = dest.getString("effect_ne");
		o_effect_service = dest.getString("effect_service");
		o_alarm_value = dest.getString("alarm_value");
		o_business_type = dest.getString("business_type");
		//o_business_system = dest.getString("business_system");
		//o_remote_ne_flag = dest.getString("remote_ne_flag");
		o_send_jt_flag = dest.getString("send_jt_flag");
		o_alarm_explanation = dest.getString("alarm_explanation");
		//new change 对传输、东信侧上海贝尔替换回阿尔卡特
		// omc_id=9001时钟同步网告警不参与上海贝尔转换为阿尔卡特的特殊处理
		if(o_vendor_id=="12" && o_omc_id != "9001" && (o_omc_id in ["6601","6602","6603","6607","6608"] || o_professional_type == "3")){
			o_vendor_id="0";
			o_vendor_name = "阿尔卡特";
		}
		//lgy@20181213,department_process_flag,province_process_flag特殊处理
		o_department_process_flag="3";
		o_province_process_flag="1";
		if(o_standard_flag=="2"){
			if(o_professional_type == "3" && StringUtils.isNotBlank(o_idn))
			{
				o_alarm_explanation = dest.getString("alarm_explanation");
				//o_extra_string2			=	o_alarm_explanation;
				o_extra_string2			=	StringUtils.isNotBlank(o_extra_string2) ? o_extra_string2 : o_alarm_explanation;
				//o_extra_string3			=	"【"+key+"】";
				//o_severity_keycode	=	i_network_type;
				o_vendor_severity   = dest.getString("vendor_severity");
			}
			//IT网管告警解释赋值 added by lgy@20180717  required by shanchunlan
			if((o_omc_id == "6601" || o_omc_id == "6602"|| o_omc_id == "6603")&&o_professional_type == "5" )
			{
				o_special_field20 = dest.getString("alarm_explanation");
			}
		}else if(o_standard_flag=="3"&&(o_omc_id=="6601"||o_omc_id=="6602")){
			o_org_severity  = "2";
			o_redefine_type = o_org_type;
		}else if(o_standard_flag=="3"){
			o_org_severity  = "1";
			o_send_jt_flag  = "0";
			o_redefine_type = o_org_type;
		}
		//二次标准化会导致集客标志重置，liuciayong@20190926
		//o_redefine_severity = o_org_severity;
		//NFV告警network_type取自120消息  added by lgy@20180725  required by wangyingfeng
		if(o_network_type_top=="20"){
			//o_severity_keycode=i_network_type;
		}
		//if(o_omc_id == "6101"||o_omc_id == "6601" || o_omc_id == "6602")//动环增加OMC，131107
		if(o_omc_id == "6601" || o_omc_id == "6602"||o_professional_type=="4")
		{
			o_severity_keycode = i_network_type;
		}

		if(o_professional_type == "4") {
				// 动环告警切换到统一采集后，因模型和128、129模型不同，设置默认值40
				o_severity_keycode = "40";
		}

		//数据网 设备告警, lcy@20190416
				if(o_omc_id == "2990001"){
					o_probable_cause = "";
					o_omc_alarm_id = "";
				}
	}

	/**
	 * 最新一级专业/二级专业处理
	 * <pre>
	 * 1.查询tia_eqpobject2networktype表
	 * select professional_type network_type_top,network_type network_type from tia_eqpobject2networktype where object_class=$eqp_object_classs
	 * $network_type_top=professional_type
	 * $network_type=network_type
	 *
	 * 2.查询资源表
	 * 如果1中处理查不到数据，则查询资源表
	 * 1)network_type
	 * select network_type from objects where int_id/fm_rdn=$int_id/$rdn
	 * $network_type=network_type
	 * 2)network_type_top
	 * 根据network_type,去掉后两位作为network_type_top
	 * $network_type_top=$network_type去掉后两位
	 * </pre>
	 * @param dest
	 */
	private void setNetworkType(CommonAlarm dest) {
		log.info("setNetworkType_new network-{},by eqp,network={}/{}", o_fp0, dest.getString("network_type"), dest.getString("network_type_top"));
			if(StringUtils.isNotBlank(o_network_type) && o_network_type != "0"){
					dest.setValue("network_type", o_network_type);

					if(StringUtils.isBlank(o_network_type_top)){
						o_network_type_top = o_network_type.substring(0, o_network_type.length() - 2);
					}
			dest.setValue("network_type_top", o_network_type_top);
					return;
			}
			String eqpObjectClass = dest.getString("eqp_object_class");
		String key = "network_type:" + eqpObjectClass;
		List<?> list = Util.getCache(util, "resourceCache", key, "network_type");
		//List<?> list = Util.getObject("resourceCache", key, "network_type");
		int size = (list==null?0:list.size());
		if(size > 0) {
			dest.setValue("network_type",     Util.getTempV(list, 1));	// 1 - network_type
			dest.setValue("network_type_top", Util.getTempV(list, 2));	// 2 - professional_type
		}
		log.info("new network-{},by eqp,network={}/{},key={},size={}", o_fp0, dest.getString("network_type"), dest.getString("network_type_top"), key, size);

		if(size == 0) {
			key = "objects:" + dest.getString("eqp_int_id");
			 list = Util.getCache(util, "resourceCache", key, "objects");
			//list = Util.getObject("resourceCache", key, "objects");
			size = (list==null?0:list.size());
			String networkType = null;
			if(size > 0) {
				networkType = Util.getTempV(list, 2);	// objects.network_type - 2
			}
			if(networkType != null && networkType != "") {
				dest.setValue("network_type", networkType);
				String networkTypeTop = null;
				/*
							   if(networkType.length() > 2) {	// network_type去掉后两位
								   networkTypeTop = networkType.substring(0, networkType.length() - 2);
							   }
							   if(networkTypeTop != null) {
								   dest.setValue("network_type_top", networkTypeTop);
							   }
							   */
			}
			log.info("new network-{},by res,network={}/{},key={},size={}", o_fp0, dest.getString("network_type"), dest.getString("network_type_top"), key, size);
		}
		o_network_type     = dest.getString("network_type");
		o_network_type_top = dest.getString("network_type_top");
		if(o_omc_id=="6601"||o_omc_id=="6602"||o_omc_id=="6603"){
			String networkTypeTop = null;
			o_network_type=TranNetworkType(o_extra_id3);
			if(o_network_type!="0"){
				dest.setValue("network_type", o_network_type);
			}else{
				o_network_type=dest.getString("network_type");
			}
			if(o_network_type.length() > 2) {	// network_type去掉后两位
				networkTypeTop = o_network_type.substring(0, o_network_type.length() - 2);
			}
			if(networkTypeTop != null) {
				dest.setValue("network_type_top", networkTypeTop);
			}
			log.info("tran fp0-{},network={}", o_fp0, dest.getString("network_type"));
		}
	}
	private void setNewNetworkType(CommonAlarm dest) {

		//lgy@20181225,解决传输OMC告警问题
		if(o_professional_type=="3"&&o_eqp_object_class=="100"){
			o_eqp_object_class="2100";
		}
		dest.setValue("eqp_object_class", o_eqp_object_class);
		dest.setValue("eqp_int_id",       o_eqp_int_id);

		setNetworkType(dest);

		//lgy@20181213,自监控告警一、二级专业特殊处理
		if(o_professional_type=="5"&&(o_omc_id=="6601"||o_omc_id=="6602"||o_omc_id=="6603")){
			o_network_type="901";
			o_network_type_top="9";
			dest.setValue("network_type", o_network_type);
			dest.setValue("network_type_top", o_network_type_top);
		}
		//lgy@20181211,爱立信SCP的probable_cause特殊处理，从正文中截取"对象标识"的值
		if (o_eqp_object_class == "111"&&o_vendor_id=="1") {
			def matcher =  o_alarm_text =~/\n对象标识\s+=\s+(\S+)\s*\n/;
			if (matcher.size()>0) {
				o_probable_cause = matcher[0][1] ;
			}
		}
		//lgy@20190124,处理4G-OMC告警的专业
		if(o_alarm_source=="统一采集"&&o_object_class=="100"&&StringUtils.isNotBlank(i_network_type)&&o_professional_type!= "3"){
			o_network_type=i_network_type;
			if(o_network_type.length() > 2) {	// network_type去掉后两位
				o_network_type_top = o_network_type.substring(0, o_network_type.length() - 2);
			}
			dest.setValue("network_type", o_network_type);
			dest.setValue("network_type_top", o_network_type_top);
		}
		//lgy@20181218,NFV 一、二级专业特殊处理
		if(o_professional_type=="20" && StringUtils.isBlank(o_network_type)){
			o_network_type="2001";
			o_network_type_top="20";
			dest.setValue("network_type", o_network_type);
			dest.setValue("network_type_top", o_network_type_top);
		}
		//lgy@20181213,对华为PTN告警的probable_cause做转换由用"_"连接调整成用"-"连接
		if(StringUtils.isNotBlank(o_probable_cause)&&o_professional_type=="3"&&o_eqp_object_class=="2009"&&o_vendor_id=="8"){
			o_probable_cause=o_probable_cause.replace('_','-');
		}
		//liucaiyong@20181208,解决爱立信  告警辅助字段
		if(o_vendor_id  == "1"){
			if(StringUtils.isBlank(o_locate_name)){
				o_locate_name = "无";
			}
			o_alarm_explanation_addition = o_locate_name;
			dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
		}
		//liucaiyong@20181210,解决中兴4G 告警辅助字段
		if(o_vendor_id  == "7" && o_eqp_object_class in ["8104","100","41011"]){
			if(StringUtils.isBlank(o_locate_name)){
				o_locate_name = "无";
			}
			o_alarm_explanation_addition = o_locate_name;
			dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
		}
		//liucaiyong@20191112,解决华为 告警辅助字段
				if(o_vendor_id  == "8" && (o_network_type == "1002" || o_network_type_top == "1")){
				   if(StringUtils.isBlank(o_locate_name)){
					   o_locate_name = "无";
				   }
				   o_alarm_explanation_addition = o_locate_name;
				   dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
			  }

		// 解决诺基亚告警辅助字段
		if(o_vendor_id  == "4"){
			if(StringUtils.isBlank(o_locate_name)){
				o_locate_name = "无";
			}
			o_alarm_explanation_addition = o_locate_name;
			dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
		}

		//liucaiyong@20181208,解决部分告警无告警类别
				//liucaiyong@20190819,部分类型不赋值1
		if(StringUtils.isBlank(o_org_type) || !(o_org_type in ["1","2","13","14","15","16","18"])){
			o_org_type = "1";
			dest.setValue("org_type", o_org_type);
		}

		//lgy@20190118,传输网管告警，层速率为空赋默认值：速率无关
		if(o_alarm_source=="传输网管"&&StringUtils.isBlank(o_layer_rate)){
			o_layer_rate="22";
		}
		//new change 东兴推送数据网告警probable_cause取自probable_cause_txt add lgy@20181210
				if(o_omc_id == "6601" || o_omc_id == "6602" || o_omc_id == "6603"){
					o_probable_cause = o_probable_cause_txt;
				}
				//数据网 设备告警, lcy@20190416
				if(o_omc_id == "2990001"){
					o_probable_cause = o_probable_cause_txt;
					o_omc_alarm_id = o_probable_cause_txt;
				}
		//家宽端到端质量保障平台告警派单需求（CMCC-GD-DRITXQ-20190710-002） by sunyuqiu  , liuciayong@20190719
				if(o_omc_id in ["1002","5678"]){
				 //OMC_ID=1002，EQP_OBJECT_CLASS in（2011,2012） ，则赋值告警为“家宽-传输侧”（一级网络类型：network_type_top=12，二级专业：network_type=1201）
					//OMC_ID=1002，EQP_OBJECT_CLASS =900，则赋值告警为“家宽-数据侧”（一级网络类型：network_type_top=12，二级专业：network_type=1202）
					if(o_eqp_object_class in ["2011","2012"]){
						o_network_type_top = "12";
						o_network_type = "1201";
						o_ne_status = "1";
					}else if(o_eqp_object_class in ["900"]){
						o_network_type_top = "12";
						o_network_type = "1202";
					}
					dest.setValue("network_type", o_network_type);
					dest.setValue("network_type_top", o_network_type_top);
				}

				// CMCC-GD-DRITXQ-20210322-044_关于动环告警解析、标准化及上报集团需求
				if (o_network_type == "500") {
				  // 若o_object_level != 52，则赋值o_locate_name为传输节点
				  if(o_object_level != "52") {
					o_locate_name = "传输节点";
					o_alarm_explanation_addition = o_locate_name;
					dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
					  } else if(o_object_level == "52") {
						String key = "tai_central_building:" + o_special_field19;
						// redis缓存外挂
						// Object[] objects = (Object[]) rutil.getObject(key);
						Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "tai_central_building");
						List objectsList = objects == null ? null : Arrays.asList(objects);
						// 若o_object_level = 52且o_special_field19存在于tai_central_building，则赋值o_locate_name为数据中心
						// 若o_object_level = 52且o_special_field19不存在于tai_central_building，则赋值o_locate_name为通信机楼
						if(objectsList != null && !objectsList.isEmpty()) {
						  o_locate_name = "数据中心";
						} else {
						  o_locate_name = "通信机楼";
						}
						o_alarm_explanation_addition = o_locate_name;
						dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
					  }
				}

				// CMCC-GD-DRITXQ-20210322-044_关于动环告警解析、标准化及上报集团需求
				if (o_network_type == "500" && StringUtils.isNotBlank(o_object_class) && StringUtils.isNotBlank(o_title_text)) {
				  String key = "tai_dh_alarmid:" + o_object_class + ":" + o_title_text;
				  // redis缓存外挂
				  // Object[] objects = (Object[]) rutil.getObject(key);
				  Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "tai_dh_alarmid");
				  List objectsList = objects == null ? null : Arrays.asList(objects);
				  if(objectsList != null && !objectsList.isEmpty()) {
					  o_probable_cause = Util.getTempV(objectsList, 3); // omc_alarm_id
					  }
				}

				//lgy@20190115,物联网专业赋值
		if((o_vendor_id=="1"&&o_eqp_object_class=="8101"&&o_title_text in ["epsEnodeBUnreachable","nwcEnodeBPlmnMismatch","sctpAssocReestablishInitiated","iwsIpAddressCouldNotBeDerived",
																		   "nwcMmeEnodebUpdateIncomplete","nwcEnodeBTaiMismatch"])||(o_vendor_id=="8"&&o_eqp_object_class=="8101"&&o_title_text=="MME和eNodeB配置的TAI不一致")){
			if(StringUtils.isNotBlank(o_remote_eqp_label)){
				String tkey = "enodeb_NB:"+o_remote_eqp_label;
				Object[] results = util.getObject(CUSTOMCACHE, tkey,"enodeb_NB");
				List resultlist = results==null?null:Arrays.asList(results);
				if(resultlist!=null&&!resultlist.isEmpty()){
					o_remote_eqp_label = Util.getTempV(resultlist,1);
					o_remote_int_id = Util.getTempV(resultlist,2);
					o_remote_resource_status = Util.getTempV(resultlist,4);
					String upd_flag = Util.getTempV(resultlist,3);
					if(upd_flag=="9"){
						o_network_type="1001";
						o_network_type_top="10";
						dest.setValue("network_type", o_network_type);
						dest.setValue("network_type_top", o_network_type_top);
					}
				}
			}
		}
		if((o_vendor_id=="8"&&o_eqp_object_class=="8102"&&o_title_text in ["LNS无响应","LNS组无响应"])||(o_vendor_id=="8"&&o_eqp_object_class=="8102"&&o_title_text in ["L2TP LNS Failure","L2TP","L2TP LNS Connection Failure"])){
			o_network_type="1001";
			o_network_type_top="10";
			dest.setValue("network_type", o_network_type);
			dest.setValue("network_type_top", o_network_type_top);
		}
		if(StringUtils.isBlank(o_alarm_explanation_addition)){
			o_alarm_explanation_addition = "无";
		}

				//关于综合监控后台新增告警白名单调整告警类别需求 sunyuqiu,add by liucaiyong@20190814
				List<?> list = Util.getCache(util, CUSTOMCACHE, joinKey("title_white",o_title_text), "title_white");
				//List<?> list = Util.getObject(CUSTOMCACHE, joinKey("title_white",o_title_text), "title_white");
			if(list!=null &&  list.size()> 0) {
			o_org_type = Util.getTempV(list, 1);
					log.info(o_fp0 + " reset title_white:" + o_org_type);
			}

		//WNMS-REAL and WNMS-SYNC
		String wnmsReal = "WNMS-REAL:";
		String wnmsSync = "WNMS-SYNC:";

			//亿阳侧网管检测告警标准化调整 - SC, sunyuqiu by liucaiyong@20190920
				if(o_eqp_object_class == "100" && (o_title_text.startsWith(wnmsReal) ||o_title_text.startsWith(wnmsSync)||o_alarm_title in ["99","98","26441660","26445340"])){
					o_professional_type="5";
					o_vendor_id = "150";
					o_vendor_name = "亿阳";
					o_network_type="901";
				  o_network_type_top="9";
				  dest.setValue("network_type", o_network_type);
				  dest.setValue("network_type_top", o_network_type_top);
				}
	}

	private void thresholdCtrlJtFlag(){// 阈值上报集团逻辑，配置表send_jt_flag_threshold
	  // 无线批量退服告警不上报集团
	  if (o_alarm_title in ["28921957","28921956","28910148","28910147","2145","2149","125904","125903","28923349","28923350","28919740","28919741","2205","2361","125901","125902"]) {o_send_jt_flag = "0";}

	  // 无线（2、4、5g）基站、小区根据阈值判断，达到阈值则取最新一条上报
	  if ((o_object_class in ["201","300","8104","8105","3201","3300"]) && o_region_id != null && o_region_id != "" && o_send_jt_flag == "1") {
	  // 初始化阈值为1（即没屏蔽），后续逻辑从缓存中获取的阈值会覆盖该初始化阈值，防止从缓存中获取不到值报错
	  String threshold = "1";

	  String key = "send_jt_flag_threshold:" + o_region_id;
	  // List<?> list = Util.getCache(util, "customCacheHour", key, "send_jt_flag_threshold");
		List<?> list = Util.getCache(util,CUSTOMCACHEHour, key, "send_jt_flag_threshold");
	  if(list != null &&  list.size() > 0) {
		if (o_object_class in ["201","300"]) {
		  threshold = Util.getTempV(list, 1);
		  } else if (o_object_class in ["8104","8105"]) {
			threshold = Util.getTempV(list, 2);
			} else if (o_object_class in ["3201","3300"]) {
			  threshold = Util.getTempV(list, 3);
			  }
			  }

	  String counter = "FWDCTRL_" + o_object_class + "_" + o_region_id;

    // long val = rutil.incr(counter);
	  long val = util.incr(counter);
		// log.info("incrValue-fp0={},key={},val={}",o_fp0,counter,val);
	  // long val = 1;

	  if (val % Integer.parseInt(threshold) == 0) {
		// o_send_jt_flag = "1";
		log.info("send_jt_flag_threshold({}), counter({}) = {} reached, sended fp0({})", threshold, counter, val, o_fp0);
	  }
	  else {
		o_send_jt_flag = "0";
		log.info("send_jt_flag_threshold({}), counter({}) = {}, not send fp0({})", threshold, counter, val, o_fp0);
	  }
		// if (val % Integer.parseInt(threshold) != 0) {
		// 	o_send_jt_flag = "0";
		// 	log.info("send_jt_flag_threshold({}), counter({}) = {}, not send fp0({})", threshold, counter, val, o_fp0);
	  // }
	  }
	  }

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		// 同步修改标工函数setProjectStatus和疑似标工函数setProjectStatusSuspect
		private void setProjectStatusSuspect(boolean projecting)
		{
			// this.setProjectStatus()的projecting判断为true，则不走this.setProjectStatusSuspect(projecting);
		  if (projecting) {
			return;
		  }
		  // 故障管理系统收到的告警发生时间为21点-24点的所有告警
		  if (getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()))+" 21:00:00").compareTo(event_time) <= 0 && event_time.compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()))+" 24:00:00")) <= 0) {
			// boolean projecting = false;
			log.info(o_fp0+",setProjectStatusSuspect["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			String tmpIntId = o_int_id.toString();

			if(o_omc_id=="6601"||o_omc_id=="6602")
			{
				//如果是数据网，则去special_fileld9中生成的ID
				if( StringUtils.isNotBlank(o_special_field9))
				{
					int t_index_intid = o_special_field9.toString().indexOf("@");
					if( t_index_intid > -1 )
					{
						tmpIntId = o_special_field9.toString().substring( t_index_intid+1 );
					}
				}
				//special_fileld9有其他用途（承载网告警电路编号查询）,by sunyuqiu@20150920
				o_special_field9 = o_special_field19;
			}
			//传输端口特殊标工 added by lgy@20180629  required by sunyuqiu
			if(o_professional_type=="3"&&o_object_class=="706"){
				tmpIntId=Util.getCRC32("706:"+o_ne_label);
			}
			o_alarm_ne_status="0";
			o_special_field16="";
			o_special_field3 ="";

			//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
			//应急标工先
			//if(o_severity_keycode in ["5274","5275","5276","5277","150","27"]){
			//    projecting = emgProjectStatus();
			//    log.info(o_fp0+"      emg-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			//}

			//“OMC割接”范围涉及专业：话音、传输 , OMC割接时将未知状态的网元 设置为 OMC割接状态 20150820 fw
			//“OMC重启”范围涉及专业：话音、传输、动环
			if(o_professional_type in ["1","3","4"]){
				if(! StringUtils.isBlank(o_omc_id)){
					String OmcStatus_R = this.queryOmcStatusFromCacheSuspect(o_omc_id)
					if(!projecting && OmcStatus_R=="17"){
						o_alarm_ne_status = "60";
						projecting=true;
						log.info("o_alarm_ne_status_suspect="+o_alarm_ne_status);
					}
					if(o_professional_type in ["1","3"]){
						if( o_ne_status == "0" && OmcStatus_R == "16" ){
							o_ne_status = "100";
						}
					}
				}
			}
			//正常标工
			if(!projecting){
				projecting = queryProjectStatusFromCacheSuspect(tmpIntId);
				log.info(o_fp0+"   common-prj_suspect["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
			//传输标工
			if(!projecting&&o_professional_type=="3"){
				projecting = chuanshuCTFProjectStatusFromCacheSuspect();
				log.info(o_fp0+" chuanshu-prj_suspect["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
			//数据网标工
			if(!projecting&&o_professional_type=="2"&&o_object_class=="706"){
				projecting = shujuPortProjectStatusSuspect();
				log.info(o_fp0+"    shuju-prj_suspect["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
			//无线小区按基站标工
			if(!projecting&&o_object_class in ["300","9300","8105","270","3300"]){
				projecting = cellProjectStatusSuspect();
				log.info(o_fp0+"     cell-prj_suspect["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
			if(!projecting&&o_professional_type=="4"){
				//增加动环按机房名+设备编码标工,sunyuqiu@20161108
				tmpIntId	=	Util.getCRC32(o_special_field11+"|"+o_ne_label);
				projecting = queryProjectStatusFromCacheSuspect(tmpIntId);
				log.info(o_fp0+"       dhh-prj_suspect["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
			//动环机房标工
			if(!projecting&&o_professional_type=="4"){
				// 2013092918,增加动环 工程状态匹配逻辑，如果默认（机房名+设备编码）没有匹配上，再用 机房名+|+设备名 ，生成crc32检验码匹配
				tmpIntId	=	Util.getCRC32(o_special_field11);
				projecting = queryProjectStatusFromCacheSuspect(tmpIntId);
				log.info(o_fp0+"       dh-prj_suspect["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
			//数据网正文端口标工
			if(!projecting&&o_professional_type=="2"	&&o_omc_id in ["6601","6602"]	&& o_extra_id3 in ["20","91","125","154","7","225"])
			{
				projecting = shujuTxtsPortProjectStatusSuspect();
				log.info(o_fp0+" shujport-prj_suspect["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}

			//无线小区按基站标工
			//if(!projecting&&o_object_class in ["300","9300","8105"]){
			//	projecting = cellProjectStatus();
			//	log.info(o_fp0+"     cell-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			//}
			if(!projecting && o_object_class in ["300","9300","8105","201","9201","8104","41011","270"]){
				List list = new ArrayList<Map>();
				Map map = new HashMap();
				//无线小区按基站标工
				String btsId="";
				String key="objects:";
				if(o_object_class in ["8105","270"]){
					btsId = o_eqp_int_id;
				}else if(o_object_class in ["300","9300"]){
					btsId = o_ParentIntId;
				}
				if(StringUtils.isNotBlank(btsId)){
					map = new HashMap();
					map.put("key","tts_task_ne_detail2:common:"+btsId);
					map.put("wage",99);
					list.add(map);
				}

				//级联标工
				if(o_object_class in ["8105","8104","41011","270"]){
					String queryKey  = "objects_relation:"+o_eqp_int_id+":8104";
					List results = (List)util.getObject(this.CUSTOMCACHE,queryKey,"objects_relation");
					if (results!=null && !results.isEmpty()) {
						for (Object item : results) {
							Object[] result = (Object[])item;
							List olist = Arrays.asList(result);
							String relatedId  = Util.getTempV(olist, 2);

							map = new HashMap();
							map.put("key","tts_task_ne_detail2:common:"+relatedId);
							map.put("related","1");
							map.put("wage",99);
							list.add(map);
						}
					}
				}else{
					map = new HashMap();
					map.put("key","tts_task_ne_detail2:common:"+o_eqp_int_id);
					map.put("related","1");
					map.put("wage",99);
					list.add(map);
				}
				projecting = this.queryProjectStatusListSuspect(list);
						log.info(o_fp0+",affect_ne_suspect["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}

			if(!projecting){//个性化标工 by shanchunlan ,added by liucaiyong@20160518
				List refList=this.redefineProjectsListSuspect();

				if(refList!=null){
					for(String one:refList){
						projecting = redefineProjectStatusSuspect(one);
						if(projecting){
							break;
						}
					}
					log.info(o_fp0+" redefine-prj_suspect["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
				}
			}
			//4G基站脱离告警标工 added by lgy@20180816  required by wangyinfeng
			//托管子类型调整成退服子类型改由标题加厂家限定, updated by liucaiyong@20191216 required by wangyinfeng
			//if(!projecting && o_eqp_object_class in ["8104","41011"] && o_sub_alarm_type == "973" ){
			if(!projecting && o_eqp_object_class in ["8104","41011"] && (
				(o_vendor_id == "1" && o_title_text == "Heartbeat Failure")||
				(o_vendor_id == "8" && o_title_text == "网元连接中断")||
				(o_vendor_id == "7" && o_title_text == "网元断链告警")||
				(o_vendor_id == "9" && o_title_text == "NEA和网元断连")||
				(o_vendor_id == "4" && o_title_text == "NE O&M CONNECTION FAILURE")
			  )){
				projecting = this.LTEtuoguanProjectStatusListSuspect(o_region_id);
				log.info(o_fp0+"  LTEtuoguan_suspect: 是否标工["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			} else if (!projecting && o_eqp_object_class == "3201" && (
				// “地市断链标工”工程识别
				(o_vendor_id == "1" && o_alarm_title == "510675")||
				(o_vendor_id == "8" && o_alarm_title == "846798")||
				(o_vendor_id == "7" && o_alarm_title == "9827073")
			  )){
				projecting = this.LTEtuoguanProjectStatusListSuspect(o_region_id);
				log.info(o_fp0+"  疑似违规操作5G地市断链: 是否标工["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}

			//对端标工
			String t_alarm_ne_status	=	o_alarm_ne_status;
			String t_special_field16	=	o_special_field16;
			String t_special_field3	=	o_special_field3;

			if(StringUtils.isNotBlank(o_remote_int_id))
			{
				boolean remote_projecting = false;
				remote_projecting	=	queryProjectStatusFromCacheSuspect(o_remote_int_id);
				if(!remote_projecting){
					o_remote_proj_sub_status="0";
				}else{
					o_remote_proj_sub_status	=	o_alarm_ne_status;

					//还原
					o_alarm_ne_status	=	t_alarm_ne_status;
					o_special_field3	=	t_special_field3;

					if(projecting){
						o_special_field16	=	t_special_field16;
					}
				}
				log.info(o_fp0+"   remote-prj_suspect["+remote_projecting+"],remote_proj_sub_status["+o_remote_proj_sub_status+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}

			log.info("resoure-prj_suspect_begin, fp0={}, ne_label={}, eqp_label={}, remote_proj_sub_status={}, remote_resource_status={}, alarm_ne_status={}, alarm_resource_status={}, special_field16={}, special_field3={}", o_fp0, o_ne_label, o_eqp_label, o_remote_proj_sub_status, o_remote_resource_status, o_alarm_ne_status, o_alarm_resource_status, o_special_field16, o_special_field3);

			if(o_ne_label ==o_eqp_label)
			{
				o_alarm_ne_status        = this.projectRemoteMapingSuspect(o_alarm_ne_status, o_remote_resource_status, o_remote_proj_sub_status);
				o_remote_proj_sub_status = this.projectMapingSuspect(o_remote_proj_sub_status);
				o_alarm_resource_status  = o_alarm_ne_status;
			}
			else
			{
				o_alarm_ne_status        = this.projectRemoteMapingSuspect(o_alarm_ne_status, o_remote_resource_status, o_remote_proj_sub_status);
				o_remote_proj_sub_status = this.projectMapingSuspect(o_remote_proj_sub_status);

				//查询本端大网元标工状态
				boolean tmpProjecting = false;
				String tmpAlarmResourceStatus = o_alarm_resource_status;

				t_alarm_ne_status	=	o_alarm_ne_status;
				t_special_field16	=	o_special_field16;
				t_special_field3	=	o_special_field3;

				tmpProjecting	=	queryProjectStatusFromCacheSuspect(o_eqp_int_id);
				if(!tmpProjecting){
					o_alarm_resource_status="0";
				}else{
					o_alarm_resource_status	=	o_alarm_ne_status;

					//还原
					o_alarm_ne_status	=	t_alarm_ne_status;
				}
				log.info(o_fp0+" resoure-prj_suspect["+tmpProjecting+"],alarm_ne_status["+o_alarm_ne_status+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
				o_alarm_resource_status  = this.projectMapingSuspect(o_alarm_resource_status);
			}

			if(o_professional_type=="3"&&!projecting)
			{
				//传输标工失败，置初始值
				o_alarm_ne_status = i_alarm_ne_status;//120消息初始值
			}

			// 0:未知 1:工程预约 2:工程实施 3:工程后观察
			if( projecting ){
				o_extra_id2="2";
			}
			else
			{
				o_extra_id2	=	queryProjectTaskStatus(o_int_id);
				if(o_extra_id2=="0")
				{
					o_extra_id2="";
				}
			}
		  }
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		//通用的OMC_ID查询割接重启 add by fuwei at 20150820
		//omc正常 返回0 否则返回状态值 16:OMC割接  17：OMC重启
		private String  queryOmcStatusFromCacheSuspect(String omcId) {
			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";
			String ret="0";
			String queryKey  = "tts_task_ne_detail2:common:"+omcId;
			List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_common");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<5) {
						break;
					}
					List olist = Arrays.asList(result);
					String prjStatus = Util.getTempV(olist, 0);
					String prjReport = Util.getTempV(olist, 1);
					String prjOptType= Util.getTempV(olist, 2);
					String prjStart  = Util.getTempV(olist, 3);
					String prjEnd    = Util.getTempV(olist, 4);
					if (prjStart==null || prjStart=="") {
						continue;
					}
					//if (prjStart.compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||prjEnd.compareTo(event_time)>=0)) {
					if ( prjStatus in ["16","17"] && getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjStart)) <= 0 && getDate(prjStart).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0 && (prjEnd==null||prjEnd==""||getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjEnd)) <= 0 && getDate(prjEnd).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0)) {
						ret=prjStatus;
						preReport = prjReport;
						preOptType= prjOptType;
					}
				}
			}
			//log.info(o_fp0+" queryKey:"+queryKey+" omcid:"+omcId+" prjStatus:"+ret);
			if(ret == "17"){
				o_special_field16=preReport;
				o_special_field3 =preOptType;
				o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
			}
			return ret;
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		//通用的INT_ID键值查询缓存内的网元临时工程状态 add by wujian at 20130730
		private boolean queryProjectStatusFromCacheSuspect(String neIntId) {
			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";
			String queryKey  = "tts_task_ne_detail2:common:"+neIntId;
			List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_common");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<5) {
						break;
					}
					List olist = Arrays.asList(result);
					String prjStatus = Util.getTempV(olist, 0);
					String prjReport = Util.getTempV(olist, 1);
					String prjOptType= Util.getTempV(olist, 2);
					String prjStart  = Util.getTempV(olist, 3);
					String prjEnd    = Util.getTempV(olist, 4);
					if (prjStart==null || prjStart=="") {
						continue;
					}
					if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
						//if (prjStart.compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||prjEnd.compareTo(event_time)>=0)) {
						if (getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjStart)) <= 0 && getDate(prjStart).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0 && (prjEnd==null||prjEnd==""||getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjEnd)) <= 0 && getDate(prjEnd).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0)) {
							preStatus = prjStatus;
							preReport = prjReport;
							preOptType= prjOptType;
						}
					}
					if (preStatus!="-1") {
					    log.debug("queryProjectStatusFromCacheIntidSuspect-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
					}
				}
				//log.debug(o_fp0+" queryProjectStatusFromCache——preStatus："+preStatus);
				if (preStatus!="-1") {
					o_alarm_ne_status="60";
					o_special_field16=preReport;
					o_special_field3 =preOptType;
					o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
					//log.debug(o_fp0+" queryProjectStatusFromCache.key1(has):"+queryKey);
					// log.debug("queryProjectStatusFromCacheIntidSuspect-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, results);
					return true;
				}
			}
			//log.debug(o_fp0+" queryProjectStatusFromCache.key1(not):"+queryKey);
			return false;
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		//网元归属父的网元临时工程状态特殊查询逻辑 add by wujian at 20130730
		private boolean queryProjectStatusFromCacheSuspect(String eqpIntId, String neClass) {
			if (o_ne_label==null || o_ne_label=="") {
				//log.debug(o_fp0+" queryProjectStatusFromCache.key2(not): ne_label is empty");
				return false;
			}
			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";
			String preNeName ="";
			String queryKey  = "tts_task_ne_detail2:chuanshu:"+neClass+":"+eqpIntId;
			List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_shuju");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<6) {
						break;
					}
					List olist = Arrays.asList(result);
					String prjStatus = Util.getTempV(olist, 0);
					String prjReport = Util.getTempV(olist, 1);
					String prjOptType= Util.getTempV(olist, 2);
					String prjStart  = Util.getTempV(olist, 3);
					String prjEnd    = Util.getTempV(olist, 4);
					String prjNeName = Util.getTempV(olist, 5);

					if (prjStart==null || prjStart=="" || prjNeName==null || prjNeName=="") {
						continue;
					}

					if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
						//log.debug("baaaaaa:prjStart"+prjStart.toString()+" prjEnd:"+prjEnd.toString()+" event_time:"+event_time);
						// if (getDate(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDate(prjEnd).compareTo(event_time)>=0)) {
						if (getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjStart)) <= 0 && getDate(prjStart).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0 && (prjEnd==null||prjEnd==""||getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjEnd)) <= 0 && getDate(prjEnd).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0)) {
							if (o_ne_label.indexOf(prjNeName)>=0) {
								preStatus = prjStatus;
								preReport = prjReport;
								preOptType= prjOptType;
								preNeName = prjNeName;
							}
						}
					}
					if (preStatus!="-1") {
					    log.debug("queryProjectStatusFromCacheEqpintidSuspect-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
					}
				}
				//log.debug("queryProjectStatusFromCache::preStatus"+preStatus);
				if (preStatus!="-1") {
					o_alarm_ne_status="60";
					o_special_field16=preReport;
					o_special_field3 =preOptType;
					o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
					//log.debug(o_fp0+" queryProjectStatusFromCache.key2(has->{"+preNeName+"}):"+queryKey);
					// log.debug("queryProjectStatusFromCacheEqpintidSuspect-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, results);
					return true;
				}
			}
			//log.debug(o_fp0+" queryProjectStatusFromCache.key2(not):"+queryKey);
			return false;
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		//传输板卡和端口网元临时工程状态附加的特殊查询逻辑 add by wujian at 20130730
		private boolean chuanshuCTFProjectStatusFromCacheSuspect() {
			//if (o_professional_type=="3") {
			//update by liucaiyong@20140711
			//if (o_object_class=="10011" || o_object_class=="706" || o_object_class=="150110") {
			if (o_object_class in ["10011","706","150110","2011","150111","150113","150114"]) {
				//if (o_object_class in ["10011","706","150110","2012","2011","150111","150113","150114"]) {
				if (this.queryProjectStatusFromCacheSuspect(o_eqp_int_id)) {
					return true;
				}
			}

			if (o_object_class=="2012"){
				if (this.queryProjectStatusFromCacheSuspect(o_eqp_int_id,"2012")) {
					return true;
				}
			}

			if (o_object_class=="706" || o_object_class=="150110") {
				if (this.queryProjectStatusFromCacheSuspect(o_eqp_int_id,"10011")) {
					return true;
				}
			}

			if (o_object_class=="150110") {
				return this.queryProjectStatusFromCacheSuspect(o_eqp_int_id,"706");
			}
			//}
			return false;
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		//数据网按大网元标工,add by liucaiyong@20140108
		private boolean shujuPortProjectStatusSuspect()
		{
			//if (o_professional_type=="2" && o_object_class=="706") {
			if (this.queryProjectStatusFromCacheSuspect(o_eqp_int_id)) {
				return true;
			}
			//}
			return false;
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		//无线小区按基站标工，add by liucaiyong@20140110
		private boolean cellProjectStatusSuspect()
		{
			//if ( o_object_class in ['300', '9300', '8105']) {
			String btsId=o_ParentIntId;
			if (StringUtils.isNotBlank(btsId) && this.queryProjectStatusFromCacheSuspect(btsId)) {
				return true;
			}
			//}
			return false;
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		//数据网正文端口标工,added by sunyuqiu@20140520
		private boolean shujuTxtsPortProjectStatusSuspect()
		{
			String proTxt="";
			def matcher = o_alarm_text =~ /.*\n\[(.+)\]/;
			if(matcher.size()>0)
			{
				proTxt = matcher[0][1];
			}
			if(proTxt!="")
			{
				String[] proTxts = proTxt.split(",");
				for(String txt:proTxts)
				{
					if(this.shujuTxtPortProjectStatusFromCacheSuspect(txt))
					{
						break;
					}
				}
			}
			return false;
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		private boolean shujuTxtPortProjectStatusFromCacheSuspect(String txt)
		{
			def matcher = txt=~ /(.+)\_([^0-9]*)(\d+\/)?(\d+\/)?(\d+)?(\:)?(\d+)?(\.)?(\d+)?/;
			if(matcher.size()>0)
			{
				String portstr=matcher[0][1]+":";

				if(matcher[0][3]!=null)
					portstr+=matcher[0][3];
				if(matcher[0][4]!=null)
					portstr+=matcher[0][4];
				if(matcher[0][5]!=null)
					portstr+=matcher[0][5];
				if(matcher[0][6]!=null)
					portstr+=matcher[0][6];
				if(matcher[0][7]!=null)
					portstr+=matcher[0][7];
				if(matcher[0][8]!=null)
					portstr+=matcher[0][8];
				if(matcher[0][9]!=null)
					portstr+=matcher[0][9];

				String portId = Util.getCRC32(portstr);
				if(this.queryProjectStatusFromCacheSuspect(portId))
				{
					//special_fileld9有其他用途（承载网告警电路编号查询）,by sunyuqiu@20150920
					//o_special_field9 += ","+portstr+"@"+portId;
					return true;
				}
			}
			return false;
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		private boolean queryProjectStatusListSuspect(List list){
			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";

			list.each{
				Map map = it;
				String task=map.get("task");
				String key=map.get("key");
				String related=map.get("related");
				String wage=map.get("wage");

				if(StringUtils.isBlank(task)){
					task = "nrmdb.tts_task_ne_detail2_common";
				}
				if(StringUtils.isBlank(related)){
					related = "0";
				}
				if(StringUtils.isBlank(wage)){
					wage = "100";
				}

				String prjStatus ="-1";
				String prjReport ="";
				String prjOptType="";
				String prjStart="";
				String prjEnd="";

				List results = (List)util.getObject(this.CUSTOMCACHEHour,key,task);
				if (results!=null && !results.isEmpty()) {
					for (Object item : results) {
						Object[] result = (Object[])item;
						if (result==null || result.length<5) {
							break;
						}
						List olist = Arrays.asList(result);
						prjStatus = Util.getTempV(olist, 0);
						prjReport = Util.getTempV(olist, 1);
						prjOptType= Util.getTempV(olist, 2);
						prjStart  = Util.getTempV(olist, 3);
						prjEnd    = Util.getTempV(olist, 4);
						String rel = Util.getTempV(olist, 12);

						if (prjStart==null || prjStart=="" || prjStart.compareTo(o_event_time)>0 || (StringUtils.isNotBlank(prjEnd) && prjEnd.compareTo(o_event_time)<0)||"1".equals(related) && !rel.equals(related)) {
							log.debug("queryProjectStatusListCompareToSuspect-fp0={}, event_time={}, results=[{}, {}, {}, {}, {}, {}]", o_fp0, o_event_time, prjStatus, prjReport, prjOptType, prjStart, prjEnd, rel);
							prjStatus = "-1";
							continue;
						}
						break;
					}
				}

				//比较
				if(prjStatus!="-1" && compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0){
					if (getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjStart)) <= 0 && getDate(prjStart).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0 && (getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjEnd)) <= 0 && getDate(prjEnd).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0)) {
					preStatus = prjStatus;
					preReport = prjReport;
					preOptType= prjOptType;
					log.debug("queryProjectStatusListSuspect-fp0={}, event_time={}, results=[{}, {}, {}, {}, {}]", o_fp0, o_event_time, prjStatus, prjReport, prjOptType, prjStart, prjEnd);
				}
				}
			}
			if (preStatus!="-1") {
				o_alarm_ne_status="60";
				o_special_field16=preReport;
				o_special_field3 =preOptType;
				o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
				// log.debug("queryProjectStatusListSuspect-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, key, results);

				return true;
			}
			return false;
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		/**
		 *获取当前
		 **/
		 private List redefineProjectsListSuspect(){
		   List refList;//自定义标工项
		   Date refTime;
			 //log.info(o_fp0+" getRedefineProjects-1");
			 if(refList!=null && refTime!=null && (refTime.getTime()+60*60*24*1000)>(new Date()).getTime()){
				 return refList;
			 }
			 //log.info(o_fp0+" getRedefineProjects-2");
			 List results = (List)util.getObject(this.CUSTOMCACHEHour,"nrmdb.tts_task_ne_detail2_redef_type:10","nrmdb.tts_task_ne_detail2_redef_type");
			 if(results!=null && !results.isEmpty()) {
				 refList = new ArrayList<String>();
				 refTime = new Date();
				 for (Object item : results) {
					 Object[] result = (Object[])item;
					 List olist = Arrays.asList(result);
					 String tmp = Util.getTempV(olist,1);
					 if(StringUtils.isNotBlank(tmp)){
						 refList.add(tmp);
						 log.info(o_fp0+" set-ref-projects_suspect["+tmp+"]");
					 }
				 }
				 return refList;
			 }
			 //log.info(o_fp0+" getRedefineProjects-3");
			 return null;
		 }

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		private boolean redefineProjectStatusSuspect(String pattern){
			//LOCAL:TITLE:REMOTE
			String pkey = pattern.replace("TITLE", o_title_text).replace("REMOTE", o_remote_eqp_label).replace("LOCAL", o_eqp_label);

			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";
			List results = (List)util.getObject(this.CUSTOMCACHEHour,"nrmdb.tts_task_ne_detail2_redef@"+pattern,"nrmdb.tts_task_ne_detail2_redef");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<5) {
						break;
					}
					List olist = Arrays.asList(result);
					String neName    = Util.getTempV(olist, 5);

					if(StringUtils.isBlank(neName)||!neName.equals(pkey)){
						continue;
					}
					String prjStatus = Util.getTempV(olist, 0);
					String prjReport = Util.getTempV(olist, 1);
					String prjOptType= Util.getTempV(olist, 2);
					String prjStart  = Util.getTempV(olist, 3);
					String prjEnd    = Util.getTempV(olist, 4);

					if (prjStart==null || prjStart=="") {
						continue;
					}
					if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
						if (getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjStart)) <= 0 && getDate(prjStart).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0 && (prjEnd==null||prjEnd==""||getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjEnd)) <= 0 && getDate(prjEnd).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0)) {
							preStatus = prjStatus;
							preReport = prjReport;
							preOptType= prjOptType;
						}
					}
					if (preStatus!="-1") {
					    log.debug("redefineProjectStatusSuspect-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
					}
				}
				if (preStatus!="-1") {
					o_alarm_ne_status="60";
					o_special_field16=preReport;
					o_special_field3 =preOptType;
					o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
					// log.debug("redefineProjectStatusSuspect-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, "nrmdb.tts_task_ne_detail2_redef@"+pattern, results);
					return true;
				}
			}
			return false;
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		//通过region_id查标工表获取工程信息
		private boolean LTEtuoguanProjectStatusListSuspect(String region_id) {
			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";
			String queryKey  = "nrmdb.tts_task_ne_detail2_4Gtuoguan:"+region_id;
			List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_4Gtuoguan");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<5) {
						break;
					}
					List olist = Arrays.asList(result);
					String prjStatus = Util.getTempV(olist, 0);
					String prjReport = Util.getTempV(olist, 1);
					String prjOptType= Util.getTempV(olist, 2);
					String prjStart  = Util.getTempV(olist, 3);
					String prjEnd    = Util.getTempV(olist, 4);
					if (prjStart==null || prjStart=="") {
						continue;
					}
					if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
						//if (prjStart.compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||prjEnd.compareTo(event_time)>=0)) {
						if (getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjStart)) <= 0 && getDate(prjStart).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0 && (prjEnd==null||prjEnd==""||getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 00:00:00").compareTo(getDate(prjEnd)) <= 0 && getDate(prjEnd).compareTo(getDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()+1000*60*60*24))+" 05:00:00")) <= 0)) {
							preStatus = prjStatus;
							preReport = prjReport;
							preOptType= prjOptType;
						}
					}
					if (preStatus!="-1") {
					    log.debug("LTEtuoguanProjectStatusListSuspect-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
					}
				}
				//log.debug(o_fp0+" queryProjectStatusFromCache——preStatus："+preStatus);
				if (preStatus!="-1") {
					o_alarm_ne_status="60";
					o_special_field16=preReport;
					o_special_field3 =preOptType;
					o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
					//log.debug(o_fp0+" queryProjectStatusFromCache.key1(has):"+queryKey);
					// log.debug("LTEtuoguanProjectStatusListSuspect-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, results);
					return true;
				}
			}
			//log.debug(o_fp0+" queryProjectStatusFromCache.key1(not):"+queryKey);
			return false;
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		/**
		 * 根据对端工程映射
		 * @param local_project
		 * @param remote
		 * @param remote_project
		 * @return
		 */
		private String projectRemoteMapingSuspect(String local_project,String remote,String remote_project)
		{
			if(StringUtils.isBlank(remote) || remote=="99")
			{
				return this.projectMapingSuspect(local_project) ;
			}
			if(local_project!="0")
			{
				return this.projectMapingSuspect(local_project);
			}
			int re = Integer.parseInt(remote);
			try{
				switch(re)
				{
					case 0:
						return "6";
					case 1:
						try{
							int i = Integer.parseInt(remote_project);
							switch(i)
							{
								case 1:
									return "27";
								case 2:
									return "28";
								case 3:
									return "29";
								case 4:
									return "30";
								case 5:
									return "31";
								case 6:
									return "32";
								case 12:
									return "33";
								case 13:
									return "36";
								case 14:
									return "37";
								case 15:
									return "39";
								default:
									return "1";
							}
						}catch(Exception e)
						{
							return "1";

						}
					case 2:
						return "15";
					case 3:
					case 6:
						return "17";
					case 4:
						return "6";
					case 5:
						return "18";
					case 7:
						return "7";
					case 8:
						return "16";
					case 9:
						return "40";
					case 10:
						return "41";
					case 11:
						return "42";
					case 12:
						return "43";
					case 13:
						return "44";
					default:
						return this.projectMapingSuspect(local_project);
				}
			}catch(Exception e){

				return this.projectMapingSuspect(local_project);
			}
		}

		// 工程状态标注“疑似违规操作”标签：提前操作引发的告警增加监测机制需求（CMCC-GD-DRITXQ-20210513-008）
		/**
		 * 本端工程状态映射
		 * @param key
		 * @return
		 */
		private String projectMapingSuspect(String key)
		{
			if(StringUtils.isBlank(key))
			{
				return "";
			}
			try{
				int i = Integer.parseInt(key);
				switch(i)
				{
					case 1:
						return "3";
					case 2:
						return "4";
					case 3:
						return "5";
					case 4:
						return "8";
					case 5:
						return "9";
					case 6:
						return "10";
					case 12:
						return "12";
					case 13:
						return "13";
					case 14:
						return "14";
					case 15:
						return "38";
					case 45:
						return "45";
					case 60:
						return "60";
					default:
						return "1";
				}
			}catch(Exception e)
			{
				return "1";

			}
		}

	  // =======================================================================
	  // 故障管理自采告警：rthandler逻辑（原69.128、69.128逻辑）
	  // =======================================================================

		/**
		 * 在此完成变量的初始化1406消息的过程
		 * 正常只需要从dest这里面进行取值，即1406消息，1.7即使关闭了公共逻辑120到1406的赋值也已经完成
		 * 如果只能从120的消息里面才能取到值可以从dest这个里面取如：
		 * o_SyncCType = dest.getString("SyncCType");
		 * @param dest 代表 120消息的数据
		 */
		private void initRthandler(CommonAlarm src,CommonAlarm dest) {
		  o_fp0                   	=dest.getString("fp0");
		  o_fp1                   	=dest.getString("fp1");
		  o_fp2                  	 	=dest.getString("fp2");
		  o_fp3                   	=dest.getString("fp3");
		  o_c_fp0                 	=dest.getString("c_fp0");
		  o_c_fp1                 	=dest.getString("c_fp1");
		  o_c_fp2                 	=dest.getString("c_fp2");
		  o_c_fp3                 	=dest.getString("c_fp3");
		  o_time_stamp            	=dest.getString("time_stamp");
		  o_int_id                	=dest.getString("int_id");
		  o_object_class          	=dest.getString("object_class");
		  o_alarm_title           	=dest.getString("alarm_title");
		  o_event_time            	=dest.getString("event_time");
		  o_org_severity          	=dest.getString("org_severity");
		  o_redefine_severity     	=dest.getString("redefine_severity");
		  o_group_severity        	=dest.getString("group_severity");
		  o_region_severity       	=dest.getString("region_severity");
		  o_vendor_severity       	=dest.getString("vendor_severity");
		  o_org_type              	=dest.getString("org_type");
		  o_redefine_type         	=dest.getString("redefine_type");
		  o_vendor_type           	=dest.getString("vendor_type");
		  o_active_status         	=dest.getString("active_status");
		  o_alarm_text            	=dest.getString("alarm_text");
		  o_omc_id                	=dest.getString("omc_id");
		  o_omc_alarm_id          	=dest.getString("omc_alarm_id");
		  o_probable_cause        	=dest.getString("probable_cause");
		  o_probable_cause_txt    	=dest.getString("probable_cause_txt");
		  o_locate_info           	=dest.getString("locate_info");
		  o_related_tkgp          	=dest.getString("related_tkgp");
		  o_corr_str              	=dest.getString("corr_str");
		  o_type_keycode          	=dest.getString("type_keycode");
		  o_channel_type          	=dest.getString("channel_type");
		  o_special_field0        	=dest.getString("special_field0");
		  o_special_field1        	=dest.getString("special_field1");
		  o_special_field2        	=dest.getString("special_field2");
		  o_special_field3        	=dest.getString("special_field3");
		  o_special_field4        	=dest.getString("special_field4");
		  o_special_field5        	=dest.getString("special_field5");
		  o_special_field6        	=dest.getString("special_field6");
		  o_special_field7        	=dest.getString("special_field7");
		  o_special_field8        	=dest.getString("special_field8");
		  o_special_field9        	=dest.getString("special_field9");
		  o_special_field10       	=dest.getString("special_field10");
		  o_special_field11       	=dest.getString("special_field11");
		  o_special_field12       	=dest.getString("special_field12");
		  o_special_field13       	=dest.getString("special_field13");
		  o_special_field14       	=dest.getString("special_field14");
		  o_special_field15       	=dest.getString("special_field15");
		  o_special_field16       	=dest.getString("special_field16");
		  o_special_field17       	=dest.getString("special_field17");
		  o_special_field18       	=dest.getString("special_field18");
		  o_special_field19       	=dest.getString("special_field19");
		  o_special_field20       	=dest.getString("special_field20");
		  o_special_field21       	=dest.getString("special_field21");
		  o_special_field22       	=dest.getString("special_field22");
		  o_special_field23       	=dest.getString("special_field23");
		  o_ParentIntId           	=dest.getString("ParentIntId");
		  o_ParentObjectClass     	=dest.getString("ParentObjectClass");
		  o_alarm_unit            	=dest.getString("alarm_unit");
		  o_alarm_content         	=dest.getString("alarm_content");
		  o_sub_alarm_type        	=dest.getString("sub_alarm_type");
		  o_alarm_origin          	=dest.getString("alarm_origin");
		  o_port_num              	=dest.getString("port_num");
		  o_channel_num           	=dest.getString("channel_num");
		  o_site_no               	=dest.getString("site_no");
		  o_circuit_no            	=dest.getString("circuit_no");
		  o_link_office           	=dest.getString("link_office");
		  o_alarm_source          	=dest.getString("alarm_source");
		  o_professional_type     	=dest.getString("professional_type");
		  o_locate_name           	=dest.getString("locate_name");
		  o_title_text            	=dest.getString("title_text");
		  o_vendor_id             	=dest.getString("vendor_id");
		  o_province_name         	=dest.getString("province_name");
		  o_city_name             	=dest.getString("city_name");
		  o_resource_status       	=dest.getString("resource_status");
		  o_ne_label              	=dest.getString("ne_label");
		  o_ne_alias              	=dest.getString("ne_alias");
		  //o_severity_keycode				=dest.getString("severity_keycode");
		  o_severity_keycode        =dest.getString("network_type");

		  o_region_id             	=dest.getString("region_id");
		  o_region_name           	=dest.getString("region_name");
		  o_extra_string1         	="";
		  o_extra_string2       		=dest.getString("extra_string2");
		  o_extra_string3       		=dest.getString("extra_string3");
		  o_extra_id1             	=dest.getString("extra_id1");
		  o_extra_id2             	=dest.getString("extra_id2");
		  o_extra_id3             	=dest.getString("extra_id3");
		  o_province_id           	=dest.getString("province_id");
		  o_city_id               	=dest.getString("city_id");
		  o_event_id              	=dest.getString("event_id");
		  o_event_cat             	=dest.getString("event_cat");
		  o_tmsc_cat             		=dest.getString("tmsc_cat");
		  o_stp_cat               	=dest.getString("stp_cat");
		  o_vendor_name           	=dest.getString("vendor_name");
		  o_alarm_resource_status 	=dest.getString("alarm_resource_status");
		  o_nms_name              	=dest.getString("nms_name");
		  o_ne_location           	=dest.getString("ne_location");
		  o_standard_flag				=dest.getString("standard_flag");
		  o_object_level          	=dest.getString("object_level");
		  o_circuit_id				=dest.getString("circuit_id");
		  o_standard_alarm_name_id	=dest.getString("standard_alarm_name_id");
		  o_gcss_client  				=dest.getString("gcss_client");
		  o_gcss_client_num  			=dest.getString("gcss_client_num");
		  o_gcss_client_name  		=dest.getString("gcss_client_name");
		  o_gcss_client_level  		=dest.getString("gcss_client_level");
		  o_gcss_service  			=dest.getString("gcss_service");
		  o_gcss_service_num  		=dest.getString("gcss_service_num");
		  o_gcss_service_type  		=dest.getString("gcss_service_type");
		  o_gcss_service_level  		=dest.getString("gcss_service_level");
		  o_gcss_client_grade			=dest.getString("gcss_client_grade");
		  o_gcss_client_grade_mgt		=dest.getString("gcss_client_grade_mgt");
		  o_remote_resource_status	=dest.getString("remote_resource_status");
		  o_alarm_eqp_status			=dest.getString("alarm_eqp_status");
		  o_remote_proj_sub_status	="";
		  o_standard_alarm_name	  	=dest.getString("standard_alarm_name");
		  o_eqp_int_id            	=dest.getString("eqp_int_id");
		  o_eqp_version           	=dest.getString("eqp_version") ;
		  o_eqp_label             	=dest.getString("eqp_label")  ;
		  o_eqp_alias             	=dest.getString("eqp_alias")  ;
		  o_eqp_object_class      	=dest.getString("eqp_object_class") ;
		  o_ne_status             	=dest.getString("ne_status")  ;
		  o_alarm_ne_status       	=dest.getString("alarm_ne_status")   ;
		  i_alarm_ne_status       	=dest.getString("alarm_ne_status")   ;
		  o_logic_alarm_type      	=dest.getString("logic_alarm_type");
		  o_logic_sub_alarm_type  	=dest.getString("logic_sub_alarm_type");
		  o_send_jt_flag          	=dest.getString("send_jt_flag");
		  o_standard_alarm_id     	=dest.getString("standard_alarm_id");
		  o_effect_ne             	=dest.getString("effect_ne");
		  o_effect_service        	=dest.getString("effect_service");
		  o_preprocess_manner      	=dest.getString("preprocess_manner");
		  o_province_process_flag  	=dest.getString("province_process_flag");
		  o_department_process_flag	=dest.getString("department_process_flag");
		  o_alarm_act_count       	=dest.getString("alarm_act_count");
		  o_nms_alarm_id		      	=dest.getString("nms_alarm_id");
		  o_correlate_alarm_flag  	=dest.getString("correlate_alarm_flag");
		  o_ne_admin_status       	=dest.getString("ne_admin_status");
		  o_alarm_value            	=dest.getString("alarm_value");
		  o_no_has_source_table    	=dest.getString("no_has_source_table");
		  o_alarm_fp 					=dest.getString("alarm_fp");
		  o_alarm_c_fp				=dest.getString("alarm_c_fp");
		  o_sys_vendor_id				=dest.getString("sys_vendor_id");
		  o_eqp_ip					=dest.getString("eqp_ip");
		  o_eqp_severity				=dest.getString("eqp_severity");
		  o_maintain_man				=dest.getString("maintain_man");
		  o_eqp_operation_status		=dest.getString("eqp_operation_status");
		  o_alarm_locate_object		=dest.getString("alarm_locate_object");
		  o_alarm_object_severity		=dest.getString("alarm_object_severity");
		  o_related_information		=dest.getString("related_information");
		  o_alarm_memo				=dest.getString("alarm_memo");
		  o_business_area				=dest.getString("business_area");
		  o_cancel_time				=dest.getString("cancel_time");
		  o_ack_flag					=dest.getString("ack_flag");
		  o_ack_user					=dest.getString("ack_user");
		  o_ack_time					=dest.getString("ack_time");
		  o_ack_terminal				=dest.getString("ack_terminal");
		  o_attachment				=dest.getString("attachment");
		  o_ticket_confirm_manner		=dest.getString("ticket_confirm_manner");
		  o_remote_int_id				=dest.getString("remote_int_id");
		  o_remote_eqp_label			=dest.getString("remote_eqp_label");
		  o_remote_eqp_alias			=dest.getString("remote_eqp_alias");
		  o_proj_name					=dest.getString("proj_name");
		  o_proj_oa_file_id			=dest.getString("proj_oa_file_id");
		  o_business_region_ids		=dest.getString("business_region_ids");
		  o_business_regions			=dest.getString("business_regions");
		  o_remote_object_class		=dest.getString("remote_object_class");
		  o_eoms_network_type			=dest.getString("eoms_network_type");
		  //o_circuit_level = dest.getString("circuit_level");
		  o_circuit_level = "";
		  //高铁,add by liuaiyong@20150624
		  o_alarm_important_level 	=dest.getString("alarm_important_level");
		  o_effect_circuit_num 		=dest.getString("effect_circuit_num");
		  o_interrupt_circuit_id	=	dest.getString("interrupt_circuit_id");
		  o_interrupt_circuit_no	=	dest.getString("interrupt_circuit_no");
		  o_interrupt_circuit_state	=	dest.getString("interrupt_circuit_state");
		  o_interrupt_gcss_client_level	=	dest.getString("interrupt_gcss_client_level");
		  o_network_type_top	=	dest.getString("network_type_top");
		  o_remark_exist	=	dest.getString("remark_exist");
		  o_service_crossdomain_type	=	dest.getString("service_crossdomain_type");
		  o_site_info	=	dest.getString("site_info");
		  o_site_type	=	dest.getString("site_type");
		  //RRU 20150624 add fuwei
		  o_rlocate_ne_int_id = dest.getString("rlocate_ne_int_id");
		  o_rlocate_ne_name =dest.getString("rlocate_ne_name");
		  o_rlocate_ne_type =dest.getString("rlocate_ne_type");
		  o_ne_sub_type = dest.getString("ne_sub_type");
		  //新增家客,add by liucaiyong@20160412
		  o_link_onu_num = dest.getString("link_onu_num");
		  o_home_client_num = dest.getString("home_client_num");

		  o_alarm_reason = dest.getString("alarm_reason");
		  o_scence_type = dest.getString("scence_type");
		  o_site_poweroff = dest.getString("site_poweroff");
		  o_business_type = dest.getString("business_type");
		  o_gcss_service_sub_type = dest.getString("gcss_service_sub_type");
		  o_gcss_service_code = dest.getString("gcss_service_code");
			// o_msgserial = dest.getString("MsgSerial");
			o_proj_time = "";
			o_group_name = "";
		  o_network_type	= "";
		  dest.setValue("network_type","");
		  //if(o_omc_id == "6601" || o_omc_id == "6602" || o_omc_id == "6607" || o_professional_type == "3"){
		  if(o_omc_id in ["6601","6602","6603","6607"]  || o_professional_type == "3"){
		    o_special_field10       =o_no_has_source_table;
		    o_special_field12       =o_alarm_c_fp;
		    o_special_field13       =o_eqp_ip;
		    o_special_field14       =o_eqp_severity;
		    if(o_professional_type != "3"){
		      //传输告警增加对端网元的网络类型信息，added by shanchunlan@20150420
		      o_special_field11       =o_alarm_fp;
		      o_special_field15       =o_maintain_man;
		    }
		    o_special_field23       =o_eqp_operation_status;
		    o_special_field17       =o_alarm_locate_object;
		    if(o_omc_id != "6607"){
		      o_special_field18       =o_alarm_object_severity;
		    }
		    if(o_omc_id != "6601" && o_omc_id != "6602" && o_omc_id != "6603"){
		        o_special_field19       =o_related_information;
		    }
		    //o_special_field20       =o_alarm_memo;
		    o_sys_vendor_id         =o_sys_vendor_id;
		    o_corr_str              =o_business_area  ;

		    o_nms_alarm_id		    =dest.getString("alarm_fp");
		  }


		  //if(o_omc_id == "15001" || o_omc_id == "15002" || o_omc_id == "15003")
		  if(o_professional_type == "3")
		  {
		    o_ne_status       = o_resource_status;
		    o_alarm_ne_status = o_alarm_resource_status;
		    o_extra_string1         =dest.getString("extra_string1");
		    o_extra_string2       	=dest.getString("extra_string2");
		    o_nms_name = o_extra_string1;
		    //告警解释extra_string2,added by sunyuqiu@20140521
		    //o_special_field6 = o_extra_string2;
		    o_special_field6 = o_corr_str;
		    o_special_field7 = o_extra_string3;
		    o_alarm_content = o_ne_label ;
		    //告警解释extra_string2,added by sunyuqiu@20140521
		    //o_extra_string2="";
		    o_extra_string3="";
		  }
		  if(o_omc_id in ["6601","6602","6603","6607","6608"])
		  {
		    o_alarm_ne_status=o_alarm_resource_status;
		    o_extra_string2  =dest.getString("extra_string2");
		    o_eqp_int_id            	=o_eqp_int_id;
		    o_eqp_object_class      	=o_eqp_object_class ;
		    o_alarm_content 			=o_ne_label ;
		    o_extra_string1         =dest.getString("extra_string1");
		    //liucaiyong@20181212,标准化类型调准
		    if(o_eqp_object_class == "66003"){
		      o_eqp_object_class = "900";//路由器
		    }
		     if(o_eqp_object_class == "3004"){
		      o_eqp_object_class = "905";//交换机
		    }
		     if(o_eqp_object_class == "221"){
		      o_eqp_object_class = "901";//防火墙
		    }
		    if(o_object_class == "66003"){
		      o_object_class = "900";//路由器
		    }
		     if(o_object_class == "3004"){
		      o_object_class = "905";//交换机
		    }
		     if(o_object_class == "221"){
		      o_object_class = "901";//防火墙
		    }


		  }
		  if(o_omc_id == "1042")
		  {
		    o_extra_string1         =dest.getString("extra_string1");
		  }
		  this.gdWlanRthandler();

		  i_special_field16 = dest.getString("special_field16");
		  i_special_field18 = dest.getString("special_field18");//1016
		  i_vendor_name=o_vendor_name;
		  i_VendorId=o_vendor_id ;
		  i_network_type = o_severity_keycode;
		  i_extra_id2=o_extra_id2;
		  i_extra_id3=o_extra_id3;
		  i_special_field17 = o_special_field17;
		  i_int_id = dest.getString("int_id");
		  i_eqp_int_id = dest.getString("eqp_int_id");
		  i_title_text = dest.getString("title_text");
		  i_ne_label              	=dest.getString("ne_label");

		  event_time=dest.getDate("event_time");
		  gcss_service_region="";
		  t_gc_service_id="";
		  t_gc_client_id="";
		  i_city_name=o_city_name;
		  t_related_bsc="";
		  i_pstr="";
		  product_no="";
		  //OLT脱管场景一，初始化 by yjb@20190214
		  o_hotel_flag = "";


		  o_alarm_check 		=dest.getString("alarm_check");
		  o_layer_rate 		=dest.getString("layer_rate");
		  o_alarm_explanation 		=dest.getString("alarm_explanation");
		  o_alarm_explanation_addition	=dest.getString("alarm_explanation_addition");

		  o_business_system = "";
		  o_town_id = dest.getString("town_id");
		  o_township = dest.getString("township");
		  o_vm_ids 	= dest.getString("vm_ids");
		  o_pr_ids 	= dest.getString("pr_ids");
		  o_area_type = dest.getString("area_type");
		}

	  /**
		 * 先用城市ID再用城市名称查询地区信息o_severity_keycode
		 * @param city_id
		 * @param city_name
		 */
		private void addResourceForOmcIdRthandler(String city_id,String city_name)
		{
			this.addRegionInfoRthandler(city_id,city_name);
		}

		/**
		 * Wlan 告警特殊赋值
		 */
		private void gdWlanRthandler()
		{
			if(o_omc_id == "1502")
			{
				o_special_field19         =o_related_information;
				o_special_field20         =o_alarm_memo;
				o_corr_str                =o_business_area;
				o_province_id="-1489894494";
				o_province_name="广东省";
			}
		}

		/**
		 * 检查业务需要数据是否可用，不可用直接退出
		 */
		private boolean checkDataRthandler()
		{
			if(StringUtils.isBlank(o_int_id))
			{
				return false;
			}
			return true;
		}

		/**
		 * 将Objects表中的值封装到Map中以方便使用
		 * 直接通过字段的名辽get取值
		 * @param key
		 * @return
		 */
		private Map getObjectsValueWithMapRthandler(String key,String taskName)
		{
			Map map = new HashMap();
			Object[] objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,taskName);
			List olist= objects == null ? null : Arrays.asList(objects);
			if(olist!=null&&!olist.isEmpty())
			{
				map.put("int_id", Util.getTempV(olist, 0));
				map.put("vendor_id", Util.getTempV(olist, 1));
				map.put("network_type", Util.getTempV(olist, 2));
				map.put("tmsc_cat", Util.getTempV(olist, 3));
				map.put("stp_cat", Util.getTempV(olist, 4));
				map.put("resource_status", Util.getTempV(olist, 5));
				map.put("userlabel", Util.getTempV(olist, 6));
				map.put("locationname", Util.getTempV(olist, 7));
				map.put("city_id", Util.getTempV(olist, 8));
				map.put("province_id", Util.getTempV(olist, 9));
				map.put("zh_label", Util.getTempV(olist, 10));
				map.put("parent_int_id", Util.getTempV(olist, 11));
				map.put("related_bsc", Util.getTempV(olist, 12));
				map.put("related_omc", Util.getTempV(olist, 13));
				map.put("version", Util.getTempV(olist, 14));
				map.put("related_ne1", Util.getTempV(olist, 15));
				map.put("related_ne2", Util.getTempV(olist, 16));
				map.put("object_class", Util.getTempV(olist, 17));
				map.put("mss_cat", Util.getTempV(olist, 18));
				map.put("related_ne3", Util.getTempV(olist, 19));
				map.put("machroom_id", Util.getTempV(olist, 20));
				map.put("project_status", Util.getTempV(olist, 21));
				map.put("confirmed", Util.getTempV(olist, 22));
		  map.put("resourcesid", Util.getTempV(olist, 23));
				map.put("upd_flag", Util.getTempV(olist, 24));
			}
			return map;
		}
		/**
		 * 通过city_id查找地区信息
		 * @param city_id
		 */
		private void addVendorNameRthandler(String vendor_id)
		{
			if(StringUtils.isNotBlank(vendor_id)){
				String vendorKey = "vendor_name:"+vendor_id;
				Object[] vendors =  (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, vendorKey,"vendor_name");
				List vendorList= vendors == null ? null : Arrays.asList(vendors);
				if(vendorList!=null&&!vendorList.isEmpty())
				{
					o_vendor_name=Util.getTempV(vendorList, 2);
				}
			}
		}

		/**
		 * 通过city_id查找地区信息
		 * @param city_id
		 */
		private void addRegionInfoRthandler(String city_id,String city_name)
		{
			if(StringUtils.isNotBlank(city_id)){
				// String cityKey="region_city_local:"+city_id;
				// Object[] city = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, cityKey,"region_city_local.1");
				// List cityList = city == null ? null : Arrays.asList(city);
				// if(cityList!=null&&!cityList.isEmpty()){
				// 	o_city_id=Util.getTempV(cityList, 0);
				// 	o_province_name=Util.getTempV(cityList, 1);
				// 	o_province_id=Util.getTempV(cityList, 2);
				// 	o_region_name=Util.getTempV(cityList, 3);
				// 	o_region_id=Util.getTempV(cityList, 4);
				// 	o_city_name=Util.getTempV(cityList, 5);
				// }
				// 迁移到private void getCityInfoWithMap，取消从缓存中获取地市信息
				this.getCityInfoWithMap(city_id);
				if(!cityMap.isEmpty()){
				    o_province_id   = cityMap.get("province_id");
				    o_province_name = cityMap.get("province_name");
				    o_region_id     = cityMap.get("region_id");
				    o_region_name   = cityMap.get("region_name");
				    o_city_id       = cityMap.get("city_id");
				    o_city_name     = cityMap.get("city_name");
				}
			}
			else
			{	if(StringUtils.isBlank(city_name))
				{
					return;
				}
				String per = "市";
				if(city_name.indexOf(per)==-1)
				{
					city_name=city_name+per;
				}
				// String keyRegion="region_city_local:"+city_name;
				// Map map = this.getRegionInfoWithMapRthandler(keyRegion,"region_city_local.2");
				// if(!map.isEmpty()){
				// 	o_province_id=map.get("province_id");
				// 	o_province_name=map.get("province_name");
				// 	o_region_id  =map.get("region_id");
				// 	o_region_name=map.get("region_name");
				// 	o_city_id    =map.get("city_id");
				// 	o_city_name  =map.get("city_name");
				// }
				// 迁移到private void getCityInfoWithMap，取消从缓存中获取地市信息
				this.getCityInfoWithMap(city_name);
				if(!cityMap.isEmpty()){
				    o_province_id   = cityMap.get("province_id");
				    o_province_name = cityMap.get("province_name");
				    o_region_id     = cityMap.get("region_id");
				    o_region_name   = cityMap.get("region_name");
				    o_city_id       = cityMap.get("city_id");
				    o_city_name     = cityMap.get("city_name");
				}
			}
		}

		/**
		 * 地区信息映射工具方法
		 * @param key
		 * @return
		 */
		// 迁移到private String getCityInfoWithMap，取消从缓存中获取地市信息
		// private Map getRegionInfoWithMapRthandler(String key,String taskName)
		// {
		// 	Map map = new HashMap();
		// 	Object[] city = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,taskName);
		// 	List cityList = city == null ? null : Arrays.asList(city);
		// 	if(cityList!=null&&!cityList.isEmpty())
		// 	{
		// 		map.put("city_id", Util.getTempV(cityList, 0));
		// 		map.put("province_name", Util.getTempV(cityList, 1));
		// 		map.put("province_id", Util.getTempV(cityList, 2));
		// 		map.put("region_name", Util.getTempV(cityList, 3));
		// 		map.put("region_id", Util.getTempV(cityList, 4));
		// 		map.put("city_name", Util.getTempV(cityList, 5));
		// 	}
		// 	return map;
		// }

		/**
		 * 用于设置标准化信息
		 * 对不同厂家不同的Key进行查询
		 * @param key
		 */
		private void setAlarmStandardInfoRthandler(String key,String taskName)
		{
			Object[] stand = util.getObject(this.ALARMSTANDARDCACHE, key,taskName)
			List olist = stand==null?null:Arrays.asList(stand);
			if (olist != null&&!olist.isEmpty()) {
				o_severity_keycode=Util.getTempV(olist, 1);
				o_org_severity=Util.getTempV(olist, 2);
				o_redefine_type=Util.getTempV(olist, 4);
				o_send_jt_flag=Util.getTempV(olist, 3);
				o_logic_alarm_type=Util.getTempV(olist, 5);
				o_logic_sub_alarm_type=Util.getTempV(olist, 6);
				o_standard_alarm_name=Util.getTempV(olist,7);
				o_standard_alarm_id=Util.getTempV(olist, 8);
				o_effect_ne=Util.getTempV(olist, 9);
				o_effect_service=Util.getTempV(olist, 10);
				o_alarm_value=Util.getTempV(olist, 11);
				o_preprocess_manner=Util.getTempV(olist, 12);
				o_province_process_flag=Util.getTempV(olist, 13);
				o_department_process_flag=Util.getTempV(olist, 14);
				o_ticket_confirm_manner=Util.getTempV(olist, 15);
				//o_eqp_object_class=Util.getTempV(olist, 20);
				o_standard_flag="2";
		//IT网管告警解释赋值 added by lgy@20180717  required by shanchunlan
		  if((o_omc_id == "6601" || o_omc_id == "6602"|| o_omc_id == "6603")&&o_professional_type == "5" )
			 {
				  o_special_field20 = Util.getTempV(olist, 27);
			 }
			}else if(o_omc_id=="6601"||o_omc_id=="6602"){
				o_org_severity="2";
				o_standard_flag="3";
				o_redefine_type=o_org_type;
			}else {
				o_org_severity="1";
				o_standard_flag="3";
				o_send_jt_flag="0";
				o_redefine_type=o_org_type;
			}
			o_redefine_severity = o_org_severity;
		}

		/**
		 * 字典数据映射
		 * @param key
		 * @return
		 */
		private String getDictValueRthandler(String key,String taskName)
		{
			Object[] dict = util.getObject(this.CUSTOMCACHE, key,taskName)
			List olist = dict==null?null:Arrays.asList(dict);
			String id="";
			if(olist!=null&&!olist.isEmpty())
			{
				id=Util.getTempV(olist, 0);
			}
			return id;
		}
		/**
		 * int_id,           	0
		 vendor_id,			1
		 network_type,		2
		 tmsc_cat,			3
		 stp_cat,			4
		 resource_status,	5
		 userlabel,			6
		 locationname,		7
		 city_id,			8
		 province_id,		9
		 zh_label,			10
		 parent_int_id,		11
		 related_bsc,		12
		 related_omc,		13
		 version,			14
		 related_ne1,		15
		 related_ne2,		16
		 object_class,		17
		 mss_cat,			18
		 related_ne3,		19
		 machroom_id,		20
		 project_status 		21
		 from objects
		 */
		/**
		*分级派单标星
		*added by lgy@20180419  CMCC-GD-DRITXQ-20180322-014
		*/
		private void MarkStarsRthandler()
		{
			if(o_professional_type == "3" && o_group_id != null && o_group_id.contains("-2123195864")&&o_group_id.contains("-1378028327"))
		{
			if(o_gcss_service_level=="0"||o_gcss_service_level=="-1" ||o_group_id.contains("-303091744")||o_group_id.contains("313138458")){
				o_special_field0="★★★★★";
				return;
			}
				//查找大容量OLT（用户数300以上）
				String Keys=joinKeyRthandler("res_largeOLT", o_eqp_int_id);
			  Object[]  Objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,Keys,"res_largeOLT");
			  if(Objects!=null&&Objects.length>0){
				  o_special_field0="★★★★★";
					return;
			  }

			//传输网元关联高铁基站业务
			   String tkey = "";
			   String task="circuit_area_relation";
				String[] cids = o_circuit_id.split(",");
				for(String cid:cids)
				{
					if(StringUtils.isBlank(cid))
						continue;
					   tkey =this.joinKeyRthandler(task,cid);
					   List results = util.getObject(this.CUSTOMCACHE,tkey,task);
				  if (results!=null && !results.isEmpty()){
					  o_special_field0="★★★★★";
					  break;
				  }
			 }
			   }
		}
		/**
		 * 重点网点
		 */
		private void findImportandNodeRthandler()
		{
			String key="tfa_alarm_ne_monitor@"+o_object_class+"@"+o_ne_label;
			Object[] neMonitor = util.getObject(this.CUSTOMCACHE, key,"tfa_alarm_ne_monitor");
			List nmlist = neMonitor==null?null:Arrays.asList(neMonitor);
			if(nmlist!=null&&!nmlist.isEmpty())
			{
				o_special_field0 = Util.getTempV(nmlist, 0);
				//o_special_field1 = Util.getTempV(nmlist, 1);
				//o_special_field2 = Util.getTempV(nmlist, 2);
				//o_special_field3 = Util.getTempV(nmlist, 3);
			}

			key="tfa_alarm_title_monitor:"+o_standard_alarm_id;
			neMonitor = util.getObject(this.CUSTOMCACHE, key,"tfa_alarm_title_monitor");
			nmlist = neMonitor==null?null:Arrays.asList(neMonitor);
			String ne_severity = "";
			if(nmlist!=null&&!nmlist.isEmpty())
			{
				ne_severity = Util.getTempV(nmlist, 0);
			}
			if(StringUtils.isNotBlank(ne_severity) && ne_severity.length()>o_special_field0.length())
			{
				o_special_field0 = ne_severity;
			}
			//基站市电告警，且共站机房属性=OLT共站  20160517 shanchunlan
			if (o_object_class in ["201","9210","8104","41011"] && o_sub_alarm_type in ["531"] && o_site_info == "1" )
			{
			   o_special_field0="★★★★★";
			}
		}

		/**
		 * 主动监控处理
		 */
		private void gdZhuDongJianKongRthandler()
		{

			if (o_alarm_title =="2270081"||o_alarm_title =="2270089")
			{
				o_object_class = "200";
				o_eqp_object_class = o_object_class;

			}

			//性能告警专业匹配，shichao @2014051317
			if(o_org_type=="2")
			{
				//HSS-话音网
				if(o_eqp_object_class in ["8109"])
				{
					o_professional_type = "1";
				}
				//MME\SGW\PGW-数据网
				if(o_eqp_object_class in ["8101","8102","8103"])
				{
					o_professional_type = "2";
				}
				//主动监控版本升级导致omc_alarm_id过长,shichao@20151204
				if(o_nms_name == "BOCO_WNMS"){
					if(o_omc_alarm_id.length()>9){
						o_omc_alarm_id = "";
					}
				}
			}
			//if (o_title_text in ["重点业务TCP建立连接成功率低（5分钟）","重点业务HTTP请求响应成功率低（5分钟）"])
			//{
			 //   o_ne_label = o_locate_info;
					  //  o_eqp_label = o_ne_label;
					  //  o_int_id = Util.getCRC32(this.joinKeyRthandler(o_object_class,o_ne_label));
					  //  o_eqp_int_id = o_int_id;
			//}
		}

		/**
		 * bsc 的 ne_status赋值
		 */
		private void bscStatusRthandler()
		{
			//if ( (o_object_class == "201" || o_object_class == "300") )
			//updated by liucaiyong@2013122319,网优资源网元状态与objects表不一致
			if ( (o_object_class == "201" || o_object_class == "300")&& StringUtils.isBlank(o_ne_status))
			{
				if( t_related_bsc != null && t_related_bsc != "" ){
					String bscKey=joinKeyRthandler("objects", t_related_bsc);
					Map map = this.getObjectsValueWithMapRthandler(bscKey,"objects");
					if(map.size()>0)
					{
						String bsc_label=map.get("userlabel");
						if( bsc_label !=null && bsc_label !="" ){
							String key=joinKeyRthandler("neStatus", o_ne_label, bsc_label);
							Object[] objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,"bscStatus");
							if(objects != null){
								o_ne_status=""+objects[0]
							}
						}
					}
				}
			}
		}

		/**
		 * 智能巡检
		 */
		private void zhiNengXunJianRthandler()
		{
			if (o_vendor_type == "智能巡检告警" )
			{
				o_vendor_name = i_vendor_name;
				o_vendor_id = i_VendorId;
			}
		}
		/**
		 * 本地需要一些预处理的业务逻辑
		 */
		private void setPrepareProcessorRthandler()
		{
			//上报业务系统,lcy@190226
			//if(o_omc_id in ["6601","6602","6603","6607","6608"]){
				if(o_network_type_top == "12" && o_network_type == "1202" && o_vendor_id in ["101","104"] && o_eqp_object_class == "40090" ){
					o_business_system = "AAA";
				}else if(o_network_type_top == "3" && o_network_type == "302" && o_vendor_id == "995" && o_eqp_object_class == "3017"){
					o_business_system = "DNS";
				}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id == "1" && o_eqp_object_class == "1007"){
					o_business_system = "LBS";
				}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id == "1144" && o_eqp_object_class == "150919"){
					o_business_system = "MISC";
				}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id == "8" && o_eqp_object_class == "140"){
					o_business_system = "彩铃";
				}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id in ["7","8"] && o_eqp_object_class == "904"){
					o_business_system = "彩信";
				}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id == "8" && o_eqp_object_class == "1023"){
					o_business_system = "行业网关";
				}else if(o_network_type_top == "8" && o_network_type == "801" && o_vendor_id == "8" && o_eqp_object_class == "66038"){
					o_business_system = "来电提醒";
				}else if(o_network_type_top == "8" && o_network_type == "802" && o_vendor_id == "8" && o_eqp_object_class == "111"){
					o_business_system = "智能网平台";
				}
			//}

			//lgy@20190226，传输二干PTN，网元标工，required by wangyingfeng
			if (o_professional_type == "3" && o_eqp_object_class == "2009" && StringUtils.isNotBlank(o_ne_label) && StringUtils.isNotBlank(o_eqp_label)) {
				String tmp = o_ne_label.replace(o_eqp_label, "");
				log.info(o_fp0 + "  ne_label=[" + o_ne_label + "],eqp_label=[" + o_eqp_label + "],告警定位对象名称-网元名称=[" + tmp + "]");
				if (tmp.contains("工程") || tmp.contains("调测") || tmp.contains("停闭") || tmp.contains("施工")) {
					o_alarm_resource_status = "25";
					o_alarm_ne_status = o_alarm_resource_status;
					i_alarm_ne_status = o_alarm_ne_status;
				} else {
					o_alarm_resource_status = "1";
					o_alarm_ne_status = o_alarm_resource_status;
				}
		}

			if (o_org_type == "2")
			{
				this.gdZhuDongJianKongRthandler();
			}
			else if( !(o_org_type=="4" && o_vendor_type =="网元挂牌监控告警" ) )
			{
				o_org_type="1";
			}

			//重点网元监控处理
			//if (o_object_class in [ "101","102","108","111","112","120","122","130","131","200","3302","9200"])
			//{
			//this.findImportandNodeRthandler();
			//}


			if(o_eqp_int_id=="-869583732" && o_eqp_label =="WNMS-DAL-NODE")
			{
				o_standard_flag ="2";
				o_eqp_int_id = o_int_id;
				o_eqp_label  = o_ne_label;
				o_eqp_object_class=o_object_class;
				o_resource_status =o_ne_status;
				o_alarm_ne_status =o_ne_status;
			}


			//VIP属性功能合并到corr_str,by shanchunlan@2014061311
			//1.300[nrmdb.bts]\201[btssitemanager]->同一来源[btssitemanager];2.由仅华为到不限定厂家
			if(o_object_class == "201"||o_object_class == "300")
			{
				String key="myWixianBtssitemanager:";
				if(o_object_class == "300")
				{
			 String tmpkey = "bts:"+o_int_id;
					 Object[] bts_ = util.getObject(this.CUSTOMCACHE,tmpkey,"nrmdb.bts");
			 List btsList_ = bts_==null?null:Arrays.asList(bts_);
			 if(btsList_!=null&&!btsList_.isEmpty())
			 {
				 o_special_field21 = vipCellMapingRthandler( Util.getTempV(btsList_, 3));
				 o_object_level = vipCellLevelMapingRthandler(Util.getTempV(btsList_, 3));
				 log.debug("nrmdb.bts-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
			 }

					 key+=o_ParentIntId;
				}
				else
				{
					 key+=o_int_id;
				}
				Object[] bts = util.getObject(this.CUSTOMCACHE,key,"wuxianInfomationThree");
				List btsList = bts==null?null:Arrays.asList(bts);
				if(btsList!=null&&!btsList.isEmpty())
				{
					o_corr_str = Util.getTempV(btsList, 2);
					o_type_keycode	=	Util.getTempV(btsList, 5);
			if(o_object_class=="201"){
				o_special_field21 = vipSiteMapingRthandler( Util.getTempV(btsList, 6));
				o_object_level = vipSiteLevelMapingRthandler(Util.getTempV(btsList, 6));
				log.debug("wuxianInfomationThree-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
			}
				}
				else
				{
					o_corr_str="";
					o_type_keycode	=	"";
				}
			}

			//nodeb的告警增加下区县信息 , required by luocheng  ,edited by liucaiyong @2013111917
			if(o_object_class == "9201"||o_object_class == "9300")
			{
				String key="myWixianNodeb:";
				if(o_object_class == "9300")
				{
			 String tmpkey = "utrancell:"+o_int_id;
					 Object[] utrancell = util.getObject(this.CUSTOMCACHE,tmpkey,"nrmdb.utrancell");
			 List utrancellList= utrancell==null?null:Arrays.asList(utrancell);
			 if(utrancellList!=null&&!utrancellList.isEmpty())
			 {
				 o_special_field21 = vipCellMapingRthandler( Util.getTempV(utrancellList, 1));
				 o_object_level = vipCellLevelMapingRthandler(Util.getTempV(utrancellList, 1));
				 log.debug("nrmdb.utrancell-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
			 }

					 key+=o_ParentIntId;
				}
				else
				{
					 key+=o_int_id;
				}
				Object[] nodebs = util.getObject(CUSTOMCACHE, key,"wuxianInfomationFour");
				List nodebList = nodebs==null?null:Arrays.asList(nodebs);
				if(nodebList!=null&&!nodebList.isEmpty())
				{
					o_corr_str = Util.getTempV(nodebList, 2);
					o_type_keycode	=	Util.getTempV(nodebList, 5);
			if(o_object_class=="9201"){
				o_special_field21 = vipSiteMapingRthandler(Util.getTempV(nodebList, 6));
				o_object_level = vipSiteLevelMapingRthandler(Util.getTempV(nodebList, 6));
				log.debug("wuxianInfomationFour-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
			}
				}
				else
				{
					o_corr_str="";
					o_type_keycode	=	"";
				}
			}
			//EnodeB增加区县, shanchunlan@20140516
			//if(o_object_class == "8104"||o_object_class == "8105")
			if(o_object_class in ["8104","8105","41011","270"] )
			{
				String key="myWixianEnodeb:";
				if(o_object_class in ["8105","270"])
				{
				  String tmpkey = "eutrancell:"+o_int_id;
				  // Object[] eutrancell = util.getObject(this.CUSTOMCACHE,tmpkey,"nrmdb.eutrancell");
				  // 合并local-cache和redis外挂缓存资源，避免key值配置有重复
				  List results = util.getObject(CUSTOMCACHE, tmpkey, "eutrancell");
				  int size = results==null?0:results.size();
				  log.debug("fp0-{},key={},list.size={}",o_fp0,tmpkey,size);
				  if(size>0)
				  {
					// o_special_field21 = vipCellMapingRthandler( Util.getTempV(eutrancellList, 1));
					// o_object_level = vipCellLevelMapingRthandler(Util.getTempV(eutrancellList, 1));
					// 合并local-cache和redis外挂缓存资源，避免key值配置有重复
					o_special_field21 = vipCellMapingRthandler(Util.getTempV(results, 5));
					o_object_level = vipCellLevelMapingRthandler(Util.getTempV(results, 5));
					log.debug("eutrancell-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
				  }
				  key+=o_eqp_int_id;
				}
				else{
					 key+=o_int_id;
		  }

				Object[] enodebs = util.getObject(CUSTOMCACHE, key,"wuxianInfomationFive");
				List enodebList = enodebs==null?null:Arrays.asList(enodebs);
				if(enodebList!=null&&!enodebList.isEmpty())
				{
					o_corr_str = Util.getTempV(enodebList, 2);
					o_type_keycode	=	Util.getTempV(enodebList, 4);
			if(o_object_class in ["8104","41011"]){
				o_special_field21 = vipSiteMapingRthandler(Util.getTempV(enodebList, 5));
				o_object_level = vipSiteLevelMapingRthandler(Util.getTempV(enodebList, 5));
				log.debug("wuxianInfomationFive-fp0={}, special_field21={}, object_level={}", o_fp0, o_special_field21, o_object_level);
			}
				}
				else
				{
					o_corr_str="";
					o_type_keycode	=	"";
				}

			}

			//无线基站覆盖类型,by shanchunlan@20141217
			if (o_professional_type=="1" && o_object_class in ["201","300","9201","9300","8104","8105","41011","270"]){
				if(StringUtils.isNotBlank(o_type_keycode)){
					String dickey="tia_alarm_dict@1500@"+o_type_keycode;
					o_type_keycode	=	this.getDictValueRthandler(dickey,"tia_alarm_dict.0");
				}
				if(StringUtils.isBlank(o_type_keycode)){
					o_type_keycode	=	"0";
				}
			} else if (o_professional_type=="5" && o_object_class in ["201","300","9201","9300","8104","8105","41011","270"]){
				// 解决关注事件告警引起类别关键字（type_keycode）字段异常进而过滤器同步失败的问题，无法定位到哪套程序将professional_type解析成"5"
				if(StringUtils.isNotBlank(o_type_keycode)){
					String dickey="tia_alarm_dict@1500@"+o_type_keycode;
					o_type_keycode	=	this.getDictValueRthandler(dickey,"tia_alarm_dict.0");
				}
				if(StringUtils.isBlank(o_type_keycode)){
					o_type_keycode	=	"0";
				}
			}

			//直放站,,shanchulan@20140721--调整o_corr_str以应急标工
			if(o_object_class=="11004")
			{
				o_corr_str=o_business_area;
			}

			//VIP属性-对象级别,by shanchunlan@2014061311
			//if (o_professional_type=="1" && o_object_class in ["201","300","9201","9300","8104","8105"])
			//{
			//	o_object_level = "0";
			//	if (o_special_field21 in ["VIP","VVIP","VVIP类型","超级VIP基站","一级VIP","二级VIP","三级VIP"])
			//	{
			//		o_object_level = "1";
			//	}
			//}

			if (o_object_class == "200" && o_vendor_id == "1" && o_sub_alarm_type == "87")
			{
				def t_sgsn_name;
				//sql = "select related_sgsn from nrmdb.bsc where int_id = " + o_int_id;
				//list = Util.queryBySql("nmosdb", sql);
				String key="bsc:"+o_int_id;
				Object[] bsc = util.getObject(CUSTOMCACHE, key,"nrmdb.bsc");
				List bscList = bsc==null?null:Arrays.asList(bsc);
				if(bscList!=null&&!bscList.isEmpty())
				{
					t_sgsn_name = Util.getTempV(bscList, 0);
				}
				if (StringUtils.isNotBlank(t_sgsn_name))
				{
					o_alarm_text = o_alarm_text + "\n" + "关联SGSN : " + t_sgsn_name;
				}
			}

			if(o_title_text=="SUSPECTED CLONE SIM CARD IN HLR")
			{
				o_special_field7 = o_alarm_unit;
				o_special_field8 = o_special_field22;
				o_special_field9 = o_special_field23;
				o_alarm_unit="";
				o_special_field22="";
				o_special_field23="";
				o_remote_int_id="";
				o_remote_eqp_label="";
				o_remote_eqp_alias="";
			}

			//if(o_omc_id == "6101")   //因移动视频侦测告警没有标识，扩展成动环专业
			if (o_professional_type=="4")
			{
				o_ne_label  = o_eqp_label;

				o_extra_id1 = "2" ;
				// String reg1=new String("广东南方通信大厦".getBytes(),"GBK");
				// String reg2=new String("广东东兴大厦".getBytes(),"GBK");
				// String reg3=new String("广东全球通大厦".getBytes(),"GBK");
		  // String reg4 = new String("广州天河区新全球通大厦".getBytes(), "GBK");
		  String reg5 = new String("广州黄埔区凤凰三横路中国移动A2栋".getBytes(), "GBK");
		  String reg6 = new String("广州黄埔区凤凰三横路中国移动A3栋".getBytes(), "GBK");
				// if (o_special_field19 != null &&(o_special_field19==reg1|| o_special_field19==reg2|| o_special_field19==reg3))
				// {
					// o_extra_id1 = "1" ;
				// } else if (o_special_field19 != null && (o_special_field19 == reg4 || o_special_field19 == reg5 || o_special_field19 == reg6)) {
				if (o_special_field19 != null && (o_special_field19 == reg5 || o_special_field19 == reg6)) {
					// 省管数据中心
			o_extra_id1 = "3";
			}
				o_alarm_content = o_ne_label ;
			}
			if(o_omc_id == "2601" )
			{
				o_alarm_content = o_ne_label ;
			}


			if (o_vendor_id == "81" )
			{
				o_vendor_name = "";
				o_ne_label = o_alarm_content;
				o_eqp_label = o_alarm_content;
				o_eqp_object_class = o_object_class;
				o_alarm_resource_status = "1";
				o_ne_status = "1";
				o_alarm_source = "1";
				o_alarm_ne_status = "1";
				o_resource_status =  "1";
				o_province_id="-1489894494";
				o_province_name="";
				o_org_type = "2";
			}

			//o_locate_info = i_LocateInfo;
			if(o_professional_type!="3" || o_omc_id !="6607"){
				if(o_send_jt_flag == null ||  o_send_jt_flag == ""){
					o_send_jt_flag = "0";
				}
			}

			/**
			 * 20200429 杨晓敏：去掉这段上报集团逻辑   by liucaiyong
			String tmp_key_value;
			String tmp_field_value;
			String tmp_vendor_severity;
			if (o_vendor_id == "1")
			{
				tmp_key_value = o_title_text;
				tmp_vendor_severity =o_org_severity;
			}
			else if (o_vendor_id == "8" || o_vendor_id == "7")
			{
				tmp_key_value = o_probable_cause;
				tmp_vendor_severity =o_org_severity;
			}
			else if(o_omc_id in ["6101","6102"])
			{
				tmp_key_value = o_standard_alarm_id;
			}
			if(o_org_type=="2"	&&	o_object_class in ["8101","8102","8103","8105","270","8107","8109","10003"]){
				tmp_key_value = null;
			}


			if(tmp_key_value!=null && tmp_key_value!="" && o_vendor_id!=null && tmp_key_value!="WNMS-SYNC EAW NE FAIL")
			{
				String cur_redefine_type = "0";
				String key = "tfa_alarm_redefine_list:"+o_vendor_id+":"+o_eqp_object_class+":"+cur_redefine_type+":"+tmp_key_value;
				Object[] redefines = util.getObject(this.CUSTOMCACHE, key,"tfa_alarm_redefine_list.1");
				List redefineList = redefines==null?null:Arrays.asList(redefines);
				if(redefineList!=null&&!redefineList.isEmpty())
				{
					tmp_field_value=Util.getTempV(redefineList, 0);
				}
				if (tmp_field_value != null && tmp_field_value != "")
				{
					o_redefine_type = tmp_field_value;
				}
				else
				{
					o_redefine_type = o_org_type;
				}

				cur_redefine_type = "1";
				String redefinkey =this.joinKeyRthandler("tfa_alarm_redefine_list",o_standard_alarm_id, o_vendor_id,o_eqp_object_class,cur_redefine_type,tmp_key_value+"");
				Object[] redefine2 = util.getObject(this.CUSTOMCACHE, redefinkey,"tfa_alarm_redefine_list.2");
				List redefineList2 = redefine2==null?null:Arrays.asList(redefine2);
				if(redefineList2!=null&&!redefineList2.isEmpty())
				{
					tmp_field_value=Util.getTempV(redefineList2, 0);
				}
				if (tmp_field_value != null && tmp_field_value != "")
				{
					if( o_tmsc_cat == "100" ){
						//[20121210][add]国际局 告警全部不上报集团
						o_send_jt_flag = "0";
						log.debug(o_fp0+" 国际局告警不上报集团: object_class="+o_object_class+" tmsc_cat="+o_tmsc_cat);
					}
					if( tmp_field_value == "98" || tmp_field_value == "97"){
						//[20131104][add]send_jt_flag不等于1,3的值不在枚举值中，默认复制成0
						o_send_jt_flag = "0";
			}
					else{
						o_send_jt_flag = tmp_field_value;
					}
				}
			}
			**/
			if (o_omc_id in ["6101","6102"]&&o_severity_keycode=="40")
			{

					if (o_extra_id1=="1" )
					{
						o_city_id = "1628882058";
						o_city_name = "广州";
						o_region_id = "609737586";

						if (o_standard_flag=="2")
						{
							o_province_process_flag="1";
							o_department_process_flag="3";
						}
						else
						{
							o_province_process_flag="1";
							o_department_process_flag="";
						}
					}
					else
					{
						o_province_process_flag="2";
						if (o_standard_flag=="2")
						{
							if (o_org_severity=="1")
							{
								o_department_process_flag="1";
							}
						}
						else
						{
							o_department_process_flag="";
						}
					}
			}
			//动环，仅上报站点类别是机楼的告警,update by liucaiyong@2013101720
			//动环，上报集团逻辑 add by lgy@20180507 required by wangyingfeng CMCC-GD-DRITXQ-20180413-017
		// CMCC-GD-DRITXQ-20210322-044_关于动环告警解析、标准化及上报集团需求：取消根据mv_DH_send_to_JT实现动环告警上报集团的规则，后续会直接根据梳理表中的上报集团标志进行上报
			// if (o_professional_type=="4" && StringUtils.isNotBlank(o_eqp_object_class) && StringUtils.isNotBlank(o_standard_alarm_name) && o_object_level == "52"){
			// 	String tkey="MV_DH_send_to_JT@"+o_eqp_object_class+"@"+o_standard_alarm_name;
			// 	 Object[] send_to_JT = util.getObject(CUSTOMCACHE, tkey,"MV_DH_send_to_JT");
			// 	 List t_name = send_to_JT==null?null:Arrays.asList(send_to_JT);
			// 	 if (t_name != null && !t_name.isEmpty()) {
			// 		if (o_omc_id in ["6101","6102"]&&StringUtils.isNotBlank(Util.getTempV(t_name,1)))
			// 		{
			// 			o_send_jt_flag	=	"1";
			// 			log.info("fp0="+o_fp0+"  send_jt_flag="+o_send_jt_flag);
			// 		}
			// 	}
			// }

			if(o_vendor_id == "1" && o_eqp_object_class == "130" && o_title_text == "SWITCHING NETWORK TERMINAL FAULT")
			{
				def testFlag =  o_alarm_text =~/\n[ \t]*:EXTP\s+MG[^\n]*\n[ \t]*\S+[ \t]+(\w{2})/;
				if(testFlag.size()>0)
				{
					o_extra_string1 = testFlag[0][1] ;
				}

			}


			if(o_title_text=="小区退服(BCCH=0)" ||o_title_text=="[(BCCH=0)衍生告警]基站退服"||o_alarm_title =="669991" ||o_alarm_title =="669992" )
			{
				o_ne_label = i_ne_label;
				if (StringUtils.isBlank(o_ne_label))
				{
					o_ne_label = o_ne_alias;
				}
			}

			//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
			//汛期标工(话音无线),shanchunlan@20140512
			//if(o_object_class in ["201","300"])
			//{
			//	//GSM无线
			//	o_severity_keycode="5274";
			//}
			//else if(o_object_class in ["9201","9300"])
			//{
			//	//TD无线
			//	o_severity_keycode="5275";
			//}
			//else if(o_object_class in ["8104","8105","41011","270"])
			//{
			//	//LTE无线
			//	o_severity_keycode="5276";
			//}
			//else if(o_object_class=="11004")
			//{
			//	//直放站
			//	o_severity_keycode="5277";
			//}
			//else if(o_omc_id=="1502")
			//{
			//	//wlan,shanchulan@20140721--调整o_severity_keycode以应急标工
			//	o_severity_keycode="150";
			//}

			this.bscStatusRthandler();
		}

		/**
		 * 自身告警处理
		 */
		private void processWNMSRealRthandler()
		{
		//WNMS-REAL and WNMS-SYNC
		String wnmsReal = "WNMS-REAL:";
		String wnmsSync = "WNMS-SYNC:";
			if(o_title_text.toString().indexOf(wnmsReal)==0 || o_title_text.toString().indexOf(wnmsSync)==0)
			{
				o_object_class = object_class;
				//o_standard_flag = "2";
				o_professional_type="1";
				o_resource_status=o_ne_status;
				o_eqp_int_id = o_int_id;
				o_eqp_alias = o_ne_alias;
				o_eqp_label = o_ne_label;
				o_eqp_object_class=o_object_class;
				o_alarm_ne_status=o_alarm_resource_status;
				o_alarm_content = o_eqp_label;
			}
			//罗成：亿阳自监控告警，设定 厂家改成亿阳 , added by liucaiyong@2013111821,
			//if(o_alarm_title in ["9729157","99","98","9645541","2112590","15199965","1517773","15199964","15199966","2167081","26441660","26445340"])
			//if(o_title_text in ["WNMS-REAL:告警采集源连接失败","WNMS-REAL:告警采集源长时间无心跳信号","WNMS-SYNC:连接NE失败","WNMS-SYNC:获取厂家设备告警失败","WNMS-SYNC:综合监控数据库连接或执行相关SQL失败","WNMS-SYNC:登录OSS/OMC/EMS账号密码过期","WNMS-ALARM:上报集团活动未标工告警数量已超过阀值且对后续上报告警自动标工","WNMS-SYNC:连接OSS/OMC/EMS失败","WNMS-SYNC:获取设备告警失败","WNMS-SYNC:连接综合监控数据库失败","[alarmdata][采集机和厂家连接中断]","[alarmdata][厂家长时间无告警]"])
			//{
			//	o_vendor_id = "150";
			//	o_vendor_name="亿阳";
			//}
			//GCP-OMC断链 by shanchunlan@20150623
			if(o_alarm_title in ["99","98","26441660","26445340"] && o_object_class == "100") {
				String info="\nOMC名称：";
				String tmpkey = this.joinKeyRthandler("objects", o_int_id);
				String task = "objects";
				Map map = this.getObjectsValueWithMapRthandler(tmpkey,task);
				if(map.size()>0)
				{
					o_tmsc_cat = map.get("tmsc_cat");
					info += StringUtils.isNotBlank(map.get("zh_label"))?map.get("zh_label"):map.get("userlabel");
				}
				info+="\nOMC_IP：";

				tmpkey = this.joinKeyRthandler("omcfunction", o_int_id);
				task = "omcfunction";
				o_severity_keycode = "";
				Object[] objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tmpkey,task);
				List list = objects == null ? null : Arrays.asList(objects);
				if (list != null && !list.isEmpty()) {
					info+=Util.getTempV(list, 2);
					//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
					//o_severity_keycode = Util.getTempV(list, 3);
				}

				info+="\n业务类型：";
				tmpkey 	= this.joinKeyRthandler("tia_alarm_dict",o_tmsc_cat,"50");
							   task 	= "tia_alarm_dict.2";
				objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tmpkey,task);
				list = objects == null ? null : Arrays.asList(objects);
				if (list != null && !list.isEmpty()) {
					info+=Util.getTempV(list, 2);
				}

				//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
				//if(o_severity_keycode == "1"){
				//	o_severity_keycode = "201";
				//}else if(o_severity_keycode == "2"){
				//	o_severity_keycode = "202";
				//}else{
				//	o_severity_keycode = "0";
				//}			   c
				info+="\n管理类型：";
				tmpkey 	= this.joinKeyRthandler("tia_alarm_dict",o_severity_keycode,"1002");
			task 	= "tia_alarm_dict.2";
				objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, tmpkey,task);
				list = objects == null ? null : Arrays.asList(objects);
				if (list != null && !list.isEmpty()) {
					info+=Util.getTempV(list, 2);
				}
				o_alarm_text += info;
				o_professional_type = "5";
			}

			if(o_alarm_title in ["26441660","26445340"] && o_object_class == "100") {
				o_title_text = o_title_text.replace("alarmdata", "统一采集");
			}
			String info="";
			if(o_title_text.startsWith("[网管监控]")){
				  info+="\n1.检查sc（gcp）的采集进程和日志：是否为采集进程异常导致？";
				  info+="\n2.检查rt进程和日志：解析进程异常导致？查询数据库异常导致？解析字段异常导致？";
				  info+="\n3.检查JFM进程日志：JFM进程异常，JFM字段解析，响应MQ队列满？";
				  info+="\n4.检查入库writefm日志，确定writefm进程以及入库失败";
			}else if(o_alarm_title == "98"){//WNMS-REAL:告警采集源连接失败
				info+="\n1.daladmin用户登陆采集机（根据OMC_ID和采集台账确认采集机IP，以及采集通道等等）";
				info+="\n2.进入采集日志目录:/opt/BOCO.DAL/NFM/LOG/{日期}/{小时}/scollector(sun平台，则为/opt/BOCO.DAL/NFM/bin/log/SCollectorLog_85021111)";
				info+="\n3.查看data日志，检测可能导致连接失败的原因，如账号密码问题，网络问题";
				info+="\n4.根据SC配置，检测可能导致连接失败的原因，如账号密码问题，网络问题";
			}else if(o_alarm_title == "99"){//WNMS-REAL:告警采集源长时间无心跳信号
				info+="\n1.daladmin用户登陆采集机（根据OMC_ID和采集台账确认采集机IP，以及采集通道等等）";
				info+="\n2.确定SC检测参数配置（no_alarm_second:时间（秒）;no_alarm_ta:心跳信号字符串）";
				info+="\n3.进入采集日志目录:/opt/BOCO.DAL/NFM/LOG/{日期}/{小时}/scollector(sun平台，则为/opt/BOCO.DAL/NFM/bin/log/SCollectorLog_85021111)";
				info+="\n4.查看data日志，检测可能导致长时间无心跳信号的原因，如账号密码问题，网络问题";
				info+="\n5.根据SC配置，检测可能导致长时间无心跳信号的原因，如账号密码问题，网络问题";
			}
			if(StringUtils.isNotBlank(info)){
				o_alarm_text+="\n"+info;
			}
		}

		/**
		 * 从objects表中查询资源
		 */
		private void AddResourceInfoRthandler()
		{
			String key="objects:"+o_int_id;
			Object[] objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects");
			List list= objects == null ? null : Arrays.asList(objects);
			if(list!=null&& !list.isEmpty())
			{
				o_vendor_id=Util.getTempV(list,1);
				//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
				//o_severity_keycode=Util.getTempV(list,2);
				o_tmsc_cat=Util.getTempV(list,3);
				o_stp_cat=Util.getTempV(list,4);
				o_ne_status = Util.getTempV(list,5);
				o_ne_alias=Util.getTempV(list, 6);
				o_ne_location=Util.getTempV(list,7);
				o_city_id=Util.getTempV(list,8);
				o_province_id=Util.getTempV(list,9);
				o_ne_label=Util.getTempV(list, 10)==""?o_ne_alias:Util.getTempV(list, 10);
				//o_eqp_int_id=Util.getTempV(list,11);
				t_related_bsc=Util.getTempV(list,12);
				t_related_omc=Util.getTempV(list,13);
				o_eqp_version=Util.getTempV(list,14);
				object_class=Util.getTempV(list,17);

				if(o_object_class in ["300","9300","8105","270"]){
					o_ParentIntId = Util.getTempV(list,11);
				}
				o_business_type = Util.getTempV(list,24);
				if(StringUtils.isNotBlank(o_business_type)){
					o_business_type = (o_business_type.length()<2 ? "100":"10") + o_business_type;
				}

				if(o_object_class in ["300","9300","8105","201","9201","8104","41011","270"]){
					if(!o_object_class.equals(object_class)){
						o_ne_status = "0";//资源不具备，则底层int_id赋值了网元int_id，导致ne_status正常，而退服告警也上报了, liucaiyong@20190429
					}
				}

			}
			this.addVendorNameRthandler(o_vendor_id);
			this.addRegionInfoRthandler(o_city_id,o_city_name);
			if(StringUtils.isBlank(o_professional_type))
			{
				o_professional_type="1";
			}

			if(o_org_type=="2" && o_object_class in ["130","131","200","108","102","8101","8102","8103","8107","8109","81091","121","122","124"]){
				String key_sn="short_name:"+o_int_id;
				Object[] neSName = util.getObject(this.CUSTOMCACHE, key_sn,"short_name");
				List nmlist = neSName==null?null:Arrays.asList(neSName);
				if(nmlist!=null&&!nmlist.isEmpty())
				{
					o_extra_string1 = Util.getTempV(nmlist, 2);
					log.info(o_fp0+ " get short_name o_extra_string1["+o_extra_string1+"]");
				}
			}


		}


		 /**
		 * 从告警信息中提前更新int_id
		 */
		private void PreCookIntidRthandler()
		{
			 //
			 //o_special_field13="460-00-11400";
			 //log.info(o_fp0+" pre set int_id :"+o_vendor_id+" "+o_org_type+" "+o_title_text+" "+o_alarm_text);
			if(o_vendor_id == "8" && o_org_type == "2" && o_title_text == "同类告警数量超出门限")
			{
				//o_special_field13 已存IP地址
				if((o_alarm_text.contains("告警名称=用户面承载链路故障告警") || o_alarm_text.contains("告警名称=SCTP链路故障告警")  )
							   && StringUtils.isNotBlank(o_special_field13) )
				{
					Object[] ips = util.getObject(CUSTOMCACHE, "myWixianEnodebIP:"+o_special_field13 ,"wuxianInfomationFiveByIP");
					List iplst = ips==null?null:Arrays.asList(ips);
					if(iplst!=null&&!iplst.isEmpty()){
						o_int_id = Util.getTempV(iplst, 1);
						o_org_type = "1";
						this.PreCookEqpRthandler();
						log.info(o_fp0+" preset int_id :"+o_int_id);
					}
				}

				//log.info(o_fp0+" preset int_id(o_special_field13) :"+o_special_field13);
				//o_special_field13 已存IP地址
				if(o_alarm_text.contains("告警名称=X2接口故障告警") && StringUtils.isNotBlank(o_special_field13) )
				{
					Object[] ips = util.getObject(CUSTOMCACHE, "myWixianEnodebEnbId:"+o_special_field13 ,"wuxianInfomationFiveBYENBID");
					List iplst = ips==null?null:Arrays.asList(ips);
					if(iplst!=null&&!iplst.isEmpty()){
						o_int_id = Util.getTempV(iplst, 1);
						o_org_type = "1";
						 this.PreCookEqpRthandler();
						log.info(o_fp0+" preset int_id(enbid) :"+o_int_id);
					}
				}

			}
		}


		 /**
		 * 提前更新object_class eqp_obj_class
		 */
		private void PreCookEqpRthandler()
		{
			String key="objects:"+o_int_id;
			Object[] objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects");
			List list= objects == null ? null : Arrays.asList(objects);
			if(list!=null&& !list.isEmpty())
			{
				o_object_class=Util.getTempV(list,17);
				o_eqp_object_class=o_object_class;
				o_eqp_int_id=Util.getTempV(list,11);
				o_eqp_label=Util.getTempV(list, 6);
			 }
		}

		/**
		 * 告警标题翻译
		 */
		private void alarmTitleTranslateRthandler()
		{
			if(o_title_text in ["WNMS-REAL:告警采集源连接失败","WNMS-REAL:告警采集源长时间无心跳信号","WNMS-SYNC:连接NE失败","WNMS-SYNC:获取厂家设备告警失败","WNMS-SYNC:综合监控数据库连接或执行相关SQL失败","WNMS-SYNC:登录OSS/OMC/EMS账号密码过期","WNMS-ALARM:上报集团活动未标工告警数量已超过阀值且对后续上报告警自动标工","WNMS-SYNC:连接OSS/OMC/EMS失败","WNMS-SYNC:获取设备告警失败","WNMS-SYNC:连接综合监控数据库失败","[alarmdata][采集机和厂家连接中断]","[alarmdata][厂家长时间无告警]"])
			{
				o_vendor_id = "150";
				o_vendor_name="亿阳";
			}
			if(StringUtils.isBlank(o_vendor_id)) {
				o_vendor_id = "150";
			}
			String titleText= o_title_text;
			if(StringUtils.isBlank(titleText)) {
				titleText = "null";
			}

			if(o_sub_alarm_type=="967" || o_alarm_title in ["28864770","28864769"]){//解决地市关注事件厂家,liucaiyong@20170619
				o_vendor_id = "150";
				o_vendor_name="亿阳";
			}

			//因原tfu_alarm_title有重复title_id,增加根据vendor_id区别
			//if ((StringUtils.isBlank(o_alarm_title)||o_alarm_title=="0") && StringUtils.isNotBlank(o_title_text)) {
				//String key = "tfu_alarm_title:" + titleText + ":" + o_vendor_id;
				String key = "tfu_alarm_title@" + titleText + "@" + o_vendor_id;
				Object[] title  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key,"gd.tfu_alarm_title");
				List titleList = title == null ? null : Arrays.asList(title);
				if (titleList != null && !titleList.isEmpty()) {
					o_alarm_title=Util.getTempV(titleList, 0);
				}else{
					String insertTileSql = "select nmosdb.get_title_id(" + o_vendor_id + ",'" + titleText + "') alarm_title from dual";
					List titlelist = Util.queryBySql(insertTileSql);
					if(titlelist != null && !titlelist.isEmpty()) {
						o_alarm_title = Util.getTempV(titlelist, 0);
						this.setTitleCacheRthandler(o_alarm_title, titleText, o_vendor_id);
					}
				}
				log.debug("tfu_alarm_title_Rthandler-fp0={}, key={}, alarm_title={}", o_fp0, key, o_alarm_title);
			//}
		}

	  private void setTitleCacheRthandler(String titleId, String titleText, String vendorId) {
			Object value = new Object[3];
			value[0] = titleId;
			value[1] = titleText
			value[2] = vendorId
			// String key = "tfu_alarm_title:" + titleText + ":" + vendorId;
			String key = "tfu_alarm_title@" + titleText + "@" + vendorId;
			// Cache cache = util.getCache(SimpleFindUtil.CUSTOM_CACHE);
			// Cache cache = util.getObject(SimpleFindUtil.CUSTOM_CACHE);
			// Element element = new Element(key, value);
			// cache.put(element);
			// util.put(key, value, SimpleFindUtil.CUSTOM_CACHE);
			util.put(key, value);
			log.debug("setTitleCacheRthandler-fp0={}, key={}, value={}", o_fp0, key, value);
		}

		/**
		 * eoms_network_type字段处理
		 */
		private void setEomsNetWorkTypeRthandler()
		{

		}

		//order by decode(temp_status,4,99,1,98,5,97,3,96,6,95,2,94,93),temp_status_time1 desc";
		//order by decode(temp_status,15,80,4,94,1,95,5,96,3,97,6,98,2,99,12,100,13,101,14,102,110)
		//网元工程EOMS工单优先级关系 add by wujian at 20130730
		//返回值 -1:优先级低  0:优先级相等  1:优先级高
		private int compareProjectStatusSortRthandler(String prj1, String start1, String prj2, String start2) {
			try {
				int stt1 = Integer.parseInt(prj1);
				int stt2 = Integer.parseInt(prj2);
				switch(stt1) {
					case 15:stt1=110;break;
			case 17:stt1=100;break;
					case 4:stt1=99;break;
					case 1:stt1=98;break;
					case 5:stt1=97;break;
					case 3:stt1=96;break;
					case 6:stt1=95;break;
					case 2:stt1=94;break;
					case 12:stt1=93;break;
					case 13:stt1=92;break;
					case 14:stt1=91;break;

					default: stt1=90;
				}
				switch(stt2) {
					case 15:stt2=110;break;
			case 17:stt2=100;break;
					case 4:stt2=99;break;
					case 1:stt2=98;break;
					case 5:stt2=97;break;
					case 3:stt2=96;break;
					case 6:stt2=95;break;
					case 2:stt2=94;break;
					case 12:stt2=93;break;
					case 13:stt2=92;break;
					case 14:stt2=91;break;

					default: stt2=90;
				}
				if (stt1<stt2) {
					return -1;
				}
				if (stt1>stt2) {
					return 1;
				}
				return start1.compareTo(start2);

			} catch (Exception ex) {}
			return -1;
		}
		private int compareProjectStatusSortRthandler(String prj1, Date start1, String prj2, Date start2) {
			try {
				int stt1 = Integer.parseInt(prj1);
				int stt2 = Integer.parseInt(prj2);
				switch(stt1) {
					case 15:stt1=110;break;
			case 17:stt1=100;break;
					case 4:stt1=99;break;
					case 1:stt1=98;break;
					case 5:stt1=97;break;
					case 3:stt1=96;break;
					case 6:stt1=95;break;
					case 2:stt1=94;break;
					case 12:stt1=93;break;
					case 13:stt1=92;break;
					case 14:stt1=91;break;

					default: stt1=90;
				}
				switch(stt2) {
					case 15:stt2=110;break;
			case 17:stt2=100;break;
					case 4:stt2=99;break;
					case 1:stt2=98;break;
					case 5:stt2=97;break;
					case 3:stt2=96;break;
					case 6:stt2=95;break;
					case 2:stt2=94;break;
					case 12:stt2=93;break;
					case 13:stt2=92;break;
					case 14:stt2=91;break;

					default: stt2=90;
				}
				if (stt1<stt2) {
					return -1;
				}
				if (stt1>stt2) {
					return 1;
				}
				return start1.compareTo(start2);

			} catch (Exception ex) {}
			return -1;
		}

		private boolean emgProjectStatusRthandler(){
			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";
			String queryKey  = this.joinKeyRthandler("tts_task_ne_detail2:emg", o_corr_str,o_severity_keycode);
			List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_emg");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<5) {
						break;
					}
					List olist = Arrays.asList(result);
					String prjStatus = Util.getTempV(olist, 0);
					String prjReport = Util.getTempV(olist, 1);
					String prjOptType= Util.getTempV(olist, 2);
					String prjStart  = Util.getTempV(olist, 3);
					String prjEnd    = Util.getTempV(olist, 4);
					if (prjStart==null || prjStart=="") {
						continue;
					}
					if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
						if (getDateRthandler(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDateRthandler(prjEnd).compareTo(event_time)>=0)) {
							preStatus = prjStatus;
							preReport = prjReport;
							preOptType= prjOptType;
						}
					}
				}
				if (preStatus!="-1") {
					o_alarm_ne_status=preStatus;
					o_special_field16=preReport;
					o_special_field3 =preOptType;
					o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
					return true;
				}
			}
			return false;
		}
		private boolean queryProjectStatusListRthandler(List list){
			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";

			list.each{
				Map map = it;
				String task=map.get("task");
				String key=map.get("key");
				String related=map.get("related");
				String wage=map.get("wage");

				if(StringUtils.isBlank(task)){
					task = "nrmdb.tts_task_ne_detail2_common";
				}
				if(StringUtils.isBlank(related)){
					related = "0";
				}
				if(StringUtils.isBlank(wage)){
					wage = "100";
				}

				String prjStatus ="-1";
				String prjReport ="";
				String prjOptType="";
				String prjStart="";
				String prjEnd="";

				List results = (List)util.getObject(this.CUSTOMCACHE,key,task);
				if (results!=null && !results.isEmpty()) {
					for (Object item : results) {
						Object[] result = (Object[])item;
						if (result==null || result.length<5) {
							break;
						}
						List olist = Arrays.asList(result);
						prjStatus = Util.getTempV(olist, 0);
						prjReport = Util.getTempV(olist, 1);
						prjOptType= Util.getTempV(olist, 2);
						prjStart  = Util.getTempV(olist, 3);
						prjEnd    = Util.getTempV(olist, 4);
						String rel = Util.getTempV(olist, 12);

						if (prjStart==null || prjStart=="" || prjStart.compareTo(o_event_time)>0 || (StringUtils.isNotBlank(prjEnd) && prjEnd.compareTo(o_event_time)<0)||"1".equals(related) && !rel.equals(related)) {
							prjStatus = "-1";
							continue;
						}
						break;
					}
				}

				//比较
				if(prjStatus!="-1" && compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0){
					preStatus = prjStatus;
					preReport = prjReport;
					preOptType= prjOptType;
				}
			}
			if (preStatus!="-1") {
				o_alarm_ne_status=preStatus;
				o_special_field16=preReport;
				o_special_field3 =preOptType;
				o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
				log.debug("queryProjectStatusListRthandler-fp0={}, event_time={}, results=[{}, {}, {}, {}, {}]", o_fp0, o_event_time, prjStatus, prjReport, prjOptType, prjStart, prjEnd);
				return true;
			}
			return false;
		}

		//通用的INT_ID键值查询缓存内的网元临时工程状态 add by wujian at 20130730
		private boolean queryProjectStatusFromCacheRthandler(String neIntId) {
			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";
			String queryKey  = "tts_task_ne_detail2:common:"+neIntId;
			List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_common");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<5) {
						break;
					}
					List olist = Arrays.asList(result);
					String prjStatus = Util.getTempV(olist, 0);
					String prjReport = Util.getTempV(olist, 1);
					String prjOptType= Util.getTempV(olist, 2);
					String prjStart  = Util.getTempV(olist, 3);
					String prjEnd    = Util.getTempV(olist, 4);
					log.debug("queryProjectStatusFromCacheIntidRthandler_cache-fp0={}, prjStatus={}, prjReport={}, prjOptType={}, prjStart={}, prjEnd={}", o_fp0, prjStatus, prjReport, prjOptType, prjStart, prjEnd);
					if (prjStart==null || prjStart=="") {
						continue;
					}
					if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
						//if (prjStart.compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||prjEnd.compareTo(event_time)>=0)) {
						if (getDateRthandler(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDateRthandler(prjEnd).compareTo(event_time)>=0)) {
							preStatus = prjStatus;
							preReport = prjReport;
							preOptType= prjOptType;
						}
					}
					if (preStatus!="-1") {
					    log.debug("queryProjectStatusFromCacheIntidRthandler-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
					}
				}
				//log.debug(o_fp0+" queryProjectStatusFromCache——preStatus："+preStatus);
				if (preStatus!="-1") {
					o_alarm_ne_status=preStatus;
					o_special_field16=preReport;
					o_special_field3 =preOptType;
					o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
					//log.debug(o_fp0+" queryProjectStatusFromCache.key1(has):"+queryKey);
					// log.debug("queryProjectStatusFromCacheIntidRthandler-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, results);
					return true;
				}
			}
			//log.debug(o_fp0+" queryProjectStatusFromCache.key1(not):"+queryKey);
			return false;
		}
		 //通过region_id查标工表获取工程信息
		private boolean LTEtuoguanProjectStatusListRthandler(String region_id) {
			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";
			String queryKey  = "nrmdb.tts_task_ne_detail2_4Gtuoguan:"+region_id;
			List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_4Gtuoguan");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<5) {
						break;
					}
					List olist = Arrays.asList(result);
					String prjStatus = Util.getTempV(olist, 0);
					String prjReport = Util.getTempV(olist, 1);
					String prjOptType= Util.getTempV(olist, 2);
					String prjStart  = Util.getTempV(olist, 3);
					String prjEnd    = Util.getTempV(olist, 4);
					if (prjStart==null || prjStart=="") {
						continue;
					}
					if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
						//if (prjStart.compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||prjEnd.compareTo(event_time)>=0)) {
						if (getDateRthandler(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDateRthandler(prjEnd).compareTo(event_time)>=0)) {
							preStatus = prjStatus;
							preReport = prjReport;
							preOptType= prjOptType;
						}
					}
					if (preStatus!="-1") {
					    log.debug("LTEtuoguanProjectStatusListRthandler-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
					}
				}
				//log.debug(o_fp0+" queryProjectStatusFromCache——preStatus："+preStatus);
				if (preStatus!="-1") {
					o_alarm_ne_status=preStatus;
					o_special_field16=preReport;
					o_special_field3 =preOptType;
					o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
					//log.debug(o_fp0+" queryProjectStatusFromCache.key1(has):"+queryKey);
					// log.debug("LTEtuoguanProjectStatusListRthandler-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, results);
					return true;
				}
			}
			//log.debug(o_fp0+" queryProjectStatusFromCache.key1(not):"+queryKey);
			return false;
		}

	  //通用的OMC_ID查询割接重启 add by fuwei at 20150820
	  //omc正常 返回0 否则返回状态值 16:OMC割接  17：OMC重启
		private String  queryOmcStatusFromCacheRthandler(String omcId) {
			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";
		  String ret="0";
			String queryKey  = "tts_task_ne_detail2:common:"+omcId;
			List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_common");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<5) {
						break;
					}
					List olist = Arrays.asList(result);
					String prjStatus = Util.getTempV(olist, 0);
					String prjReport = Util.getTempV(olist, 1);
					String prjOptType= Util.getTempV(olist, 2);
					String prjStart  = Util.getTempV(olist, 3);
					String prjEnd    = Util.getTempV(olist, 4);
					if (prjStart==null || prjStart=="") {
						continue;
					}
					//if (prjStart.compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||prjEnd.compareTo(event_time)>=0)) {
					if ( prjStatus in ["16","17"] && getDateRthandler(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDateRthandler(prjEnd).compareTo(event_time)>=0)) {
						ret=prjStatus;
						preReport = prjReport;
						preOptType= prjOptType;
					}
				}
			}
			//log.info(o_fp0+" queryKey:"+queryKey+" omcid:"+omcId+" prjStatus:"+ret);
			if(ret == "17"){
				o_special_field16=preReport;
				o_special_field3 =preOptType;
				o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
			}
			return ret;
		}

		//网元归属父的网元临时工程状态特殊查询逻辑 add by wujian at 20130730
		private boolean queryProjectStatusFromCacheRthandler(String eqpIntId, String neClass) {
			if (o_ne_label==null || o_ne_label=="") {
				//log.debug(o_fp0+" queryProjectStatusFromCache.key2(not): ne_label is empty");
				return false;
			}
			String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";
			String preNeName ="";
			String queryKey  = "tts_task_ne_detail2:chuanshu:"+neClass+":"+eqpIntId;
			List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_shuju");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<6) {
						break;
					}
					List olist = Arrays.asList(result);
					String prjStatus = Util.getTempV(olist, 0);
					String prjReport = Util.getTempV(olist, 1);
					String prjOptType= Util.getTempV(olist, 2);
					String prjStart  = Util.getTempV(olist, 3);
					String prjEnd    = Util.getTempV(olist, 4);
					String prjNeName = Util.getTempV(olist, 5);

					if (prjStart==null || prjStart=="" || prjNeName==null || prjNeName=="") {
						continue;
					}

					if (compareProjectStatusSort(prjStatus,prjStart,preStatus,preStart)>0) {
						//log.info("baaaaaa:prjStart"+prjStart.toString()+" prjEnd:"+prjEnd.toString()+" event_time:"+event_time);
						if (getDateRthandler(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDateRthandler(prjEnd).compareTo(event_time)>=0)) {
							if (o_ne_label.indexOf(prjNeName)>=0) {
								preStatus = prjStatus;
								preReport = prjReport;
								preOptType= prjOptType;
								preNeName = prjNeName;
							}
						}
					}
					if (preStatus!="-1") {
					    log.debug("queryProjectStatusFromCacheEqpintidRthandler-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
					}
				}
				//log.info("queryProjectStatusFromCache::preStatus"+preStatus);
				if (preStatus!="-1") {
					o_alarm_ne_status=preStatus;
					o_special_field16=preReport;
					o_special_field3 =preOptType;
					o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
					//log.info(o_fp0+" queryProjectStatusFromCache.key2(has->{"+preNeName+"}):"+queryKey);
					// log.debug("queryProjectStatusFromCacheEqpintidRthandler-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, results);
					return true;
				}
			}
			//log.info(o_fp0+" queryProjectStatusFromCache.key2(not):"+queryKey);
			return false;
		}

		//数据网正文端口标工,added by sunyuqiu@20140520
		private boolean shujuTxtsPortProjectStatusRthandler()
		{
			String proTxt = "";
			def matcher = o_alarm_text =~ /.*\n\[(.+)\]/;
			if(matcher.size()>0)
			{
				proTxt = matcher[0][1];
			}
			if(proTxt!="")
			{
				String[] proTxts = proTxt.split(",");
				for(String txt:proTxts)
				{
					if(this.shujuTxtPortProjectStatusFromCacheRthandler(txt))
					{
						break;
					}
				}
			}
			return false;
		}

		private boolean shujuTxtPortProjectStatusFromCacheRthandler(String txt)
		{
			def matcher = txt=~ /(.+)\_([^0-9]*)(\d+\/)?(\d+\/)?(\d+)?(\:)?(\d+)?(\.)?(\d+)?/;
			if(matcher.size()>0)
			{
				String portstr=matcher[0][1]+":";

				if(matcher[0][3]!=null)
					portstr+=matcher[0][3];
				if(matcher[0][4]!=null)
					portstr+=matcher[0][4];
				if(matcher[0][5]!=null)
					portstr+=matcher[0][5];
				if(matcher[0][6]!=null)
					portstr+=matcher[0][6];
				if(matcher[0][7]!=null)
					portstr+=matcher[0][7];
				if(matcher[0][8]!=null)
					portstr+=matcher[0][8];
				if(matcher[0][9]!=null)
					portstr+=matcher[0][9];

				String portId = Util.getCRC32(portstr);
				if(this.queryProjectStatusFromCacheRthandler(portId))
				{
					//special_fileld9有其他用途（承载网告警电路编号查询）,by sunyuqiu@20150920
					//o_special_field9 += ","+portstr+"@"+portId;
					return true;
				}
			}
			return false;
		}
		//数据网按大网元标工,add by liucaiyong@20140108
		private boolean shujuPortProjectStatusRthandler()
		{
			//if (o_professional_type=="2" && o_object_class=="706") {
					if (this.queryProjectStatusFromCacheRthandler(o_eqp_int_id)) {
						return true;
					}
			//}
			return false;
		}

		//无线小区按基站标工，add by liucaiyong@20140110
		private boolean cellProjectStatusRthandler()
		{
			//if ( o_object_class in ['300','9300','8105']) {
					String btsId=o_ParentIntId;
					if (StringUtils.isNotBlank(btsId) && this.queryProjectStatusFromCacheRthandler(btsId)) {
						return true;
					}
			//}
			return false;
		}

		//传输板卡和端口网元临时工程状态附加的特殊查询逻辑 add by wujian at 20130730
		private boolean chuanshuCTFProjectStatusFromCacheRthandler() {
			//if (o_professional_type=="3") {
				//update by liucaiyong@20140711
				//if (o_object_class=="10011" || o_object_class=="706" || o_object_class=="150110") {
				if (o_object_class in ["10011","706","150110","2011","150111","150113","150114"]) {
				//if (o_object_class in ["10011","706","150110","2012","2011","150111","150113","150114"]) {
					if (this.queryProjectStatusFromCacheRthandler(o_eqp_int_id)) {
						return true;
					}
				}

				if (o_object_class=="2012"){
					if (this.queryProjectStatusFromCacheRthandler(o_eqp_int_id,"2012")) {
						return true;
					}
				}

				if (o_object_class=="706" || o_object_class=="150110") {
					if (this.queryProjectStatusFromCacheRthandler(o_eqp_int_id,"10011")) {
						return true;
					}
				}

				if (o_object_class=="150110") {
					return this.queryProjectStatusFromCacheRthandler(o_eqp_int_id,"706");
				}
			//}
			return false;
		}

		private String queryProjectTaskStatusRthandler(String neIntId){
			String queryKey  = "tts_task_ne_detail2:common:"+neIntId;
			List results = (List)util.getObject(this.CUSTOMCACHEHour,queryKey,"nrmdb.tts_task_ne_detail2_common");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<5) {
						break;
					}
					List olist = Arrays.asList(result);
					String prjStart  = Util.getTempV(olist, 3);
					String prjStatus = Util.getTempV(olist, 6);
					String prjEnd    = Util.getTempV(olist, 11);
					if (prjStart==null || prjStart=="") {
						continue;
					}

					if("1".equals(prjStatus)){
						//工程中
						return "2";
					}
					else if("2".equals(prjStatus)&&StringUtils.isNotBlank(prjEnd)){
						//if event_time between realtime2 and realtime2+1 then return "3" else contine;
						Date realtime2	=	getDateRthandler(prjEnd);
						long rl2	=	realtime2.getTime()+24*60*60*1000;
						Date realtimeEnd	=	new Date();
						realtimeEnd.setTime(rl2);

						if(realtime2.compareTo(event_time)<=0&&event_time.compareTo(realtimeEnd)<=0)
						{
							//工程后
							return "3";
						}
					}
					else if("3".equals(prjStatus)&&StringUtils.isNotBlank(prjStart)){
						//if event_time between temp1-1/2 between temp1 then return "1" else continue;
						Date temptime1	=	getDateRthandler(prjStart);
						long tt2	=	temptime1.getTime()-12*60*60*1000;
						Date temptime2	=	new Date();
						temptime2.setTime(tt2);

						if(temptime2.compareTo(event_time)<=0&&event_time.compareTo(temptime1)<=0)
						{
							//工程前
							return "1";
						}
					}
				}
			}
			return "0";
		}

		/**
		 * 工程状态标注
		 */
		private void setProjectStatusRthandler()
		{
			boolean projecting = false;
			 String tmpIntId = o_int_id.toString();

			if(o_omc_id=="6601"||o_omc_id=="6602")
			{
			  //如果是数据网，则去special_fileld9中生成的ID
			  if( StringUtils.isNotBlank(o_special_field9))
			  {
				int t_index_intid = o_special_field9.toString().indexOf("@");
				if( t_index_intid > -1 )
				{
				  tmpIntId = o_special_field9.toString().substring( t_index_intid+1 );
				}
			  }
			  //special_fileld9有其他用途（承载网告警电路编号查询）,by sunyuqiu@20150920
			  o_special_field9 = o_special_field19;
			}
			//传输端口特殊标工 added by lgy@20180629  required by sunyuqiu
			if(o_professional_type=="3"&&o_object_class=="706"){
				tmpIntId=Util.getCRC32("706:"+o_ne_label);
				}
			o_alarm_ne_status="0";
			o_special_field16="";
			o_special_field3 ="";

			//网络类型调整（仅保留传输及动环） shanchunlan,liu
			//应急标工先
			//if(o_severity_keycode in ["5274","5275","5276","5277","150","27"]){
			//	projecting = emgProjectStatus();
			//	log.info(o_fp0+"      emg-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			//}

			//“OMC割接”范围涉及专业：话音、传输 , OMC割接时将未知状态的网元 设置为 OMC割接状态 20150820 fw
		//“OMC重启”范围涉及专业：话音、传输、动环
		if(o_professional_type in ["1","3","4"]){
			if(! StringUtils.isBlank(o_omc_id)){
				String OmcStatus_R = this.queryOmcStatusFromCacheRthandler(o_omc_id)
				if(!projecting && OmcStatus_R=="17"){
					o_alarm_ne_status = "45";
					projecting=true;
					log.info("o_alarm_ne_status_rthandler="+o_alarm_ne_status);
				}
				if(o_professional_type in ["1","3"]){
					if( o_ne_status == "0" && OmcStatus_R == "16" ){
						o_ne_status = "100";
					}
				}
			}
		}
			//正常标工
			if(!projecting){
				projecting = queryProjectStatusFromCacheRthandler(tmpIntId);
				log.info(o_fp0+"   common-prj_rthandler["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
			//传输标工
			if(!projecting&&o_professional_type=="3"){
				projecting = chuanshuCTFProjectStatusFromCacheRthandler();
				log.info(o_fp0+" chuanshu-prj_rthandler["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
			//数据网标工
			if(!projecting&&o_professional_type=="2"&&o_object_class=="706"){
				projecting = shujuPortProjectStatusRthandler();
				log.info(o_fp0+"    shuju-prj_rthandler["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
			//无线小区按基站标工
			if(!projecting&&o_object_class in ["300","9300","8105","270","3300"]){
				projecting = cellProjectStatusRthandler();
				log.info(o_fp0+"     cell-prj_rthandler["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
			if(!projecting&&o_professional_type=="4"){
				//增加动环按机房名+设备编码标工,sunyuqiu@20161108
				tmpIntId	=	Util.getCRC32(o_special_field11+"|"+o_ne_label);
				projecting = queryProjectStatusFromCacheRthandler(tmpIntId);
				log.info(o_fp0+"       dhh-prj_rthandler["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}
			//动环机房标工
			if(!projecting&&o_professional_type=="4"){
				// 2013092918,增加动环 工程状态匹配逻辑，如果默认（机房名+设备编码）没有匹配上，再用 机房名+|+设备名 ，生成crc32检验码匹配
				//???? 改成只按机房名标工
				tmpIntId	=	Util.getCRC32(o_special_field11);
				projecting = queryProjectStatusFromCacheRthandler(tmpIntId);
				log.info(o_fp0+"       dh-prj_rthandler["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"],special_field11["+o_special_field11+"],project_int_id["+tmpIntId+"]");
			}
			//数据网正文端口标工
			if(!projecting&&o_professional_type=="2"	&&o_omc_id in ["6601","6602"]	&& o_extra_id3 in ["20","91","125","154","7","225"])
			{
				projecting = shujuTxtsPortProjectStatusRthandler();
				log.info(o_fp0+" shujport-prj_rthandler["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}

			//无线小区按基站标工
			//if(!projecting&&o_object_class in ["300","9300","8105"]){
			//	projecting = cellProjectStatus();
			//	log.info(o_fp0+"     cell-prj["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			//}
			if(!projecting && o_object_class in ["300","9300","8105","201","9201","8104","41011","270"]){
			List list = new ArrayList<Map>();
			Map map = new HashMap();
			//无线小区按基站标工
			String btsId="";
			String key="objects:";
			 if(o_object_class in ["8105","270"]){
			  btsId = o_eqp_int_id;
			}else if(o_object_class in ["300","9300"]){
			  btsId = o_ParentIntId;
			}
			if(StringUtils.isNotBlank(btsId)){
				map = new HashMap();
				map.put("key","tts_task_ne_detail2:common:"+btsId);
				map.put("wage",99);
				list.add(map);
			  }

			//级联标工
			if(o_object_class in ["8105","8104","41011","270"]){
			  String queryKey  = "objects_relation:"+o_eqp_int_id+":8104";
			  List results = (List)util.getObject(this.CUSTOMCACHE,queryKey,"objects_relation");
			  if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
				  Object[] result = (Object[])item;
				  List olist = Arrays.asList(result);
				  String relatedId  = Util.getTempV(olist, 2);

				  map = new HashMap();
				  map.put("key","tts_task_ne_detail2:common:"+relatedId);
				  map.put("related","1");
				  map.put("wage",99);
				  list.add(map);
				}
			  }
			}else{
			  map = new HashMap();
			  map.put("key","tts_task_ne_detail2:common:"+o_eqp_int_id);
			  map.put("related","1");
			  map.put("wage",99);
			  list.add(map);
			}
			projecting = this.queryProjectStatusListRthandler(list);
		  }
		  if(!projecting){//个性化标工 by shanchunlan ,added by liucaiyong@20160518
				List refList=this.redefineProjectsListRthandler();

				if(refList!=null){
					for(String one:refList){
						projecting = redefineProjectStatusRthandler(one);
						if(projecting){
							break;
						}
					}
					log.info(o_fp0+" redefine-prj_rthandler["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
				}
		  }
			//4G基站脱离告警标工 added by lgy@20180816  required by wangyinfeng
			//托管子类型调整成退服子类型改由标题加厂家限定, updated by liucaiyong@20191216 required by wangyinfeng
			//if(!projecting && o_eqp_object_class in ["8104","41011"] && o_sub_alarm_type == "973" ){
			if(!projecting && o_eqp_object_class in ["8104","41011"] && (
					(o_vendor_id == "1" && o_title_text == "Heartbeat Failure")||
					(o_vendor_id == "8" && o_title_text == "网元连接中断")||
					(o_vendor_id == "7" && o_title_text == "网元断链告警")||
					(o_vendor_id == "9" && o_title_text == "NEA和网元断连")||
					(o_vendor_id == "4" && o_title_text == "NE O&M CONNECTION FAILURE")
				)){
					projecting = this.LTEtuoguanProjectStatusListRthandler(o_region_id);
					log.info(o_fp0+"  LTEtuoguan_rthandler: 是否标工["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			} else if (!projecting && o_eqp_object_class == "3201" && (
					// “地市断链标工”工程识别
					(o_vendor_id == "1" && o_alarm_title == "510675")||
					(o_vendor_id == "8" && o_alarm_title == "846798")||
					(o_vendor_id == "7" && o_alarm_title == "9827073")
				)){
					projecting = this.LTEtuoguanProjectStatusListRthandler(o_region_id);
					log.info(o_fp0+"  5G地市断链_rthandler: 是否标工["+projecting+"],alarm_ne_status["+o_alarm_ne_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}

			//对端标工
			String t_alarm_ne_status	=	o_alarm_ne_status;
			String t_special_field16	=	o_special_field16;
			String t_special_field3	=	o_special_field3;

			if(StringUtils.isNotBlank(o_remote_int_id))
			{
				boolean remote_projecting = false;
				remote_projecting	=	queryProjectStatusFromCacheRthandler(o_remote_int_id);
				if(!remote_projecting){
					o_remote_proj_sub_status="0";
				}else{
					o_remote_proj_sub_status	=	o_alarm_ne_status;

					//还原
					o_alarm_ne_status	=	t_alarm_ne_status;
					o_special_field3	=	t_special_field3;

					if(projecting){
						o_special_field16	=	t_special_field16;
					}
				}
				log.info(o_fp0+"   remote-prj_rthandler["+remote_projecting+"],remote_proj_sub_status["+o_remote_proj_sub_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
			}

			log.info("resoure-prj_rthandler_begin, fp0={}, ne_label={}, eqp_label={}, remote_proj_sub_status={}, remote_resource_status={}, alarm_ne_status={}, alarm_resource_status={}, special_field16={}, special_field3={}", o_fp0, o_ne_label, o_eqp_label, o_remote_proj_sub_status, o_remote_resource_status, o_alarm_ne_status, o_alarm_resource_status, o_special_field16, o_special_field3);

			if(o_ne_label ==o_eqp_label)
			{
				o_alarm_ne_status        = this.projectRemoteMapingRthandler(o_alarm_ne_status, o_remote_resource_status, o_remote_proj_sub_status);
				o_remote_proj_sub_status = this.projectMapingRthandler(o_remote_proj_sub_status);
				o_alarm_resource_status  = o_alarm_ne_status;
			}
			else
			{
				o_alarm_ne_status        = this.projectRemoteMapingRthandler(o_alarm_ne_status, o_remote_resource_status, o_remote_proj_sub_status);
				o_remote_proj_sub_status = this.projectMapingRthandler(o_remote_proj_sub_status);

				//查询本端大网元标工状态
				boolean tmpProjecting = false;
				String tmpAlarmResourceStatus = o_alarm_resource_status;

				t_alarm_ne_status	=	o_alarm_ne_status;
				t_special_field16	=	o_special_field16;
				t_special_field3	=	o_special_field3;

				tmpProjecting	=	queryProjectStatusFromCacheRthandler(o_eqp_int_id);
				if(!tmpProjecting){
					o_alarm_resource_status="0";
				}else{
					o_alarm_resource_status	=	o_alarm_ne_status;

					//还原
					o_alarm_ne_status	=	t_alarm_ne_status;
				}
				log.info(o_fp0+" resoure-prj_rthandler["+tmpProjecting+"],alarm_resource_status["+o_alarm_resource_status+"],special_field16["+o_special_field16+"],special_field3["+o_special_field3+"]");
				o_alarm_resource_status  = this.projectMapingRthandler(o_alarm_resource_status);
			}

			if(o_professional_type=="3"&&!projecting)
			{
				//传输标工失败，置初始值
				o_alarm_ne_status = i_alarm_ne_status;//120消息初始值
			}

			// 0:未知 1:工程预约 2:工程实施 3:工程后观察
			if( projecting ){
				o_extra_id2="2";
			}
			else
			{
				o_extra_id2	=	queryProjectTaskStatusRthandler(o_int_id);
				if(o_extra_id2=="0")
				{
					o_extra_id2="";
				}
			}

			this.setProjectStatusSuspect(projecting); // 工程状态标注“疑似违规操作”标签，同步修改标工函数setProjectStatus和疑似标工函数setProjectStatusSuspect
		}

		/**
	  *获取当前
	  **/
	  private List redefineProjectsListRthandler(){
		List refList;//自定义标工项
		Date refTime;
		  //log.info(o_fp0+" getRedefineProjects-1");
			 if(refList!=null && refTime!=null && (refTime.getTime()+60*60*24*1000)>(new Date()).getTime()){
				 return refList;
			 }
			 //log.info(o_fp0+" getRedefineProjects-2");
		  List results = (List)util.getObject(this.CUSTOMCACHEHour,"nrmdb.tts_task_ne_detail2_redef_type:10","nrmdb.tts_task_ne_detail2_redef_type");
			if(results!=null && !results.isEmpty()) {
				refList = new ArrayList<String>();
				refTime = new Date();
				for (Object item : results) {
					Object[] result = (Object[])item;
					List olist = Arrays.asList(result);
					String tmp = Util.getTempV(olist,1);
					if(StringUtils.isNotBlank(tmp)){
						refList.add(tmp);
						log.info(o_fp0+" set-ref-projects["+tmp+"]");
					}
				}
				return refList;
			}
			//log.info(o_fp0+" getRedefineProjects-3");
		  return null;
	  }
	  private boolean redefineProjectStatusRthandler(String pattern){
		  //LOCAL:TITLE:REMOTE
		  String pkey = pattern.replace("TITLE", o_title_text).replace("REMOTE", o_remote_eqp_label).replace("LOCAL", o_eqp_label);

		  String preStatus ="-1";
			String preReport ="";
			String preOptType="";
			String preStart  ="";
			List results = (List)util.getObject(this.CUSTOMCACHEHour,"nrmdb.tts_task_ne_detail2_redef@"+pattern,"nrmdb.tts_task_ne_detail2_redef");
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<5) {
						break;
					}
					List olist = Arrays.asList(result);
					String neName    = Util.getTempV(olist, 5);

					if(StringUtils.isBlank(neName)||!neName.equals(pkey)){
						continue;
					}
					 String prjStatus = Util.getTempV(olist, 0);
					String prjReport = Util.getTempV(olist, 1);
					String prjOptType= Util.getTempV(olist, 2);
					String prjStart  = Util.getTempV(olist, 3);
					String prjEnd    = Util.getTempV(olist, 4);

					if (prjStart==null || prjStart=="") {
						continue;
					}
					if (compareProjectStatusSortRthandler(prjStatus,prjStart,preStatus,preStart)>0) {
						if (getDateRthandler(prjStart).compareTo(event_time)<=0 && (prjEnd==null||prjEnd==""||getDateRthandler(prjEnd).compareTo(event_time)>=0)) {
							preStatus = prjStatus;
							preReport = prjReport;
							preOptType= prjOptType;
						}
					}
					if (preStatus!="-1") {
					    log.debug("redefineProjectStatusRthandler-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, queryKey, olist);
					}
				}
				if (preStatus!="-1") {
					o_alarm_ne_status=preStatus;
					o_special_field16=preReport;
					o_special_field3 =preOptType;
					o_proj_time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(System.currentTimeMillis())); // 告警进行工程状态赋值时，同时将当时的系统时间赋值到proj_time
					// log.debug("redefineProjectStatusRthandler-fp0={}, event_time={}, key={}, results={}", o_fp0, o_event_time, "nrmdb.tts_task_ne_detail2_redef@"+pattern, results);
					return true;
				}
			}
			return false;
	  }

		/**
		 * 对端相关信息处理
		 */
		private void setRemoteAlarmAddResourceRthandler()
		{
		  //城域网告警对端解析,code-liucaiyong,by sunyuqiu@20170525
		if(o_professional_type == "2" && o_extra_id3=="91" && o_object_class =="706" ){
			if(StringUtils.isNotBlank(o_special_field5)&&o_special_field5!=";;;;;"){
				String[] fields = o_special_field5.trim().split(";");
			   if(fields.length>5){
				   o_circuit_no = fields[0];
				   o_remote_int_id = fields[1];
				   o_remote_eqp_label = fields[2];
				   o_rlocate_ne_int_id = fields[3];
				   o_rlocate_ne_name = fields[4];
					for(int i=5;i<fields.length;++i){
						if(i>5){
							o_special_field19+=";";
						}
						o_special_field19 += fields[i];
					}
				}
			log.info(o_fp0+" port_port_no circuit_no["+o_circuit_no+"],remote_int_id["+o_remote_int_id+"],rlocate_ne_int_id["+o_rlocate_ne_int_id+"],sp19["+o_special_field19+"]");
			}
		}
			//传输支路口 对端赋值业务网元 added by lgy@20180822  required by wangyinfeng 需求单号：CMCC-GD-DRITXQ-20180718-013
				if(o_professional_type == "3" && o_object_level == "70602" ){
				Object[] item;
				String task="nrmdb.circuit_a";
				String t_Key="nrmdb.circuit_a:"+o_int_id;
			  List results = (List)util.getObject(this.CUSTOMCACHE,t_Key,task);
			  if (results != null&& results.size() >0) {
						item  = (Object[])results.get(0);
						if(item.length>0){
						o_remote_eqp_label = item[1];
						//o_remote_int_id 	 = item[2]+"";
						log.info(o_fp0+" A端：remote_eqp_label["+o_remote_eqp_label+"] remote_int_id["+o_remote_int_id+"]");
						}
					}
				if (results == null ||  results.size() ==0 || o_remote_eqp_label == null){
					  task="nrmdb.circuit_b";
						t_Key="nrmdb.circuit_b:"+o_int_id;
					  results = (List)util.getObject(this.CUSTOMCACHE,t_Key,task);
					  if (results != null && results.size() >0) {
							  item  = (Object[])results.get(0);
							  if(item.length>0){
								o_remote_eqp_label = item[1];
								//o_remote_int_id 	 = item[2]+"";
								log.info(o_fp0+" B端：remote_eqp_label["+o_remote_eqp_label+"] remote_int_id["+o_remote_int_id+"]");
								}
							}
						}
				}
		//BGP邻居关系中断”告警对端分析  added by lgy@20180820  required by wangyinfeng
	  if(o_professional_type == "2" && o_extra_id3 in ["7","20"] && o_object_class == "66003" && o_alarm_title == "28834318" && o_vendor_id == "8"){
			 def testFlag =  o_alarm_text =~/The\s+status\s+of\s+the\s+peer\s*(\d+.\d+.\d+.\d+)\s*/;
			if(testFlag.size()>0){
				String  IP = testFlag[0][1];
			  String tkey = "nrmdb.router:"+IP;
				Object[] objects = util.getObject(CUSTOMCACHE, tkey,"nrmdb.router");
							List list = objects==null?null:Arrays.asList(objects);
							if(list!=null&&!list.isEmpty())
							{
								o_remote_int_id		 = Util.getTempV(list, 1);
								o_remote_eqp_label = Util.getTempV(list, 2);
								log.info(o_fp0+" IP["+IP+"],remote_int_id["+o_remote_int_id+"],remote_eqp_label["+o_remote_eqp_label+"]");
							}
			}
			}
			//linkDown告警对端关联, by shanchunlan@20160317
			if( StringUtils.isNotBlank(o_int_id) && StringUtils.isNotBlank(o_eqp_int_id)
			 && ( (o_extra_id3 in ["20","208","272","154","125"] &&  o_title_text in ["linkDown","LinkDown"])
				  || ( o_extra_id3 in ["7"]&& o_title_text in ["[端口状态DOWN]","LDP邻居关系DOWN","[huawei][物理端口状态down]","linkDown"])
				  || ( o_extra_id3 in ["14","125","154"] && o_title_text == "爱立信SE800LinkDown告警")
				) ){

				String task="port_intid";
				String portnoKey="port_intid:"+o_int_id;

				  List results_int = (List)util.getObject(this.CUSTOMCACHE,portnoKey,task);
				  if (results_int!=null && !results_int.isEmpty()) {
						for (Object item_i : results_int) {
							Object[] result_i = (Object[])item_i;
							List olist_i = Arrays.asList(result_i);
							o_rlocate_ne_name = Util.getTempV(olist_i,2);

						  portnoKey="port_no:"+o_rlocate_ne_name+":"+o_eqp_int_id;
						  task="port_port_no";
							log.info(o_fp0+" port_no portnoKey["+portnoKey+"] task["+task+"]");

							List results = (List)util.getObject(this.CUSTOMCACHE,portnoKey,task);
							if (results!=null && !results.isEmpty()) {
								for (Object item : results) {
									Object[] result = (Object[])item;
									List olist = Arrays.asList(result);
									o_remote_int_id = Util.getTempV(olist,2);
									o_remote_eqp_label = Util.getTempV(olist,3);
									o_rlocate_ne_int_id = Util.getTempV(olist,4);
									o_rlocate_ne_type	=	Util.getTempV(olist,5);
									o_rlocate_ne_name	=	Util.getTempV(olist,6);

									break;
								}
							}
						break;
					}
				  }
				log.info(o_fp0+" port_no o_remote_int_id["+o_remote_int_id+"] rlocate_ne_name["+o_rlocate_ne_name+"]");
			}

			//TD/LTE基站退服跨专业关联,update by liucaiyong,required by sunyuqiu@2014070311
			if(o_object_class in ["8104","9201","201","41011"])
			{
				String task = "circuit_ne_relation";
				// List oList = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, joinKeyRthandler(task,(o_object_class == "41011" ? "8104" : o_object_class),o_int_id), task);
				// if (oList != null&& oList.size() >0) {
					// Object[] objs = (Object[]) oList.get(0);//只取一条记录
					// if (objs.length>0) {
						// String cno	= objs[3]+"";
						String key = joinKey(task,(o_object_class == "41011" ? "8104" : o_object_class),o_int_id);
						List oList = util.getObject(CUSTOMCACHE, key, "circuit_ne_relation");
						int size = oList==null?0:oList.size();
						log.debug("fp0-{},key={},list.size={}",o_fp0,key,size);
						if (size>0) {
								String cno	= Util.getTempV(oList,3);
								log.debug("fp0-{},key={},cno={}",o_fp0,key,cno);
						task="gdCircuitLevel";
						Object[] oCirts = util.getObject(this.CUSTOMCACHE, joinKeyRthandler("gd:circuit:level",cno),task);
						List results = oCirts==null?null:Arrays.asList(oCirts);
						if (results != null&&!results.isEmpty()) {
							String bne=Util.getTempV(results, 4);//取到对端网元ID

							// task = "objects_trans";
							task = "objects_trans_fdn_id";
							oCirts = util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler(task,bne),task);
							results = oCirts==null?null:Arrays.asList(oCirts);
							if (results != null&&!results.isEmpty()) {
								o_remote_int_id 			= Util.getTempV(results, 0);
								o_remote_object_class	=	Util.getTempV(results, 16);
								o_remote_eqp_label		=	Util.getTempV(results, 5);
								o_remote_eqp_alias		=	Util.getTempV(results, 5);

								log.info(o_fp0+" get circuit_ne_relation:id["+o_remote_int_id+"],label["+o_remote_eqp_label+"]");
							}
						}


				}
			}

			//MME、HSS跨专业性能告警关联, added by liucaiyong,required by sunyuqiu @2014102214
			//爱立信HSS性能告警对端分析,update by liucaiyong,required by shichao@20150611
			if(o_object_class == "8109" && o_alarm_title in ["13259","11542628","10630570","11623626"] && StringUtils.isNotBlank(o_alarm_unit)){
				String task="nrmdb.mme";
				o_remote_int_id = "-1807";
				if(o_alarm_title == "11542628"){
					o_remote_eqp_alias	=	o_alarm_unit.toUpperCase();//截取[HSS:]后面的
					//log.info(o_fp0+" get hss-remote-1 :"+o_remote_eqp_alias);
					int pos = o_remote_eqp_alias.indexOf(":");
					if( pos > -1 ){
						o_remote_eqp_alias = o_remote_eqp_alias.substring(pos+1);
					}
					task	=	"nrmdb.dra";
					//log.info(o_fp0+" get hss-remote-2 :"+o_remote_eqp_alias);
				}else{
					o_remote_eqp_alias	=	o_alarm_unit;//截取第二个[.]号前面的
					//log.info(o_fp0+" get hss-remote-1 :"+o_remote_eqp_alias);
				}
				Object[] remotes = util.getObject(CUSTOMCACHE, task+":"+o_remote_eqp_alias ,task);
				List remotelist = remotes==null?null:Arrays.asList(remotes);
				if(remotelist!=null&&!remotelist.isEmpty()){
					o_special_field22 = Util.getTempV(remotelist, 0);
					//log.info(o_fp0+" get hss-remote-3 :"+o_special_field22);
				}
			}
			//中兴MSS MTP3局向不可达对端分析,added by liucaiyong,required by shichao@20150611
			//M3UA局向不可达 added by shichao@20161220
			if(o_vendor_id == "7" && o_object_class == "130" && o_alarm_title in ["665","650"] && StringUtils.isNotBlank(o_remote_eqp_alias)){
				//o_remote_eqp_alias转成16进制
				o_remote_int_id = "-1807";
				String hexStr="";
				try{
					for(String ip:o_remote_eqp_alias.split("\\.")){
						String hex = Integer.toHexString(Integer.parseInt(ip))+"";
						hexStr = hexStr + (hex.length()<2?"0"+hex:hex).toUpperCase();
					}
					//log.info(o_fp0+" get mss-remote-hex :"+hexStr);
					String task="t_ne_spc";
					Object[] remotes = util.getObject(CUSTOMCACHE, task+":"+hexStr ,task);
					List remotelist = remotes==null?null:Arrays.asList(remotes);
					if(remotelist!=null&&!remotelist.isEmpty()){
						o_remote_int_id	=	Util.getTempV(remotelist, 0);
						o_remote_eqp_label = Util.getTempV(remotelist, 1);
						o_remote_resource_status =Util.getTempV(remotelist, 2);
						o_remote_eqp_alias	=	o_remote_eqp_label;
						o_special_field22 = "";
					}
				}catch(Exception e){
					log.info(o_fp0+" get mss-remote-error :"+e.getMessage());
				}
			}
			//华为性能告警对端分析,added by liucaiyong,required by shichao@20150623
			if(o_vendor_id == "8" && o_object_class == "130" && o_alarm_title in ["110007","110008","10630186"] && StringUtils.isNotBlank(o_remote_eqp_alias)){
				String task="remote-mme";
				o_remote_int_id = "-1807";
				Object[] remotes = util.getObject(CUSTOMCACHE, task+":"+o_remote_eqp_alias.toUpperCase(),task);
				List remotelist = remotes==null?null:Arrays.asList(remotes);
				if(remotelist!=null&&!remotelist.isEmpty()){
					o_special_field22 = Util.getTempV(remotelist, 0);
				}
			}
			//核心网紧急告警过滤器 关联压缩需求 @20160125 施超 add by fw
			//爱立信 HSS MGW
			if(o_object_class in ["8109","131"] && o_vendor_id=="1" && o_title_text in ["Diameter, Link Failure","M3UA Association Down"] && StringUtils.isNotBlank(o_remote_eqp_alias) )
			{
				String key;
				String task;
				List list;

				if(o_object_class == "8109"){
					task="remote-hss";
					key=task+":"+o_remote_eqp_alias;
				}else if(o_object_class == "131"){
					task="remote-mgw";
					key=task+":"+o_remote_eqp_alias;
				}

				list = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key, task);
				if (list != null&& list.size() >0) {
					for (int i = 0; i < list.size(); i++) {
						Object[] objs = (Object[]) list.get(i);
						if (objs.length>0) {
							o_remote_int_id 			= objs[0]+"";
							if(StringUtils.isNotBlank(o_remote_int_id)){
								o_remote_eqp_label	    =	objs[1]+"";
								o_remote_resource_status=	objs[2]+"";
								break;
							}
						}
					}
				}
				log.info(o_fp0+" get "+task+":id["+o_remote_int_id+"],label["+o_remote_eqp_label+"] remote_resource_status-"+o_remote_resource_status);
			}
		//华为 MSC_Server
		if(o_object_class in ["130"] && o_vendor_id=="8" && o_title_text in ["H.248 SCTP链路故障","M3UA链路传输质量故障","M3UA链路故障"] && StringUtils.isNotBlank(o_remote_eqp_alias) )
			{
				String key;
				String task;
				List list;

				if(o_object_class == "130"){
					task="remote-mss";
					key=task+":"+o_remote_eqp_alias;
				}

				list = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key, task);
				if (list != null&& list.size() >0) {
					for (int i = 0; i < list.size(); i++) {
						Object[] objs = (Object[]) list.get(i);
						if (objs.length>0) {
							o_remote_int_id 			= objs[0]+"";
							if(StringUtils.isNotBlank(o_remote_int_id)){
								o_remote_eqp_label	    =	objs[1]+"";
								o_remote_resource_status=	objs[2]+"";

								o_special_field22="";
													o_special_field23="";
								break;
							}
						}
					}
				}
				log.info(o_fp0+" get "+task+":id["+o_remote_int_id+"],label["+o_remote_eqp_label+"] remote_resource_status-"+o_remote_resource_status);
			}

			//华为对端分析-基于spc-hex HSS/MME/MGCF add by fw required by shanchunlan@20160725
			if(o_vendor_id == "8" && o_object_class in ["8109","8101","6107"] &&
				o_title_text in ["MTP路由不可用","MTP目的信令点不可达","M3UA路由不可用","M3UA目的实体不可达","SCCP目的信令点禁止","SCCP目的信令点不可达","SCCP子系统禁止"] &&
				 StringUtils.isNotBlank(o_remote_eqp_label) ){
				o_remote_eqp_alias = o_remote_eqp_label;
				o_remote_eqp_label = "";
				this.setRemoteInfoBySpcHexRthandler();
			}

		   //爱立信、华为HSS（LTE）对端分析-基于别名 HSS add by fw required by shanchunlan@20160725
			if(o_vendor_id in ["1","8"] &&
				o_title_text in ["Diameter链路故障","Diameter对端实体故障","CCITT7 SIGNALLING LINK FAILURE","CCITT7 LINK SET SUPERVISION","Diameter, Link Failure",
				"CCITT7 DESTINATION INACCESSIBLE","SEMIPERMANENT CONNECTION FAULT","SUA SS7 DESTINATION INACCESSIBLE","M3UA DESTINATION INACCESSIBLE"] &&
				 StringUtils.isNotBlank(o_remote_eqp_label) ){
				o_remote_eqp_alias = o_remote_eqp_label;
				o_remote_eqp_label = "";
				this.setHSSRemoteInfoByAliasRthandler();
			}
			//IP城域网工程告警屏蔽, added by liucaiyong,required by shichao @20160923
			if(o_object_class =="706" && o_extra_id3=="91" ){
							String cirkey=joinKeyRthandler("port_circuit", o_eqp_int_id,o_int_id);
				String task="port_circuit_left";

				String remoteId="";

				List results = (List)util.getObject(this.CUSTOMCACHE,cirkey,task);
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
				  Object[] result = (Object[])item;
				  List olist = Arrays.asList(result);
					 String eqpId	=	Util.getTempV(olist,3);
					 if(StringUtils.isBlank(eqpId)){
						 continue;
					 }

					 String eqpClass = Util.getTempV(olist,6);
					 Object[] oObjects;
					 List oresults;
					 if(eqpClass in ["900","905"]){
						 oObjects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler("objects",eqpId),"objects");
							oresults = oObjects==null?null:Arrays.asList(oObjects);
							if (oresults != null&&!oresults.isEmpty()) {
								o_remote_int_id 			= eqpId;
								o_remote_eqp_label		=	Util.getTempV(oresults, 6);
								o_remote_resource_status		=	Util.getTempV(oresults, 5);

								log.info(o_fp0+" get port_circuit_left-objects:id["+o_remote_int_id+"],label["+o_remote_eqp_label+"]");
							}
					 }
					 else if(StringUtils.isBlank(eqpClass)){
							// oObjects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler("objects_trans",eqpId),"objects_trans");
							oObjects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler("objects_trans_fdn_id",eqpId),"objects_trans_fdn_id");
							oresults = oObjects==null?null:Arrays.asList(oObjects);
							if (oresults != null&&!oresults.isEmpty()) {
								o_remote_int_id 			= eqpId;
								o_remote_eqp_label		=	Util.getTempV(oresults, 5);
								o_remote_resource_status		=	Util.getTempV(oresults, 4);

								log.info(o_fp0+" get port_circuit_left-objects_trans:id["+o_remote_int_id+"],label["+o_remote_eqp_label+"]");
							}
					 }
					 if(StringUtils.isNotBlank(o_remote_int_id)){
						 break;
					 }
			  }
			}
			if(StringUtils.isBlank(o_remote_int_id)){
				task="port_circuit_right";
				results = (List)util.getObject(this.CUSTOMCACHE,cirkey,task);
				if (results!=null && !results.isEmpty()) {
					for (Object item : results) {
					  Object[] result = (Object[])item;
					  List olist = Arrays.asList(result);
						 String eqpId	=	Util.getTempV(olist,3);
						 if(StringUtils.isBlank(eqpId)){
							 continue;
						 }

						 String eqpClass = Util.getTempV(olist,6);
						 Object[] oObjects;
						 List oresults;
						 if(eqpClass in ["900","905"]){
							 oObjects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler("objects",eqpId),"objects");
								oresults = oObjects==null?null:Arrays.asList(oObjects);
								if (oresults != null&&!oresults.isEmpty()) {
									o_remote_int_id 			= eqpId;
									o_remote_eqp_label		=	Util.getTempV(oresults, 5);
									o_remote_resource_status		=	Util.getTempV(oresults, 4);

									log.info(o_fp0+" get port_circuit_right-objects:id["+o_remote_int_id+"],label["+o_remote_eqp_label+"]");
								}
						 }
						 else if(StringUtils.isBlank(eqpClass)){
								// oObjects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler("objects_trans",eqpId),"objects_trans");
								oObjects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler("objects_trans_fdn_id",eqpId),"objects_trans_fdn_id");
								oresults = oObjects==null?null:Arrays.asList(oObjects);
								if (oresults != null&&!oresults.isEmpty()) {
									o_remote_int_id 			= eqpId;
									o_remote_eqp_label		=	Util.getTempV(oresults, 5);
									o_remote_resource_status		=	Util.getTempV(oresults, 4);

									log.info(o_fp0+" get port_circuit_right-objects_trans:id["+o_remote_int_id+"],label["+o_remote_eqp_label+"]");
								}
						 }
						 if(StringUtils.isNotBlank(o_remote_int_id)){
							 break;
						 }
				  }
				}
			  }
			  if(StringUtils.isBlank(o_remote_int_id)){
				  task="port_circuit_ipnet";
				  Object[] objects = (Object[])util.getObject(this.CUSTOMCACHE,joinKeyRthandler(task,o_int_id),task);
				  results = objects==null?null:Arrays.asList(objects);
					if (results != null&&!results.isEmpty()) {
						o_remote_int_id 			= Util.getTempV(results, 1);
						o_remote_eqp_label		=	Util.getTempV(results, 2);

						// Object[] oObjects = util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler("objects_trans",o_remote_int_id),"objects_trans");
						Object[] oObjects = util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler("objects_trans_fdn_id",o_remote_int_id),"objects_trans_fdn_id");
						List oresults = oObjects==null?null:Arrays.asList(oObjects);
						if (oresults != null&&!oresults.isEmpty()) {
							o_remote_resource_status		=	Util.getTempV(oresults, 4);

							log.info(o_fp0+" get port_circuit_ipnet-objects_trans:id["+o_remote_int_id+"],label["+o_remote_eqp_label+"]");
						}
					}
			  }
			}

			if(o_remote_int_id == "-1807" || o_special_field22 == "-1807"){
				o_remote_resource_status = "0";
				if(StringUtils.isBlank(o_remote_eqp_alias)){
					o_remote_eqp_label = o_special_field23;
					o_remote_eqp_alias = o_special_field23;
				}
			}

			// CMCC-GD-DRITXQ-20200320-011-DRA sctplink类型资源采集及告警对端分析需求，告警来源：统一采集
			// if (o_alarm_source == "统一采集" && o_object_class == "8107" && StringUtils.isNotBlank(o_remote_eqp_alias)) {
			if (o_object_class == "8107" && StringUtils.isNotBlank(o_remote_eqp_alias)) {
				String key = "sctplink_ne_relation:" + o_remote_eqp_alias;
				// redis缓存外挂
				// Object[] objects = (Object[]) rutil.getObject(key);
				Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "sctplink_ne_relation");
				List objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
						o_remote_int_id    = Util.getTempV(objectsList, 1);
						o_remote_eqp_label = Util.getTempV(objectsList, 2);
						}
			}

			//对端分析
			if (StringUtils.isNotBlank(o_special_field22)&&o_omc_id != "6601" && o_omc_id != "6602" && o_omc_id != "6101" && o_omc_id != "6102" && o_omc_id != "6107"&&o_omc_id != "6108"&& o_omc_id != "90011" && o_omc_id != "6109"&&o_omc_id!="50201" &&o_professional_type!="3"&&o_professional_type!="5"&&o_vendor_id!="9014"&&o_vendor_id!="1038")
			{
				o_remote_int_id = o_special_field22;
				//sql = "select userlabel,zh_label,confirmed,OBJECT_CLASS from objects where int_id=" + o_special_field22;
				//list = Util.queryByHSql(sql);
				String key = "objects:"+o_special_field22;
				Map map = this.getObjectsValueWithMapRthandler(key,"objects");
				if(map.size()>0){
					o_remote_eqp_label = map.get("userlabel");
					o_remote_eqp_alias = StringUtils.isBlank(map.get("zh_label"))?map.get("userlabel"):map.get("zh_label");
					o_remote_resource_status = map.get("confirmed");
					o_remote_proj_sub_status = map.get("project_status");
					o_special_field17 = map.get("object_class");
					log.debug("remote_from_objects-fp0={}, remote_eqp_label={}, remote_eqp_alias={}, remote_resource_status={}, remote_proj_sub_status={}, special_field17={}", o_fp0, o_remote_eqp_label, o_remote_eqp_alias, o_remote_resource_status, o_remote_proj_sub_status, o_special_field17);
				}
			}

			// CMCC-GD-DRITXQ-20200320-011-DRA sctplink类型资源采集及告警对端分析需求，告警来源：统一采集
			// 通过判断o_remote_resource_status确认对端分析逻辑是否从objects表获取到资源：为空则表示从上述逻辑objects表未获取到资源，尝试从objects_it表查询资源
			if (StringUtils.isBlank(o_remote_resource_status) && StringUtils.isNotBlank(o_remote_int_id) && o_omc_id != "6601" && o_omc_id != "6602" && o_omc_id != "6101" && o_omc_id != "6102" && o_omc_id != "6107"&&o_omc_id != "6108"&& o_omc_id != "90011" && o_omc_id != "6109"&&o_omc_id!="50201" &&o_professional_type!="3"&&o_professional_type!="5"&&o_vendor_id!="9014"&&o_vendor_id!="1038") {
				String key = "objects_it:" + o_remote_int_id;
				// redis缓存外挂
				// Object[] objects = (Object[]) rutil.getObject(key);
				Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "objects_it");
				List objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
						o_remote_resource_status = Util.getTempV(objectsList, 2); // resource_status
						o_remote_proj_sub_status = "0"; // objects_it无project_status字段，设置默认值：0
						o_special_field17        = Util.getTempV(objectsList, 6); // object_class
						log.debug("remote_from_objects_it-fp0={}, remote_resource_status={}, special_field17={}", o_fp0, o_remote_resource_status, o_special_field17);
						}
			}

			if (o_remote_int_id != "-1807" && StringUtils.isBlank(o_remote_eqp_label))
			{
				if (StringUtils.isNotBlank(o_special_field22) && StringUtils.isNotBlank(o_special_field23) )
				{
					o_remote_eqp_label = o_special_field23;
					o_remote_eqp_alias = o_special_field23;
					o_remote_resource_status = "0";
					//sql = "select remote_object_class from ALARM_REMOTE_OBJECT_CLASS where vendor_id="+ o_vendor_id + " and object_class="+ o_object_class + " and alarm_title_text='" + o_title_text + "'";
					String key="alarm_remote_object_class:"+o_vendor_id+":"+o_object_class+":"+o_title_text;
					Object[] remote = util.getObject(CUSTOMCACHE, key,"alarm_remote_object_class");
					List remoteList = remote==null?null:Arrays.asList(remote);
					if(remoteList!=null&&!remoteList.isEmpty()){
						o_special_field17 = Util.getTempV(remoteList, 0);
					}
				}
			}

			if (StringUtils.isBlank(o_remote_resource_status)){
			//无对端匹配规则--默认为99
				o_remote_resource_status="99";
			}
		}

		private void getRemoteInfoBySF9Rthandler()
		{
			def matcher = o_special_field9=~/^.*对端网元=([^;]+).*$/;
			if(matcher.size()>0){
				o_remote_eqp_label=matcher[0][1];
			}

			matcher = o_special_field9=~/^.*对端端口名=([^;]+).*$/
			if(matcher.size()>0){
				o_rlocate_ne_name=matcher[0][1];
			}

			o_remote_int_id = Util.getCRC32(o_eqp_object_class+":"+o_extra_string1+":"+o_remote_eqp_label);
			o_rlocate_ne_int_id = Util.getCRC32("706:"+o_extra_string1+":"+o_rlocate_ne_name);
		}

		/**
		 * 添加eqp相关的字段信息
		 */
		private void setEquipmentInfoRthandler()
		{
			//LTE核心网resource_status赋值,@20151207
			if(o_object_class in ["121","122","124","8010","8101","8102","8103","8106","8107","8108","8109","81091","81092"]){
				if(StringUtils.isNotBlank(o_eqp_int_id)){
					String key = "objects:"+o_eqp_int_id;
					Map map = this.getObjectsValueWithMapRthandler(key,"objects");
					if(!map.isEmpty()){
						String resourceStatus = map.get("resource_status");
						if (StringUtils.isNotBlank(resourceStatus)){
							o_resource_status = resourceStatus;
						}
					}
				}
			}
			// fetch the parent NE info
			//added enodeb(8104)'s eqp-info,added by liucaiyong,required by shanchunlan@2014063018
			//if (o_object_class == "201" || o_object_class == "300" ||o_object_class == "9201" || o_object_class == "9300" || o_object_class == "8105" || o_object_class == "8104")
			if (o_object_class in ["201","300","9201","9300","8105","8104","41011","270"])
			{
				// modify NE fields
				//if( o_object_class == "8105" ||o_object_class == "8104")
				if (o_object_class in ["8105","8104","41011","270"])
				{
					o_eqp_int_id = i_eqp_int_id;
					if(StringUtils.isBlank(o_eqp_int_id) && o_org_type == "2" && o_object_class in ["8105","270"]){
						//LTE性能告警无设备信息，requery by shichao@20150407
						o_eqp_int_id = o_ParentIntId;
					}
				}
				else{
					o_eqp_int_id = t_related_bsc;
				}
				if (StringUtils.isNotBlank(o_eqp_int_id))
				{
					String key = "objects:"+o_eqp_int_id;
					Map map = this.getObjectsValueWithMapRthandler(key,"objects");
					o_eqp_object_class = map.get("object_class");
					if (o_eqp_object_class != null )
					{
						o_eqp_alias = map.get("userlabel");
						o_resource_status = map.get("resource_status");
						o_eqp_label = StringUtils.isNotBlank(map.get("zh_label"))?map.get("zh_label"):map.get("userlabel");
						String t_project_status = map.get("project_status");
						o_alarm_resource_status = this.setEqpProjectStatusRthandler(t_project_status);
					}
				}

			}
			if(o_professional_type=="1")
			{
				if(StringUtils.isBlank(o_eqp_int_id)||StringUtils.isBlank(o_eqp_object_class)||StringUtils.isBlank(o_eqp_label)||((o_ne_label ==o_eqp_label)&&(o_object_class==o_eqp_object_class)))
				{
					o_resource_status=o_ne_status;
					o_eqp_int_id = o_int_id;
			  o_eqp_alias = o_ne_alias;
			  o_eqp_label = o_ne_label;
					o_eqp_object_class=o_object_class;
					o_alarm_ne_status=o_alarm_resource_status;
				}
			}
			if(StringUtils.isBlank(o_eqp_object_class)||StringUtils.isBlank(o_eqp_label))
			{
				o_resource_status=o_ne_status;
				o_eqp_alias = o_ne_alias;
				o_eqp_label = o_ne_label;
				o_eqp_object_class=o_object_class;
				o_alarm_ne_status=o_alarm_resource_status;
			}
			if(StringUtils.isBlank(o_eqp_int_id))
			{
				o_eqp_int_id = o_int_id;
			}
			if(o_object_class=="201"||o_object_class=="300")
			{
				o_eqp_object_class="200";
			}
			if(o_object_class == "9201"||o_object_class=="9300")
			{
				o_eqp_object_class="9200";
			}
			//CMCC-GD-DRITXQ-20190613-005    需求名称：关于物联网告警标准化部署需求, wangyingfeng ,add by liucaiyong@20190814
			if(o_eqp_object_class == "8104" && o_title_text in ["网元连接中断","网元断链告警","Heartbeat Failure","NEA和网元断连","NE O&&amp;M CONNECTION FAILURE"]){
				Map map = this.getObjectsValueWithMapRthandler("objects:"+o_eqp_int_id,"objects");
				if(map.size()>0){
					String tmp = map.get("upd_flag");
					if(StringUtils.isNotBlank(tmp) && "9".equals(tmp)){
						o_eqp_object_class = "41011";
						o_object_class = "41011"
						if(o_object_class == "8105"){
							o_object_class = "270"
						}
						o_network_type_top = "10";
						o_network_type = "1002";
					}
				}
			}
			if(o_object_class in ["270","41011"]){
				o_eqp_object_class = "41011";
				o_network_type_top = "10";
				o_network_type = "1002";
			}
		}

		private String setEqpProjectStatusRthandler(String project_status)
		{
			if (project_status == null || project_status == 0 || project_status == "0")
			{
				project_status = "1";
			}
			else
			{
				if(project_status.toInteger()>=4)
				{
					project_status = project_status.toInteger() + 4;
				}
				else
				{
					project_status = project_status.toInteger() + 2;
				}
			}
			return project_status
		}

		/**
		 * 信令点信息
		 */
		private void setSignalingRthandler()
		{

		}
		/**
		 * 告警标准的Key组装工具
		 * @param map
		 * @return
		 */
		private String getStandKeyRthandler(Map map)
		{
			String mapping_type=map.get("mapping_type");
			String professional_type=map.get("professional_type");
			String object_class=map.get("object_class");
			String vendor_id=map.get("vendor_id");
			String alarm_title_text=map.get("alarm_title_text");
			String eqp_object_class=map.get("eqp_object_class");
			String probable_cause=map.get("probable_cause");
			String locate_name=map.get("locate_name");
			String vendor_severity=map.get("vendor_severity");
			String alarm_unit=map.get("alarm_unit");
			String standard_alarm_name =map.get("standard_alarm_name");
			String omc_alarm_id = map.get("omc_alarm_id");
			String seperator = map.get("seperator");
		if(StringUtils.isBlank(seperator))
		{
			 seperator=":";
		}
			return this.getKeyRthandler(mapping_type, professional_type, object_class, vendor_id, alarm_title_text, eqp_object_class, probable_cause, locate_name, vendor_severity, alarm_unit, omc_alarm_id,standard_alarm_name,seperator);
		}

		/**
		 * 组装Key的工具方法
		 * 需要与task的Key先后顺序一致
		 * @param pref
		 * @param args
		 * @return
		 */
		private String joinKeyRthandler(String pref,Object... args)
		{
			String key = pref;
			for(Object str:args)
			{
				key=key+":"+String.valueOf(str);
			}
			return key;
		}

		/**
		 * 告警标准化拼Key,可以不再使用
		 * @param mapping_type
		 * @param professional_type
		 * @param object_class
		 * @param vendor_id
		 * @param alarm_title_text
		 * @param eqp_object_class
		 * @param probable_cause
		 * @param locate_name
		 * @param vendor_severity
		 * @param alarm_unit
		 * @return
		 */
		private String getKeyRthandler(String mapping_type,String professional_type,
		String object_class,String vendor_id,
		String alarm_title_text,String eqp_object_class,
		String probable_cause,String locate_name,String vendor_severity,String alarm_unit,String omc_alarm_id,String standard_alarm_name,String sep)
		{
			String key="tfm_alarm_stand_info";
			if(StringUtils.isNotBlank(standard_alarm_name))
			{
				key=key+sep+standard_alarm_name;
			}
			if(StringUtils.isNotBlank(professional_type))
			{
				key=key+sep+professional_type;
			}
			if(StringUtils.isNotBlank(object_class))
			{
				key=key+sep+object_class;
			}
			if(StringUtils.isNotBlank(vendor_id))
			{
				key=key+sep+vendor_id;
			}
			if(StringUtils.isNotBlank(alarm_title_text))
			{
				key=key+sep+alarm_title_text;
			}
			if(StringUtils.isNotBlank(eqp_object_class))
			{
				key=key+sep+eqp_object_class;
			}
			if(StringUtils.isNotBlank(probable_cause))
			{
				key=key+sep+probable_cause;
			}
			if(StringUtils.isNotBlank(locate_name))
			{
				key=key+sep+locate_name;
			}
			if(StringUtils.isNotBlank(vendor_severity))
			{
				key=key+sep+vendor_severity;
			}
			if(StringUtils.isNotBlank(mapping_type))
			{
				key=key+sep+new String(mapping_type.getBytes(),"GBK");
			}
			if(StringUtils.isNotBlank(alarm_unit))
			{
				key=key+sep+alarm_unit
			}
			if(StringUtils.isNotBlank(omc_alarm_id))
			{
				key=key+sep+omc_alarm_id;
			}
			return key;
		}

		/**
		 * 告警标准化拼Key,可以不再使用
		 * @param mapping_type
		 * @param professional_type
		 * @param object_class
		 * @param vendor_id
		 * @param alarm_title_text
		 * @param eqp_object_class
		 * @param probable_cause
		 * @param locate_name
		 * @param vendor_severity
		 * @param alarm_unit
		 * @return
		 */
		private String getKeyRthandler(String mapping_type,String professional_type,
		String object_class,String vendor_id,
		String alarm_title_text,String eqp_object_class,
		String probable_cause,String locate_name,String vendor_severity,String alarm_unit,String omc_alarm_id,String standard_alarm_name)
		{
			String key="tfm_alarm_stand_info";
			if(StringUtils.isNotBlank(standard_alarm_name))
			{
				key=key+":"+standard_alarm_name;
			}
			if(StringUtils.isNotBlank(professional_type))
			{
				key=key+":"+professional_type;
			}
			if(StringUtils.isNotBlank(object_class))
			{
				key=key+":"+object_class;
			}
			if(StringUtils.isNotBlank(vendor_id))
			{
				key=key+":"+vendor_id;
			}
			if(StringUtils.isNotBlank(alarm_title_text))
			{
				key=key+":"+alarm_title_text;
			}
			if(StringUtils.isNotBlank(eqp_object_class))
			{
				key=key+":"+eqp_object_class;
			}
			if(StringUtils.isNotBlank(probable_cause))
			{
				key=key+":"+probable_cause;
			}
			if(StringUtils.isNotBlank(locate_name))
			{
				key=key+":"+locate_name;
			}
			if(StringUtils.isNotBlank(vendor_severity))
			{
				key=key+":"+vendor_severity;
			}
			if(StringUtils.isNotBlank(mapping_type))
			{
				key=key+":"+new String(mapping_type.getBytes(),"GBK");
			}
			if(StringUtils.isNotBlank(alarm_unit))
			{
				key=key+":"+alarm_unit
			}
			if(StringUtils.isNotBlank(omc_alarm_id))
			{
				key=key+":"+omc_alarm_id;
			}
			return key;
		}
		/**
		 * 告警标准化
		 * professional_type, 16
		 *  	   object_class,      17
		 * 	   vendor_id,         18
		 *  	   alarm_title_text,  19
		 *  	   eqp_object_class,  20
		 *  	   probable_cause,    21
		 *  	   locate_name,       22
		 *  	   vendor_severity    23
		 *  	   mapping_type       24
		 *  	   alarm_unit		  25
		 */
		private void setAlarmStandardRthandler()
		{
			//if(o_omc_id=="15001" || o_omc_id=="15002" || o_omc_id=="15003" || o_omc_id=="6109")
			//if(o_professional_type=="3" || o_omc_id=="6109")
			if(o_omc_id=="6109")
			{
				return;
			}
			//gpon告警2次标准化, liucaiyong@20160707
			if(o_professional_type=="3" && o_standard_flag in ["1","3"] && o_eqp_object_class in ["2011","2012"]){
				o_standard_flag = "2";
			 }else if(o_professional_type=="3" && o_omc_id != "9001"&&!o_title_text.contains("[工单风暴]")){
				return;
			}

			if(o_standard_flag =="2"||StringUtils.isBlank(o_standard_flag))
			{
				Map keyMap = new HashMap();
				log.debug(o_fp0+" o_int_id"+o_int_id+" o_object_class"+o_object_class+"o_standard_alarm_name"+o_standard_alarm_name+"o_vendor_id"+o_vendor_id);
				if(o_professional_type=="3"&&o_eqp_object_class in ["2011","2012"]){
					keyMap.put("professional_type", o_professional_type);
				  keyMap.put("vendor_id", o_vendor_id);
				  keyMap.put("eqp_object_class", o_eqp_object_class);
				  keyMap.put("mapping_type", "标准");
				  keyMap.put("alarm_title_text", o_title_text);
				  keyMap.put("taskName", "gd.alarmStandard.4");
				  log.debug(o_fp0+" con-cs5 key="+this.getStandKey(keyMap));

				  this.setAlarmStandardInfoRthandler(this.getStandKey(keyMap),(String)keyMap.get("taskName"));
				  if(o_standard_flag =="3"){
						  keyMap = new HashMap();
						  keyMap.put("professional_type", o_professional_type);
							 keyMap.put("vendor_id", o_vendor_id);
							 keyMap.put("eqp_object_class", "100");
							 keyMap.put("mapping_type", "标准");
							 if(o_vendor_id == "8"){
								 keyMap.put("omc_alarm_id", o_nms_alarm_id);
								 keyMap.put("taskName", "gd.alarmStandard.5");
								 log.debug(o_fp0+" con-cs2 key="+this.getStandKeyRthandler(keyMap));
							 }else{
								 keyMap.put("alarm_title_text", o_title_text);
								 keyMap.put("taskName", "gd.alarmStandard.4");
								 log.debug(o_fp0+" con-cs3 key="+this.getStandKeyRthandler(keyMap));
							 }
				  }else{
					  keyMap =  new HashMap();
				  }
				}
				else if(o_org_type=="2" && (o_vendor_type =="网元挂牌监控告警" || o_omc_id=="6608")){
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info_pm a where mapping_type='???' and eqp_object_class="+ o_object_class + " and alarm_title_text ='" + o_title_text + "'";
					this.setAlarmStandardInfoRthandler("tfm_alarm_stand_info_pm:"+o_object_class+":"+o_title_text+":"+"标准","gd.alarmStandard.pm.0");
					log.info(o_fp0+" con1 key="+"tfm_alarm_stand_info_pm:"+o_object_class+":"+o_title_text+":"+"标准");
				}
				//网管无告警上报 by shanchunlan@20150110
				//GCP-OMC断链 by shanchunlan@20150623
				else if (o_alarm_source == "综合监控告警量检测" || o_alarm_title in ["26441660","26445340"])
				{
					//专业+告警标题
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.32");
					log.info(o_fp0+" con2.0 key="+this.getStandKeyRthandler(keyMap));
				}
				//电视平台-华为 by liucaiyong@20160520
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_vendor_id == "8" && o_eqp_object_class == "2000" && o_object_class in ["66051","66050"])
				{
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("taskName", "gd.alarmStandard.22");
					log.info(o_fp0+" con1.1 key="+this.getStandKeyRthandler(keyMap));
				}
				//格林威尔、奥普泰 PTN告警标准化 added by lgy@20180606 required by sunyuqiu 需求单：CMCC-GD-DRITXQ-20180511-007
		  else if (o_professional_type == "3"&&(o_vendor_id=="9010"||o_vendor_id=="1010")&&o_eqp_object_class=="2009")
		  {
		  //专业(KEY)+厂家(KEY)+设备类型(KEY)+告警标题(KEY)
			  keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
				  keyMap.put("mapping_type", "标准");
				  keyMap.put("taskName", "gd.alarmStandard.4");
				  keyMap.put("alarm_title_text", o_title_text);
				  log.debug(o_fp0+" con3.0 key="+this.getStandKeyRthandler(keyMap));
		   }
		  //数据网 ISG标准化 added by lgy@20180606 required by sunyuqiu
				else if (o_professional_type == "2"&&o_vendor_id=="4"&&o_eqp_object_class=="1052")
				{
		  //专业(KEY)+厂家(KEY)+设备类型(KEY)+告警标题(KEY)
			 keyMap.put("professional_type", o_professional_type);
				   keyMap.put("vendor_id", o_vendor_id);
				   keyMap.put("eqp_object_class", o_eqp_object_class);
				   keyMap.put("mapping_type", "标准");
				   keyMap.put("taskName", "gd.alarmStandard.4");
				   keyMap.put("alarm_title_text", o_title_text);
				   log.debug(o_fp0+" con3.1 key="+this.getStandKeyRthandler(keyMap));
		  }
		  //私有云标准化 added by lgy@20180606 required by sunyuqiu
		  else if (o_professional_type == "9"&&o_vendor_id=="10007")
		  {
		  //专业(KEY)+厂家(KEY)+设备类型(KEY)+告警标题(KEY)+厂家告警级别
			 keyMap.put("professional_type", o_professional_type);
				   keyMap.put("vendor_id", o_vendor_id);
				   keyMap.put("eqp_object_class", o_eqp_object_class);
				   keyMap.put("mapping_type", "标准");
				   keyMap.put("taskName", "gd.alarmStandard.8");
				   keyMap.put("vendor_severity", o_vendor_severity);
				   keyMap.put("alarm_title_text", o_title_text);
				   log.debug(o_fp0+" con3.3 key="+this.getStandKeyRthandler(keyMap));
		  }

				//电视平台-中兴 by liucaiyong@20160520
				else if((o_omc_id == "6601" || o_omc_id == "6602") &&o_vendor_id == "7" && o_eqp_object_class == "2000"&& o_object_class in ["66051","66050"]){
					//专业+厂家+设备类型+厂家告警ID
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" con1.2 key="+this.getStandKeyRthandler(keyMap));
				}
				//内容网络标准化
				else if ((o_omc_id == "6601" || o_omc_id == "6602") &&o_vendor_id == "8" &&o_eqp_object_class == "2000" && o_extra_id3 in ["280","281","282","283"])
				{
					//专业+厂家+设备类型+告警标题
					this.setAlarmStandardInfoRthandler("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+"标准","gd.alarmStandard.pm.5");
					log.info(o_fp0+" con2.11 key="+"tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+"标准");
				}
				//智能网-HOST,华为/惠普/IBM by sunyuqiu@20130613 +++ 因数据网告警有org_type=2 uppdate sunyuqiu@20140702
				else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_vendor_id == "8" ||o_vendor_id == "104"||o_vendor_id == "101")&&(o_eqp_object_class == "2000") && StringUtils.isNotBlank( o_probable_cause_txt) && o_extra_id3!="289" )
				{
					//专业+厂家+设备类型+厂家告警ID
					keyMap.put("professional_type", "2");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" con2.1 key="+this.getStandKeyRthandler(keyMap));
				}
				//数据网-阿尔卡特-路由器 by sunyuqiu@20150124
				else if((o_omc_id == "6601" || o_omc_id == "6602") &&o_vendor_id == "0"&&o_eqp_object_class == "66003" && o_org_type=="1" ){
					//专业+厂家+设备类型+告警标题+厂家告警ID
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.7");
					log.info(o_fp0+" con2.2 key="+this.getStandKeyRthandler(keyMap));
				}
				//数据网-不良信息 IBM HP : HOST by shichao@20160829
				else if((o_omc_id == "6601" || o_omc_id == "6602") && o_vendor_id in["101","104"] && o_eqp_object_class in ["2000"]&& o_org_type=="1"  ){
					//专业+厂家+设备类型+告警标题+厂家告警ID
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.7");
					log.info(o_fp0+" con2.7 key="+this.getStandKeyRthandler(keyMap));
				}
				//数据网-物联网平台 by shichao@20161124
				else if((o_omc_id == "6601" || o_omc_id == "6602") && o_vendor_id =="1055" && o_eqp_object_class == "2000" && o_object_class == "11038" && o_org_type=="1"  ){
					//告警对象类型+厂家+告警标题+厂家告警ID
					keyMap.put("object_class", o_object_class);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.15");
					log.info(o_fp0+" con2.8 key="+this.getStandKeyRthandler(keyMap));
				}
				//数据网-垃圾短信告警 by shanchunlan@20170525
				else if((o_omc_id == "6601" || o_omc_id == "6602") && o_vendor_id =="8" && o_eqp_object_class == "1417"){
					//告警对象类型+厂家+告警标题
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.info(o_fp0+" con2.9 key="+this.getStandKeyRthandler(keyMap));
				}
				//网管告警自监控(性能),by sunyuqiu@20141216
				//过滤掉 宜通 ,by liucaiyong@20180123
				else if ((o_omc_id == "6601" || o_omc_id == "6602")&&o_professional_type=="5"&&o_org_type=="2" && o_vendor_id != "1042")
				{
					//专业+厂家+设备类型+告警标题
					this.setAlarmStandardInfoRthandler("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+"标准","gd.alarmStandard.pm.5");
					log.info(o_fp0+" con2.3 key="+"tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+"标准");
				}
				//网管告警自监控,by sunyuqiu@20141216
				else if ((o_omc_id == "6601" || o_omc_id == "6602"|| o_omc_id == "6603")&&o_professional_type=="5" && o_vendor_id != "1042")
				{
					//调整为 厂家+设备类型+告警标题+厂家告警ID+厂家原始告警级别+专业  altered  by lgy@20181112 required by shanchunlan
			keyMap.put("professional_type", o_professional_type);
			keyMap.put("vendor_id", o_vendor_id);
			keyMap.put("mapping_type", "标准");
			keyMap.put("eqp_object_class", o_eqp_object_class);
			keyMap.put("alarm_title_text", o_title_text);
			keyMap.put("omc_alarm_id", o_probable_cause_txt);
			keyMap.put("vendor_severity", o_vendor_severity);
			keyMap.put("taskName", "gd.alarmStandard.34");
			log.info(o_fp0+" con2.4 key="+this.getStandKeyRthandler(keyMap));
				}
				//网投告警,by sunyuqiu@20140909
				else if(o_omc_id == "6608"&&o_vendor_id == "66"&& o_eqp_object_class == "68001")
				{
					//厂家+设备类型+告警标题+厂家告警级别
					this.setAlarmStandardInfoRthandler("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.3");
					log.info(o_fp0+" con2.5 key="+this.getStandKeyRthandler(keyMap));
				}
				//数据网-垃圾短信系统磁阵告警 by sunyuqiu@20150130  增加爱立信NBI added by lgy@20181017
				else if((o_omc_id == "6601" || o_omc_id == "6602") && ((o_vendor_id == "8" && o_eqp_object_class == "10427163") || (o_vendor_id == "1" && o_eqp_object_class == "10400"))){
					//专业+厂家+设备类型+厂家告警ID
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" con2.6 key="+this.getStandKeyRthandler(keyMap));
				}
				//ISMP，by wangyingfeng@20170821
				else if(o_vendor_id == "9014"){
			  //专业+厂家+设备类型+告警标题
					  keyMap.put("professional_type", o_professional_type);
					  keyMap.put("vendor_id", o_vendor_id);
					  keyMap.put("eqp_object_class", o_eqp_object_class);
					  keyMap.put("alarm_title_text", o_title_text);
					  keyMap.put("mapping_type", "标准");
					  keyMap.put("taskName", "gd.alarmStandard.4");
					  log.info(o_fp0+" con3.0 key="+this.getStandKeyRthandler(keyMap));
				}
				else if(o_org_type=="2")
				{
					//this.setAlarmStandardInfo("tfm_alarm_stand_info_pm:"+o_title_text+":"+o_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.1");
					//log.info(o_fp0+" performance 1 key="+"tfm_alarm_stand_info_pm:"+o_title_text+":"+o_object_class+":"+o_vendor_severity+":"+"标准");
			// key调整，增加gd.alarmStandard.pm.6 by shichao@20150914
			if(o_object_class in ["8101","8102","8103","8104","8105","8107","8109","81091"]){
			  this.setAlarmStandardInfoRthandler("tfm_alarm_stand_info_pm:"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.6");
			  log.info(o_fp0+" performance 6 key="+"tfm_alarm_stand_info_pm:"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准");
			}else{
					//key值调整由gd.alarmStandard.pm.1为gd.alarmStandard.pm.3,by shichao&shanchunlan@20150806
					this.setAlarmStandardInfoRthandler("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.3");
					log.info(o_fp0+" performance 1 key="+"tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准");
			}
				}
				//工单风暴告警标准化  added by lgy@20180517
				else if(o_title_text.contains("[工单风暴]")){
					//专业+厂家+设备类型+告警标题
						keyMap.put("professional_type", o_professional_type);
			  keyMap.put("vendor_id", o_vendor_id);
			  keyMap.put("mapping_type", "标准");
			  keyMap.put("eqp_object_class", o_eqp_object_class);
			  keyMap.put("alarm_title_text", o_title_text);
			  keyMap.put("taskName", "gd.alarmStandard.4");
			  log.info(o_fp0+" con3.6 key="+this.getStandKeyRthandler(keyMap));
					}
				else if(o_org_type=="4" && o_vendor_type =="网元挂牌监控告警" )
				{
					//此告警使用业务归属位置来替换设备真实位置
					this.addRegionInfoRthandler("",i_city_name);
					this.setAlarmStandardInfoRthandler("tfm_alarm_stand_info_pm@"+o_title_text+"@"+o_object_class+"@标准@"+o_alarm_unit,"gd.alarmStandard.pm.2");
					log.info(o_fp0+" con.key.org_type.4="+"tfm_alarm_stand_info_pm:"+o_title_text+":"+o_object_class+":标准:"+o_alarm_unit);
				}
				//IT专业，IDC,VDC by wangyingfeng@20170821
				else if((o_omc_id == "6601" || o_omc_id == "6602") && o_professional_type == "9"){
					//专业+厂家+设备类型+厂家告警ID
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" con3.1 key="+this.getStandKeyRthandler(keyMap));
				}
				//IP短信网关告警 added by lgy@20180425
				else if(o_professional_type=="2"&&o_eqp_object_class=="6144"&&o_vendor_id == "7"){
						keyMap.put("professional_type", o_professional_type);
						keyMap.put("vendor_id", o_vendor_id);
						keyMap.put("eqp_object_class", o_eqp_object_class);
						keyMap.put("mapping_type", "标准");
						keyMap.put("omc_alarm_id", o_probable_cause_txt);
						keyMap.put("taskName", "gd.alarmStandard.5");
						log.info(o_fp0+" con3.2 key="+this.getStandKeyRthandler(keyMap));
				}
				//爱立信 智能网性能监控系统,OMM
				else if(o_professional_type=="1"&&o_vendor_id == "1"&&o_org_type=="2"&&(o_eqp_object_class=="12000"))
				{
					//专业+厂家+告警标题+设备类型+厂家告警级别
					this.setAlarmStandardInfoRthandler("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.3");
					//keyMap.put("professional_type", o_professional_type);
					//keyMap.put("vendor_id", o_vendor_id);
					//keyMap.put("alarm_title_text", o_title_text);
					//keyMap.put("eqp_object_class", o_eqp_object_class);
					//keyMap.put("vendor_severity", o_vendor_severity);
					//keyMap.put("mapping_type", "标准");
					//keyMap.put("taskName", "gd.alarmStandard.8");
					log.info(o_fp0+" con104 key="+this.getStandKeyRthandler(keyMap));
				}
				//华为 智能网性能监控系统 CentrexAS,SCP,SMP
				else if(o_professional_type=="1"&&o_vendor_id == "8"&&o_org_type=="2"&&(o_eqp_object_class=="120"||o_eqp_object_class=="111"||o_eqp_object_class=="110"))
				{
					//专业+厂家+告警标题+设备类型+厂家告警级别
					this.setAlarmStandardInfoRthandler("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.3");
					//keyMap.put("professional_type", o_professional_type);
					//keyMap.put("vendor_id", o_vendor_id);
					//keyMap.put("alarm_title_text", o_title_text);
					//keyMap.put("eqp_object_class", o_eqp_object_class);
					//keyMap.put("vendor_severity", o_vendor_severity);
					//keyMap.put("mapping_type", "标准");
					//keyMap.put("taskName", "gd.alarmStandard.8");
					log.info(o_fp0+" con103 key="+this.getStandKeyRthandler(keyMap));
				}
				//guojingwei 20080813 added:
				//条件o_standard_alarm_name-->o_locate_name,by shanchunlan@20140612
				//双重（ID+标题) ,by shanchunlan@20140618
				//else if(StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "8"&& o_eqp_object_class == "130"  && (o_probable_cause=="2371" || o_probable_cause=="2396"  || o_probable_cause=="2398" || o_probable_cause=="2400" ))

				else if(StringUtils.isNotBlank(o_locate_name)&&o_vendor_id == "8"&& o_eqp_object_class == "130" && o_title_text=="不可用电路数超过阈值"&& (o_probable_cause=="2371" || o_probable_cause=="2396"  || o_probable_cause=="2398" || o_probable_cause=="2400" ))
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and alarm_title_text='" + o_title_text + "' and eqp_object_class=" + o_eqp_object_class +" and omc_alarm_id ='" + o_probable_cause+"'"+" and alarm_unit ='" + o_special_field18+"'";
					//key=this.getKeyRthandler(null, null,null, o_vendor_id, o_title_text, o_eqp_object_class, o_probable_cause, null, null, o_special_field18);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					//keyMap.put("alarm_unit", o_special_field18);
					//update by shanchunlan@20140516,o_special_field18->o_locate_name
					keyMap.put("alarm_unit", o_locate_name);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.17");
					log.info(o_fp0+" con2 key="+this.getStandKeyRthandler(keyMap));
				}
				//标准化表中无alarm_unit,去掉
				//else if(StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "8"&& (o_object_class=="200"))
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class="+ o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"' and alarm_title_text ='" + i_AlarmTitleTxt + "'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("eqp_object_class", o_eqp_object_class);
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("alarm_title_text", i_title_text);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("taskName", "gd.alarmStandard.18");
				//	log.info(o_fp0+" con3 key="+this.getStandKey(keyMap));
				//}
				//重复,去掉--标准化表中无alarm_unit,去掉
				//else if(StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "8"&& (o_object_class == "201" || o_object_class == "300"))
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class="+ o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("eqp_object_class", o_eqp_object_class);
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("taskName", "gd.alarmStandard.20");
				//	log.info(o_fp0+" add hw-wx-2 con16 key="+this.getStandKey(keyMap));
				//}
				//标准化表中无alarm_unit,去掉
				//else if(StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "8" && (o_object_class == "9201" || o_object_class == "9300" ))
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"' and alarm_title_text ='" + i_AlarmTitleTxt + "'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("object_class", o_object_class);
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("alarm_title_text", i_title_text);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("taskName", "gd.alarmStandard.15");
				//	log.info(o_fp0+" con4 key="+this.getStandKey(keyMap));
				//}
				//标准化表中无alarm_unit,去掉
				//else if(StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "8"&&(o_probable_cause=="2371" || o_probable_cause=="2396"  || o_probable_cause=="2398" || o_probable_cause=="2400") )
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and standard_alarm_name='" + o_standard_alarm_name + "' and eqp_object_class=" + o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("eqp_object_class", o_eqp_object_class);
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("standard_alarm_name", o_standard_alarm_name);
				//	keyMap.put("taskName", "gd.alarmStandard.1");
				//	log.info(o_fp0+" con5 key="+this.getStandKey(keyMap));
				//}
				//去掉，合并到con6
				//else if (StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&StringUtils.isBlank(o_locate_name))	// Eric
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=1 and standard_alarm_name='" + o_standard_alarm_name + "' and alarm_title_text='" + o_title_text + "' and eqp_object_class=" + o_eqp_object_class + " and vendor_severity='"+o_vendor_severity+"'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("eqp_object_class", o_eqp_object_class);
				//	keyMap.put("vendor_severity", o_vendor_severity);
				//	keyMap.put("alarm_title_text", o_title_text);
				//	keyMap.put("standard_alarm_name", o_standard_alarm_name);
				//	keyMap.put("taskName", "gd.alarmStandard.30");
				//	log.info(o_fp0+" con6-1 key="+this.getStandKey(keyMap));
				//}

				//爱立信标准化
				//add daixueyue by 20130905
				//合并，过滤条件 o_standard_alarm_name-->o_locate_name，con6-1去掉
				//else if (StringUtils.isNotBlank(o_standard_alarm_name)&&o_vendor_id == "1") // Eric
				else if (StringUtils.isNotBlank(o_locate_name)&&o_vendor_id == "1") // Eric
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=1 and standard_alarm_name='" + o_standard_alarm_name + "' and alarm_title_text='" + o_title_text + "' and eqp_object_class=" + o_eqp_object_class + " and vendor_severity='"+o_vendor_severity+"'";
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("alarm_title_text", o_title_text);
					//keyMap.put("standard_alarm_name", o_standard_alarm_name);
					//update by shanchunlan@20140516,standard_alarm_name->alarm_unit,o_standard_alarm_name->o_locate_name
					keyMap.put("alarm_unit", o_locate_name);
					keyMap.put("taskName", "gd.alarmStandard.0");
					log.info(o_fp0+" con6 key="+this.getStandKeyRthandler(keyMap));
				}


				else if(StringUtils.isBlank(o_standard_alarm_name)&&(o_alarm_title =="99" || o_alarm_title =="98" || o_alarm_title =="1517773" || o_alarm_title =="15199964"|| o_alarm_title =="9645541"))
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where mapping_type='???' and alarm_title_text='"+ o_title_text +"'";
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.25");
					keyMap.put("seperator","@");
					log.info(o_fp0+" con7 key="+this.getStandKeyRthandler(keyMap));
				}
				//else if (StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "8" &&o_object_class == "9201" )
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("object_class", o_object_class);
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("taskName", "gd.alarmStandard.14");
				//	log.info(o_fp0+" con8 key="+this.getStandKey(keyMap));
				//}
				////华为BSC 标准化by liucaiyong @2013101211, 合并到con50
				//else if(StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8" &&(o_object_class=="200") )
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class="+ o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"' and alarm_title_text ='" + i_AlarmTitleTxt + "'";
					//keyMap.put("vendor_id", o_vendor_id);
					//keyMap.put("eqp_object_class", o_eqp_object_class);
					//keyMap.put("omc_alarm_id", o_probable_cause);
					//keyMap.put("alarm_title_text", i_title_text);
					//keyMap.put("mapping_type", "标准");
					//keyMap.put("taskName","gd.alarmStandard.18");
					//log.info(o_fp0+" con9 key="+this.getStandKey(keyMap));
				//}

				//MIQ性能告警标准化
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_sub_alarm_type=="970")
				{
					o_vendor_id = "956";
					o_vendor_name = "MIQ系统";

					//专业+厂家+设备类型+告警标题  +厂家告警级别
					this.setAlarmStandardInfoRthandler("tfm_alarm_stand_info_pm:"+o_professional_type+":"+o_vendor_id+":"+o_title_text+":"+o_eqp_object_class+":"+o_vendor_severity+":"+"标准","gd.alarmStandard.pm.3");
					//keyMap.put("professional_type", o_professional_type);
					//keyMap.put("vendor_id", o_vendor_id);
					//keyMap.put("eqp_object_class", o_object_class);
					//keyMap.put("mapping_type", "标准");
					//keyMap.put("alarm_title_text", i_title_text);
					//keyMap.put("taskName", "gd.alarmStandard.8");
					//keyMap.put("vendor_severity", o_vendor_severity);
					o_org_type ="2";
					log.info(o_fp0+" con98 key="+this.getStandKeyRthandler(keyMap));
				}
				//全流程监控告警标准化
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "150"&&o_eqp_object_class=="150903")
				{
					//专业+厂家+设备类型+告警标题+厂家告警级别
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", i_title_text);
					keyMap.put("taskName", "gd.alarmStandard.8");
					keyMap.put("vendor_severity", o_vendor_severity);
					log.info(o_fp0+" con99 key="+this.getStandKeyRthandler(keyMap));
				}
				//中兴LTE-CG标准化
				else if (StringUtils.isBlank(o_standard_alarm_name)&&o_professional_type == "2"&&o_eqp_object_class == "124"&&o_vendor_id == "7" )
				{
					//专业+厂家+设备类型+厂家告警ID
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("mapping_type", "标准");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" con100 key="+this.getStandKeyRthandler(keyMap));
				}

				else if(o_vendor_id == "8" &&(o_object_class == "201" || o_object_class == "300") )
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class="+ o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
					keyMap.put("mapping_type", "标准");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" hw-wx-1 con16 key="+this.getStandKeyRthandler(keyMap));
				}
				//else if( StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8" &&(o_object_class == "9201" || o_object_class == "9300" ))
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"' and alarm_title_text ='" + i_AlarmTitleTxt + "'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("object_class", o_object_class);
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("alarm_title_text", i_title_text);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("taskName", "gd.alarmStandard.15");
				//	log.info(o_fp0+" con10 key="+this.getStandKey(keyMap));
				//}

				//删除 华为OMC ，因为花名册无相应数据,by shanchunlan@20140618
				//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8" &&o_object_class == "100" && o_tmsc_cat == "20")
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class=10020 and omc_alarm_id ='" + o_probable_cause+"'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("eqp_object_class", "10020");
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("taskName", "gd.alarmStandard.20");
				//	log.info(o_fp0+" con11 key="+this.getStandKey(keyMap));
				//}
				//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_object_class == "100" && o_tmsc_cat == "21")
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class=10021 and omc_alarm_id ='" + o_probable_cause+"'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("eqp_object_class", "10021");
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("taskName", "gd.alarmStandard.20");
				//	log.info(o_fp0+" con12 key="+this.getStandKey(keyMap));
				//}

				//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_object_class == "108" && o_tmsc_cat == "15")
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and eqp_object_class=10815 and omc_alarm_id ='" + o_probable_cause+"'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("eqp_object_class", "10815");
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("taskName", "gd.alarmStandard.20");
				//	log.info(o_fp0+" con13 key="+this.getStandKey(keyMap));
				//}
				//恢复华为MGW\MSS加一级汇接
				else if(StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_object_class == "131" && o_tmsc_cat == "2")
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class=131119 and omc_alarm_id ='" + o_probable_cause+"'";
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", "131119");
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con14 key="+this.getStandKeyRthandler(keyMap));
				}
				else if(StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_object_class == "130" && o_tmsc_cat == "2")
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class=130118 and omc_alarm_id ='" + o_probable_cause+"'";
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", "130118");
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con15 key="+this.getStandKeyRthandler(keyMap));
				}

				//标准化 by liucaiyong @20131012 ，原华为MGW\MSS加一级汇接，改成 HLR	STP	MGW	MSC_Server	OMC
				else if(StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&(o_object_class == "102"||o_object_class == "108" || o_object_class == "130"|| o_object_class == "131" || o_object_class == "100"  ))
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and mapping_type='???' and object_class=131119 and omc_alarm_id ='" + o_probable_cause+"'";
					//专业+厂家+设备类型+告警标题+厂家告警ID
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", i_title_text);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.7");
					log.info(o_fp0+" con14-1 key="+this.getStandKeyRthandler(keyMap));
				}

				//华为标准化by liucaiyong @2013101211,FEP		SCP	SMP	VC,暂时忽略I2000
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&& (o_object_class=="116"||o_object_class=="111"||o_object_class=="110"||o_object_class=="112"||o_object_class=="140001"))
				{
					//专业+厂家+设备类型+厂家告警ID
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("mapping_type", "标准");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" con41 key="+this.getStandKeyRthandler(keyMap));
				}

				//华为标准化by liucaiyong @2013101211,SAU
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&& o_eqp_object_class=="115")
				{
					/*
					//专业+厂家+设备类型+告警对象类型+厂家告警ID
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("mapping_type", "标准");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("object_class", o_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					log.info(o_fp0+" add con42 key="+this.getStandKey(keyMap));
					*/
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.5");

					log.info(o_fp0+" con42 key="+this.getStandKeyRthandler(keyMap));

				}
				//华为  标准化by liucaiyong @2013101211,ENODEB
				else if (StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "8"&& (o_object_class=="8104"||o_object_class=="8105"))
				{
					//特殊标准化，厂家+设备类型+厂家告警ID+告警解释辅助字段,update by shanchunlan@20140521
					keyMap.put("vendor_id", o_vendor_id);
					if (StringUtils.isNotBlank(o_locate_name))
					{
					  keyMap.put("eqp_object_class", o_eqp_object_class);
						keyMap.put("alarm_unit", o_locate_name);
						keyMap.put("taskName", "gd.alarmStandard.29");
					}
					else
					{
						keyMap.put("mapping_type", "标准");
					  keyMap.put("eqp_object_class", o_eqp_object_class);
					  keyMap.put("taskName", "gd.alarmStandard.20");
					}
					keyMap.put("omc_alarm_id", o_probable_cause);
					//keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con47-1 key="+this.getStandKeyRthandler(keyMap));
				}
		  else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_eqp_object_class=="9200")
		  {
			//厂家+设备类型+告警对象类型+厂家告警ID
			//-->厂家+设备类型+厂家告警ID,updated by liucaiyong @20131202
			keyMap.put("mapping_type", "标准");
			keyMap.put("vendor_id", o_vendor_id);
			keyMap.put("eqp_object_class", o_eqp_object_class);
			//keyMap.put("object_class", o_object_class);
			keyMap.put("omc_alarm_id", o_probable_cause);
					//keyMap.put("taskName", "gd.alarmStandard.28");
					keyMap.put("taskName", "gd.alarmStandard.20");
			log.info(o_fp0+" con53 key="+this.getStandKeyRthandler(keyMap));
		  }

		  //华为 DRA ,by liucaiyong @20140313
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "8" && o_object_class=="8107")
				{
					//厂家+告警对象类型+厂家告警ID
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("object_class", o_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.14");
					log.info(o_fp0+" con54 key="+this.getStandKeyRthandler(keyMap));
				}

				//华为 UC (MMCAS,ATAE) ,by liucaiyong @20140313
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "8" && (o_object_class=="7000"||o_object_class=="7001"))
				{
						//专业+厂家+告警标题+设备类型+厂家告警级别
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.8");
					log.info(o_fp0+" con55 key="+this.getStandKeyRthandler(keyMap));
				}



				//华为标准化by liucaiyong @2013101211,
				//RNC	BSC	HSS	PCSCF	USCDB	SLF	IMSHSS	MRFP	MRFC	ISBG	IMGW
				//VIG_MGW	IMSCG	VIG_Server	SPG	CGP	SBC	MGCF	MMTEL	ENUM/DNS	CTXAS
				//VIG_MGW与VIG_Server都有两个
				//MMTAS IMSCG ENUM/DNS IMGW CSCF SCSCF ICSCF, by shanchunlan@20150623
				//SAEGW MME ,by shichao@20150920
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&(o_object_class in ["200","8109","6101","6122","6110","6109","6106","6105","6123","19756","6114","6120","6112","6107","19751","120","6113","6119","19753","6121","19754","6117","6127","6108","6111","6102","6103"]))
				{
					//厂家+设备类型+厂家告警ID
					keyMap.put("mapping_type", "标准");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con50 key="+this.getStandKeyRthandler(keyMap));
				}
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&(o_eqp_object_class in ["8101","8102"]))
				{
					//厂家+设备类型+厂家告警ID
					keyMap.put("mapping_type", "标准");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con50-1 key="+this.getStandKeyRthandler(keyMap));
				}
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&(o_eqp_object_class in ["124","8106"]))
				{
				  //华为 PCRF/CG 厂家+设备类型+厂家告警ID+告警对象类型
					keyMap.put("mapping_type", "标准");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("object_class", o_object_class);
					keyMap.put("taskName", "gd.alarmStandard.28");
					log.info(o_fp0+" con50-2 key="+this.getStandKeyRthandler(keyMap));
				}

				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8"&&o_omc_id == "1505")
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and alarm_title_text='" + o_title_text + "' and eqp_object_class=" + o_eqp_object_class + " and vendor_severity='"+o_vendor_severity+"'";
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.22");
					log.info(o_fp0+" con16 1 key="+this.getStandKeyRthandler(keyMap));
				}
				//华为PCRF,required by shanchunlan@20140404
				//增加华为TG,AGCF added by lgy required by shanchunlan@20180814
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8" && (o_object_class=="8106" || o_eqp_object_class=="6128" || o_eqp_object_class=="6161"))
				{
					//专业+厂家+设备类型+厂家告警ID
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" con161 key="+this.getStandKeyRthandler(keyMap));
				}
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "8" && (o_omc_id != "6601" && o_omc_id != "6602" && o_omc_id != "6607" ))
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=8 and alarm_title_text='" + o_title_text + "' and eqp_object_class=" + o_eqp_object_class + " and vendor_severity='"+o_vendor_severity+"'";
					keyMap.put("mapping_type", "标准");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con16 2 key="+this.getStandKeyRthandler(keyMap));
				}
				//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&(o_object_class == "9200" || o_object_class == "9201" || o_object_class == "9300"))
				//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&(o_object_class == "9201" || o_object_class == "9300"))
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=7 and mapping_type='???' and object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("object_class", o_object_class);
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("taskName", "gd.alarmStandard.14");
				//	log.info(o_fp0+" con17 key="+this.getStandKey(keyMap));
				//}
				//中兴RNC标准化 by liucaiyong@20131012 ，从con17中分离出
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&o_eqp_object_class == "9200")
				{
					//厂家+设备类型+告警标题+厂家告警ID
					//-->厂家+设备类型+厂家告警ID ,updated by liucaiyong@20131202
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					//keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("omc_alarm_id", o_probable_cause);
					//keyMap.put("taskName", "gd.alarmStandard.18");
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con45 key="+this.getStandKeyRthandler(keyMap));
				}
				//合并中兴OMC-TDOMCR、TDOMCS(con18\con19)-->中兴OMC(con18),by shanchunlan@20140618
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&o_object_class == "100")
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=7 and mapping_type='???' and eqp_object_class=10020 and alarm_title_text ='" + o_title_text + "'";
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.23");
					keyMap.put("seperator","@");
					log.info(o_fp0+" con18 key="+this.getStandKeyRthandler(keyMap));
				}
				//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&o_object_class == "100" && o_tmsc_cat == "20")
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=7 and mapping_type='???' and eqp_object_class=10020 and alarm_title_text ='" + o_title_text + "'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("eqp_object_class", "10020");
				//	keyMap.put("alarm_title_text", o_title_text);
				//	keyMap.put("taskName", "gd.alarmStandard.23");
				//	keyMap.put("seperator","@");
				//	log.info(o_fp0+" con18 key="+this.getStandKey(keyMap));
				//}
				//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&o_object_class == "100" && o_tmsc_cat == "21")
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=7 and mapping_type='???' and eqp_object_class=10021 and alarm_title_text ='" + o_title_text + "'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("eqp_object_class", "10021");
				//	keyMap.put("alarm_title_text", o_title_text);
				//	keyMap.put("taskName", "gd.alarmStandard.23");
				//	keyMap.put("seperator","@");
				//	log.info(o_fp0+" con19 key="+this.getStandKey(keyMap));
				//}
				//告警标准化 by liucaiyong@20131012,原中兴MGW,MSS 调整成 HLR	MGW	MSC_Server
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&(o_object_class == "102"||o_object_class == "131"||o_object_class == "130"))
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"'" + " and vendor_severity='"+o_vendor_severity+"' and professional_type = " + o_professional_type + " and alarm_title_text ='" + o_title_text + "'";
					//专业+厂家+设备类型+告警标题
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.info(o_fp0+" con20 key="+this.getStandKeyRthandler(keyMap));
				}
				//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "7"&&o_object_class == "130")
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where mapping_type='???' and vendor_id=7 and vendor_severity='"+o_vendor_severity+"' and object_class="+ o_object_class + "and alarm_title_text ='" + o_title_text + "'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("object_class", o_object_class);
				//	keyMap.put("vendor_severity", o_vendor_severity);
				//	keyMap.put("alarm_title_text", o_title_text);
				//	keyMap.put("taskName", "gd.alarmStandard.16");
				//	log.info(o_fp0+" con21 key="+this.getStandKey(keyMap));
				//}

				//中兴LTE告警 标准化 8105  add by 20120328
				//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& o_object_class=="8105")
				//{
				//	keyMap.put("professional_type", o_professional_type);
				//	keyMap.put("object_class", o_object_class);
				//	keyMap.put("vendor_id", o_vendor_id);
				//	//keyMap.put("eqp_object_class", o_eqp_object_class);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("vendor_severity", o_vendor_severity);
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("taskName", "gd.alarmStandard.6");
				//	log.info(o_fp0+" zh.lte.1 key="+this.getStandKey(keyMap));
				//}

				//中兴LTE告警 标准化 8104 by liucaiyong@20131012,从zh.lte.1中分离出来
				//else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& (o_object_class=="8104"||o_object_class=="8105"||o_object_class=="8101" ||o_object_class=="8102"))
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& (o_object_class in ["8104","8105"]))
				{
					//厂家+设备类型+厂家告警ID
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					if(StringUtils.isNotBlank(o_locate_name)){
						//中兴“天线校正失败”告警标准化,厂家+设备类型+厂家告警ID+告警解释辅助字段,update by sunyuqiu@20150917
						keyMap.put("alarm_unit", o_locate_name);
						keyMap.put("taskName", "gd.alarmStandard.29");
					}
					else{
						keyMap.put("mapping_type", "标准");
						keyMap.put("taskName", "gd.alarmStandard.20");
					}
					log.info(o_fp0+" zh.lte.1-1 key="+this.getStandKeyRthandler(keyMap));
				}
				//东信数据网管，by shichao@20151126
				else if( o_vendor_id in ["0","7","8","101","661"] && o_eqp_object_class == "100" ){
					//厂家+设备类型+告警标题+厂家告警ID
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.18");
					log.info(o_fp0+" con109 key="+this.getStandKeyRthandler(keyMap));
				}
				// 东信数据网IMS数通
				// else if(o_omc_id in ["6601", "6602", "6603"] && o_extra_id3 == "349"){
				// o_network_type_top = "2"; // 一级专业：核心网
				// o_network_type = "223"; // 二级专业：PS域-GPRS
				// }
				//中兴 MME SAEGW PCRF，by shichao@20150921
				else if(StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& (o_object_class in ["8101","8102","8106"])){
					//厂家+设备类型+告警标题+厂家告警ID
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.18");
					log.info(o_fp0+" con109 key="+this.getStandKeyRthandler(keyMap));
				}
				//中兴LTE告警 标准化 8101,8108,8010 add by 20120328
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& (o_eqp_object_class=="8101" || o_eqp_object_class=="8108" || o_eqp_object_class=="8010"))
				{
					keyMap.put("professional_type", o_professional_type);
					//keyMap.put("object_class", o_object_class);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" zh.lte.2 key="+this.getStandKeyRthandler(keyMap));
				}

				//中兴LTE告警 标准化 8109 by liucaiyong@20131012,从zh.lte.2中分离出来
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& o_eqp_object_class=="8109")
				{
					//厂家+设备类型+厂家告警ID
					//keyMap.put("vendor_id", o_vendor_id);
					//keyMap.put("eqp_object_class", o_eqp_object_class);
					//keyMap.put("mapping_type", "标准");
					//keyMap.put("omc_alarm_id", o_probable_cause);

					//改成 专业+厂家+设备类型+告警标题
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.info(o_fp0+" zh.lte.2-1 key="+this.getStandKeyRthandler(keyMap));
				}
				//中兴PSBC标准化 add by lgy@20180508
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id=="7"&&o_eqp_object_class=="6147")
				{
					//厂家+设备类型+厂家告警id+告警标题
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.18");
					log.info(o_fp0+" con113 key="+this.getStandKeyRthandler(keyMap));
					}
				//中兴无线BSC告警 标准化 200 by liucaiyong@2014021317
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id=="7"&& o_eqp_object_class=="200")
				{
					//厂家+设备类型+厂家告警id+告警标题
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.18");
					log.info(o_fp0+" con111 key="+this.getStandKeyRthandler(keyMap));
				}

				else if(StringUtils.isBlank(o_standard_alarm_name)&&(o_alarm_title =="649991"||o_alarm_title =="649992"||o_alarm_title =="649993"||o_alarm_title =="649994"||o_alarm_title =="649995"||o_alarm_title =="649996"||o_alarm_title =="649997"||o_alarm_title =="649998"||o_alarm_title =="649999"))
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where mapping_type='???'  and eqp_object_class="+ o_eqp_object_class + " and alarm_title_text ='" + o_title_text + "'";
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.26");
					log.info(o_fp0+" con22 key="+this.getStandKeyRthandler(keyMap));
				}
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_object_class == "121" || o_object_class == "122"))
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where mapping_type='???' and professional_type = 2 and vendor_id=" + o_vendor_id + " and eqp_object_class = " + o_eqp_object_class + " and alarm_title_text ='" + o_title_text + "' and rownum < 2 ";
					keyMap.put("professional_type", "2");
					keyMap.put("mapping_type", "标准");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.info(o_fp0+" con23 key="+this.getStandKeyRthandler(keyMap));
				}
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "81")
				{
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.27");
					keyMap.put("seperator","@");
					log.info(o_fp0+" con24 key="+this.getStandKeyRthandler(keyMap));
				}
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "9004")
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id=9004 and eqp_object_class="+ o_eqp_object_class + " and omc_alarm_id ='" + o_probable_cause+"'" + " and professional_type = " + o_professional_type;
					keyMap.put("vendor_id", "9004");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("taskName", "gd.alarmStandard.10");
					log.info(o_fp0+" con25 key="+this.getStandKeyRthandler(keyMap));
				}
				//铁塔告警,liucaiyong@20170921 by sunyuqiu
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1038"&&o_eqp_object_class == "30013")
				{
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", o_title_text);
				  keyMap.put("taskName", "gd.alarmStandard.4");
					log.info(o_fp0+" con26 key="+this.getStandKeyRthandler(keyMap));
				}
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "14"&&o_object_class != "11004")
				{
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.8");
					log.info(o_fp0+" con14.0 key="+this.getStandKeyRthandler(keyMap));
				}
				// by liucaiyong@20131012 ，移除RNC
				//else if (StringUtils.isBlank(o_standard_alarm_name)&&(o_object_class == "9200" || o_object_class == "9201" || o_object_class == "9300"))
				//else if (StringUtils.isBlank(o_standard_alarm_name)&&(o_object_class == "9201" || o_object_class == "9300"))
				//{
				//	//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and object_class="+ o_object_class + " and omc_alarm_id ='" + o_probable_cause+"'";
				//	keyMap.put("vendor_id", o_vendor_id);
				//	keyMap.put("mapping_type", "标准");
				//	keyMap.put("object_class", o_object_class);
				//	keyMap.put("omc_alarm_id", o_probable_cause);
				//	keyMap.put("taskName", "gd.alarmStandard.14");
				//	log.info(o_fp0+" con26 key="+this.getStandKey(keyMap));
				//}
				else if (StringUtils.isBlank(o_standard_alarm_name)&&o_object_class == "100" && o_tmsc_cat == "20")
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and eqp_object_class=10020 and omc_alarm_id ='" + o_probable_cause+"'";
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", "10020");
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con27 key="+this.getStandKeyRthandler(keyMap));
				}
				else if (StringUtils.isBlank(o_standard_alarm_name)&&o_object_class == "100" && o_tmsc_cat == "21")
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and eqp_object_class=10021 and omc_alarm_id ='" + o_probable_cause+"'";
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", "10021");
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con28 key="+this.getStandKeyRthandler(keyMap));
				}

				// add by daixueyue 20130906

				else if (o_object_class == "11004" )
				{
					//sql = select info_id,network_type,redefine_severity,send_jt_flag,redefine_type,logic_type,logic_sub_type,standard_alarm_name,standard_alarm_id,effect_ne,effect_service,alarm_value,preprocess_manner,province_process_flag,department_process_flag,ticket_confirm_manner,professional_type,    object_class,  vendor_id,eqp_object_class,     alarm_title_text,     probable_cause,locate_name,vendor_severity,mapping_type,alarm_unit,omc_alarm_id,alarm_explanationfrom tfm_alarm_stand_info where object_class=11004 and professional_type = xxx and eqp_object_class = xxx and alarm_title_text = xxx
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("object_class","11004");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.99.3");
					log.info(o_fp0+" con29 key="+this.getStandKeyRthandler(keyMap));
				}
				// end add by daixueyue 20130906
				//else if(StringUtils.isBlank(o_standard_alarm_name)&&o_omc_id in ["6101","6102"] )////动环增加OMC，131107
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_professional_type=="4"&& o_eqp_object_class!="51001")
				{
					o_special_field22=o_ne_location;
					String key=this.joinKeyRthandler("tfm_alarm_stand_info", "4",o_title_text,o_eqp_object_class);
					log.info(o_fp0+" con29 key="+key);
					Object[] pstand = util.getObject(this.ALARMSTANDARDCACHE, key,"gd.alarmStandard.11")
					List pwlist = pstand==null?null:Arrays.asList(pstand);
					if (pwlist != null&&!pwlist.isEmpty()) {
						o_severity_keycode=Util.getTempV(pwlist, 1);
						o_org_severity=Util.getTempV(pwlist, 2);
						o_redefine_type=Util.getTempV(pwlist, 4);
						o_send_jt_flag=Util.getTempV(pwlist, 3);
						o_logic_alarm_type=Util.getTempV(pwlist, 5);
						o_logic_sub_alarm_type=Util.getTempV(pwlist, 6);
						o_standard_alarm_name=Util.getTempV(pwlist,7);
						o_standard_alarm_id=Util.getTempV(pwlist, 8);
						o_effect_ne=Util.getTempV(pwlist, 9);
						o_effect_service=Util.getTempV(pwlist, 10);
						o_alarm_value=Util.getTempV(pwlist, 11);
						o_preprocess_manner=Util.getTempV(pwlist, 12);
						o_province_process_flag=Util.getTempV(pwlist, 13);
						o_department_process_flag=Util.getTempV(pwlist, 14);
						o_ticket_confirm_manner=Util.getTempV(pwlist, 15);
						//o_eqp_object_class=Util.getTempV(olist, 20);
						o_special_field20 = Util.getTempV(pwlist, 27);
						o_standard_flag="2";
						//'6'||c.vendor_code||'-'||d.eqp_type_code||'-00-'||a.standard_alarm_id
						String powerStandardId="6";
						String vendorKey = this.joinKeyRthandler("temp_dh_ams_vendor_code", o_vendor_name);
						Object[] vendors = util.getObject(this.CUSTOMCACHE, vendorKey,"gd.alarmStandard.6101.vendor");
						if(vendors!=null)
						{
							powerStandardId = powerStandardId+vendors[1]+"-";
						}
						String eqpTypeCodeKey=this.joinKeyRthandler("temp_dh_ams_eqp_type_code", i_special_field16);
						Object[] eqpTypeCodes = util.getObject(this.CUSTOMCACHE, eqpTypeCodeKey,"gd.alarmStandard.6101.eqp_type");
						if(eqpTypeCodes!=null)
						{
							powerStandardId = powerStandardId+eqpTypeCodes[1]+"-00-"+o_standard_alarm_id;
						}
						o_standard_alarm_id = powerStandardId;
					} else {
						o_org_severity="1";
						o_standard_flag="3";
						o_send_jt_flag="0";
					}
					o_redefine_severity = o_org_severity;
				}
				//INFOBLOX  DNS设备告警,shichao@20180125
				else if ((o_omc_id == "6601" || o_omc_id == "6602") &&o_object_class == "3017"&&o_vendor_id == "1097"){
				  keyMap.put("professional_type", "2");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("alarm_unit", o_locate_name);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.33");
					log.info(o_fp0+" con61 key="+this.getStandKeyRthandler(keyMap));
				}
				//DNS设备告警,shichao@20161012 亚信AIISMG added by lgy@20181017
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && (o_object_class == "3017" || (o_vendor_id == "27" && o_eqp_object_class == "20811"))){
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", "2");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.info(o_fp0+" con60 key="+this.getStandKeyRthandler(keyMap));
				}
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["66003"]&&o_vendor_id in ["661"]){
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.18");
					log.info(o_fp0+" confw02 key="+this.getStandKeyRthandler(keyMap));
				}
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_object_class == "66003" && o_vendor_id == "661")
				{
					//add by wujian at 20130802
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from std_nmosdb.tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and professional_type = 2 and eqp_object_class = "+ o_eqp_object_class + " and omc_alarm_id = '"+ o_probable_cause_txt + "' and alarm_title_text ='" + o_title_text + "' and rownum < 2 ";
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", "2");
					keyMap.put("object_class", o_object_class);
					//keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("taskName", "gd.alarmStandard.99.2");
					log.info(o_fp0+" con30-1 key="+this.getStandKeyRthandler(keyMap));
				}
				 //GPRS数通设备告警标准化 by liucaiyuong@20131014 ,华为-防火墙，华三-交接机、路由器、防火墙
				else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_vendor_id == "8"||o_vendor_id == "6179")&&(o_object_class == "66003"||o_object_class == "901"||o_object_class == "3004"))
				{
					//专业(key)+厂家(key)+设备类型(key)+厂家告警ID(key)
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", "2");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" con30-2 key="+this.getStandKeyRthandler(keyMap));
				}

				//IPNET(东信)城域网,HOST/交换机, by sunyuqiu@20130618
				else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_vendor_id == "66")&&(o_eqp_object_class == "2000"||o_eqp_object_class == "3004"))
				{
					//专业+厂家+设备类型+告警标题+厂家告警ID
					keyMap.put("professional_type", "2");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.7");
					log.info(o_fp0+" con30-4 key="+this.getStandKeyRthandler(keyMap));
				}
				//飞思达-HOST 告警标准化, by sunyuqiu@20130618
				else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_vendor_id == "980")&&(o_eqp_object_class == "2000"))
				{
					//专业+厂家+设备类型+告警标题+厂家告警ID
					keyMap.put("professional_type", "2");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.7");
					log.info(o_fp0+" con30-5 key="+this.getStandKeyRthandler(keyMap));
				}
				// 数据网 ROUTE 爱立信/思科/华三/Junpier,by shichao@20150921
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_object_class == "900" && o_vendor_id in ["1","661","6179","6182"])
				{
					//厂家+设备类型+告警标题+厂家告警ID
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.18");
					log.info(o_fp0+" con112 key="+this.getStandKeyRthandler(keyMap));
				}
				// 数据网 SMSC ROUTE,by shichao@20150921
				else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_object_class in ["105","900"]))
				{
					//厂家+设备类型+厂家告警ID
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con110 key="+this.getStandKeyRthandler(keyMap));
				}
				else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_object_class == "66003"||o_object_class == "105"||o_object_class == "122"))
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from std_nmosdb.tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and professional_type = 2 and eqp_object_class = "+ o_eqp_object_class + " and omc_alarm_id = '"+ o_probable_cause_txt + "' and alarm_title_text ='" + o_title_text + "' and rownum < 2 ";
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", "2");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.7");
					log.info(o_fp0+" con30 key="+this.getStandKeyRthandler(keyMap));
				}
				else if ((o_omc_id == "6601" || o_omc_id == "6602") &&o_object_class == "66001")
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from std_nmosdb.tfm_alarm_stand_info a where vendor_id="+ o_vendor_id + " and mapping_type='???' and professional_type = 2 and eqp_object_class = "+ o_eqp_object_class + " and omc_alarm_id = '"+ o_probable_cause_txt + "' and rownum < 2 ";
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", "2");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" con31 key="+this.getStandKeyRthandler(keyMap));
				}
				else if ((o_omc_id == "6601" || o_omc_id == "6602") &&(o_object_class == "121"||o_object_class == "122")&&o_vendor_id == "1"){
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info a where mapping_type='???' and professional_type = 2 and vendor_id=" + o_vendor_id + " and eqp_object_class = " + o_eqp_object_class + " and alarm_title_text ='" + o_title_text + "' and rownum < 2 ";
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", "2");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.info(o_fp0+" con32 key="+this.getStandKeyRthandler(keyMap));
				}
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["66003"]&&o_vendor_id in ["0"]){
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" confw01 key="+this.getStandKeyRthandler(keyMap));
				}
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["1015"]&&o_vendor_id in ["7"]){
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" confw01 key="+this.getStandKeyRthandler(keyMap));
				}
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["904","1013","1419","1015","1418"]&&o_vendor_id in ["8"]){
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" confw01 key="+this.getStandKeyRthandler(keyMap));
				}

				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["121"]&&o_vendor_id in ["660"]){
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.18");
					log.info(o_fp0+" confw02 key="+this.getStandKeyRthandler(keyMap));
				}
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["2000"]&&o_vendor_id in ["1011","1012"]){
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", "2");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.info(o_fp0+" confw03 key="+this.getStandKeyRthandler(keyMap));
				}
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["904"]&&o_vendor_id in ["7"]){
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", "2");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.info(o_fp0+" confw03 key="+this.getStandKeyRthandler(keyMap));
				}
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_eqp_object_class in ["1418"]&&o_vendor_id in ["7"]){
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", "2");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" confw03 key="+this.getStandKeyRthandler(keyMap));
				}
				//内容网络，巡检，设备
				else if ((o_omc_id == "6601" || o_omc_id == "6602") && o_professional_type == "7"){
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
			keyMap.put("professional_type", o_professional_type);
					keyMap.put("eqp_object_class", o_eqp_object_class);
			keyMap.put("omc_alarm_id", o_probable_cause_txt);
					keyMap.put("taskName", "gd.alarmStandard.5");
					log.info(o_fp0+" con347 key="+this.getStandKeyRthandler(keyMap));
				}
				else if(o_omc_id == "6601" || o_omc_id == "6602")
				{
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("taskName", "gd.alarmStandard.8");
					log.info(o_fp0+" con34 key="+this.getStandKeyRthandler(keyMap));
				}
				else if(o_professional_type == "99") //客户侧设备告警标准化，lizhangmiao 20121024
				{
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", "99");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("object_class", o_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("taskName", "gd.alarmStandard.99.1");
					log.info(o_fp0+" con35 key="+this.getStandKeyRthandler(keyMap));
				}
					//zhongfei 爱立信IMS标准化
				//else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1" && (o_object_class== "6130" || o_object_class== "6106" || o_object_class== "6129" || o_object_class== "6125"))
				//{
					//keyMap.put("vendor_id", o_vendor_id);
					//keyMap.put("mapping_type", "标准");
					//keyMap.put("professional_type", o_professional_type);
					//keyMap.put("eqp_object_class", o_eqp_object_class);
					//keyMap.put("alarm_title_text", o_title_text);
				  //keyMap.put("taskName", "gd.alarmStandard.4");
					//log.info(o_fp0+" con35 key="+this.getStandKey(keyMap));
				//}
				//EMA的ID由6128调整为20810  by lgy@20180816
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1" && (o_object_class== "20810" || o_object_class== "6109"|| o_object_class== "6123" || o_object_class== "6113"))
				{
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("taskName", "gd.alarmStandard.8");
					log.info(o_fp0+" con36 key="+this.getStandKeyRthandler(keyMap));
				}
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_network_type_top!="20"&&o_vendor_id == "1" && o_object_class=="6115")
				{
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("object_class", o_object_class);
					keyMap.put("taskName", "gd.alarmStandard.99.1");
					log.info(o_fp0+" con37 key="+this.getStandKeyRthandler(keyMap));
				}
				//虚拟化爱立信标准化
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_network_type_top=="20"&&o_vendor_id == "1" && (o_eqp_object_class in ["508","1609","1614"]))
				{
					//专业+厂家+设备类型+告警标题+厂家告警级别+厂家告警ID
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", o_network_type_top);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.34");
					log.info(o_fp0+" con49 key="+this.getStandKeyRthandler(keyMap));
				}
				//虚拟化爱立信CSCF、ATS   added by lgy@20180712
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_network_type_top=="20"&&o_vendor_id == "1" && (o_eqp_object_class in ["6111","6115","8101","8102"]))
				{
					//专业+厂家+设备类型+告警标题+厂家告警级别
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", o_network_type_top);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("taskName", "gd.alarmStandard.8");
					log.info(o_fp0+" con56 key="+this.getStandKeyRthandler(keyMap));
				}
				//VolLte告警标准化 VoLTEAS/MGCF/IMGW，by shichao@20150324
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1" && (o_eqp_object_class in ["6117","6107","6108"]))
				{
					//专业+厂家+设备类型+告警标题+厂家告警级别
					keyMap.put("mapping_type", "标准");
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("taskName", "gd.alarmStandard.8");
					log.info(o_fp0+" con38 key="+this.getStandKeyRthandler(keyMap));
				}
				//爱立信DRA标准化,by shichao@20150324
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1" && o_eqp_object_class=="8107")
				{
					//厂家+设备类型+告警标题
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.23");
					keyMap.put("seperator","@");
					log.info(o_fp0+" con38.1 key="+this.getStandKeyRthandler(keyMap));
				}
				//爱立信PSBC标准化,by shichao@20150324
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&& o_eqp_object_class=="6131")
				{
					//专业+厂家+设备类型+告警标题
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.info(o_fp0+" con38.2 key="+this.getStandKeyRthandler(keyMap));
				}
				//爱立信VOLTEBGW,by shichao@20150623
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&& o_eqp_object_class=="6132")
				{
					//专业+厂家+设备类型+告警标题+厂家告警级别
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.8");
					keyMap.put("vendor_severity", o_vendor_severity);
					log.info(o_fp0+" con39 key="+this.getStandKeyRthandler(keyMap));
				}
				//贝尔STP标准化by liucaiyong @2013101211
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "12" && (o_object_class=="108"||o_object_class=="8107"))
				{
					//厂家+设备类型+告警标题
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.23");
					keyMap.put("seperator","@");
					log.info(o_fp0+" con40 key="+this.getStandKeyRthandler(keyMap));
				}

				//爱立信 SCP 标准化by liucaiyong @2013101211
				//scp 有111,150-网元类型-智能网监控系统
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&& o_object_class=="111")
				{
					//专业+厂家+设备类型+告警标题
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", i_title_text);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.4");
					log.info(o_fp0+" con43 key="+this.getStandKeyRthandler(keyMap));
				}
				/*
				//爱立信 MSS 标准化by liucaiyong @2013101211
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&& o_object_class=="130")
				{
					//厂家+设备类型+告警标题+告警解释辅助字段+厂家告警级别
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", i_title_text);
					keyMap.put("alarm_unit", o_alarm_unit);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("mapping_type", "标准");
					log.info(o_fp0+" con44 key="+this.getStandKey(keyMap));

					this.setAlarmStandardInfo(this.getStandKey(keyMap));
					if( o_standard_flag == "2")
					{
						//匹配成功，直接结束，未匹配成功，继续匹配（一般匹配con33）
						return ;
					}
				}
				*/
				// 爱立信 大唐 RNC 标准化by liucaiyong @2013101211
				else if(StringUtils.isBlank(o_standard_alarm_name)&& o_eqp_object_class=="9200"&&(o_vendor_id == "1"||o_vendor_id == "9"))
				{
					//厂家+设备类型+厂家告警ID
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con46 key="+this.getStandKeyRthandler(keyMap));
				}

				//爱立信  标准化by liucaiyong @2013101211,ENODEB
				else if (StringUtils.isBlank(o_standard_alarm_name)&& o_vendor_id == "1"&& (o_object_class=="8104"||o_object_class=="8105"))
				{
					//厂家+告警对象类型+告警标题+厂家告警级别
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("mapping_type", "标准");
					keyMap.put("object_class", o_object_class);
					keyMap.put("alarm_title_text", i_title_text);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("taskName", "gd.alarmStandard.16");
					log.info(o_fp0+" con48 key="+this.getStandKeyRthandler(keyMap));
				}

				//爱立信标准化by liucaiyong @2013101211, MRFP	SBC	BGW		SBG WUIGM，无IMSCG	VIG
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_object_class=="6106"||o_object_class=="6112"||o_object_class=="6130"||o_object_class=="6129"||o_object_class=="6125"))
				{
					//厂家+设备类型+告警标题
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", i_title_text);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.23");
					keyMap.put("seperator","@");
					log.info(o_fp0+" con51 key="+this.getStandKeyRthandler(keyMap));
				}

				//爱立信 SSR平台-SAE-GW by shanchunlan@20130515
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_eqp_object_class=="8102")&&o_network_type_top!="20")
				{
					//专业+厂家+设备类型+告警标题+厂家告警级别
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", i_title_text);
					keyMap.put("taskName", "gd.alarmStandard.8");
					keyMap.put("vendor_severity", o_vendor_severity);
					log.info(o_fp0+" con105 key="+this.getStandKeyRthandler(keyMap));
				}
				//爱立信 SLF  by shanchunlan@20130515
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_object_class=="81092"))
				{
					//专业+厂家+设备类型+告警标题+厂家告警级别
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", i_title_text);
					keyMap.put("taskName", "gd.alarmStandard.8");
					keyMap.put("vendor_severity", o_vendor_severity);
					log.info(o_fp0+" con106 key="+this.getStandKeyRthandler(keyMap));
				}
				//爱立信 MME by shichao@20150921
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_eqp_object_class=="8101")&&o_network_type_top!="20")
				{
					//厂家+设备类型+告警标题+厂家告警级别
					keyMap.put("professional_type", o_professional_type);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("alarm_title_text", i_title_text);
					keyMap.put("taskName", "gd.alarmStandard.8");
					keyMap.put("vendor_severity", o_vendor_severity);
					log.info(o_fp0+" con107 key="+this.getStandKeyRthandler(keyMap));
				}
				//爱立信 CG by shichao@20150921
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_eqp_object_class=="124"))
				{
					//厂家+设备类型+告警标题+厂家告警ID gd.alarmStandard.18
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("mapping_type", "标准");
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.18");
					log.info(o_fp0+" con108 key="+this.getStandKeyRthandler(keyMap));
				}
				//爱立信HSS by shanchunlan@20160613
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "1"&&(o_object_class in ["102","8109","81091"]))
				{
					//object_class=? and vendor_id=? and alarm_title_text=? and vendor_severity=? and mapping_type=?
					keyMap.put("object_class", o_object_class);
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.16");
					log.info(o_fp0+" con119 key="+this.getStandKeyRthandler(keyMap));
				}
				//动环视频侦测标准化by liucaiyong @2013101810
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "502"&&o_eqp_object_class=="51001"&&o_omc_id=="50201")
				{
					//设备类型+告警标题
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", i_title_text);
					keyMap.put("mapping_type", "标准");
					keyMap.put("taskName", "gd.alarmStandard.26");
					log.info(o_fp0+" con52 key="+this.getStandKeyRthandler(keyMap));
				}
				//大唐LTE无线 liucaiyong@20140414
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "9"&&o_eqp_object_class=="8104")
				{
					//厂家+设备类型+厂家告警ID
					keyMap.put("mapping_type", "标准");
					keyMap.put("vendor_id", o_vendor_id);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.20");
					log.info(o_fp0+" con101 key="+this.getStandKeyRthandler(keyMap));
				}
				//诺西LTE无线 liucaiyong@20140414
				else if(StringUtils.isBlank(o_standard_alarm_name)&&o_vendor_id == "4"&&o_eqp_object_class=="8104")
				{
					//厂家+设备类型+告警对象类型+厂家告警ID
					keyMap.put("mapping_type", "标准");
						keyMap.put("vendor_id", o_vendor_id);
						keyMap.put("eqp_object_class", o_eqp_object_class);
						keyMap.put("object_class", o_object_class);
						keyMap.put("omc_alarm_id", o_probable_cause);
					keyMap.put("taskName", "gd.alarmStandard.28");
					log.info(o_fp0+" con102 key="+this.getStandKeyRthandler(keyMap));
				}
				else if(keyMap.isEmpty())
				{
					//sql="select a.info_id, a.professional_type, a.network_type, a.redefine_type, a.logic_type, a.logic_sub_type, a.standard_alarm_name, a.redefine_severity, a.standard_alarm_id, a.effect_ne, a.effect_service, a.alarm_value, a.preprocess_manner, a.province_process_flag, a.department_process_flag, a.ticket_confirm_manner,a.send_jt_flag from tfm_alarm_stand_info_pm a where mapping_type='???' and vendor_severity='"+o_vendor_severity+"' and eqp_object_class="+ o_eqp_object_class + " and alarm_title_text ='" + o_title_text + "'";
					keyMap.put("mapping_type", "标准");
					keyMap.put("vendor_severity", o_vendor_severity);
					keyMap.put("eqp_object_class", o_eqp_object_class);
					keyMap.put("alarm_title_text", o_title_text);
					keyMap.put("taskName", "gd.alarmStandard.27");
					keyMap.put("seperator","@");
					log.info(o_fp0+" con33 key="+this.getStandKey(keyMap));
				}
				if(!keyMap.isEmpty())
				{
					this.setAlarmStandardInfoRthandler(this.getStandKeyRthandler(keyMap),(String)keyMap.get("taskName"));
				}
				if (o_org_type == null || o_org_type == "")
				{
					o_org_type = "1";
				}
				//if(o_omc_id == "6101"||o_omc_id == "6601" || o_omc_id == "6602")//动环增加OMC，131107
				if(o_professional_type=="4"||o_omc_id == "6601" || o_omc_id == "6602")
				{
					o_severity_keycode = i_network_type;
				}
			}
			else
			{
				o_standard_flag="1";
			}
		}

		/**
		 * 告警标准化的名称再映射为字典数据
		 */
		private void setStandardAlarmNameIdRthandler()
		{
			if(StringUtils.isNotBlank(o_standard_alarm_name))
			{
				String dictKey="tia_alarm_dict@1201@"+o_standard_alarm_name;
				o_standard_alarm_name_id = this.getDictValueRthandler(dictKey,"tia_alarm_dict.0");
			}
		}

		/**
		 * 添加集客信息
		 */
		private void setJikeInfoRthandler()
		{
			//circuit_port_service();
			apnJikeInfoRthandler();

			i_int_id = o_int_id;
			String comjikeObject=",706,11060,610,2012,2011,6118,161,11038,600,11060,11028,40001,40003,40004,40005,40006,40007,900,905,131,6108,162,10131,2000,";
			String jo = ConfigUtil.getStringValue("jike.objectclass", comjikeObject);
			//update add mhy at 20130903 [begin]
			//PBX/converter/防火墙/MSAP/IAD/路由器/IP-PBX
			String gdJkNeTypeFilter = ",161,163,901,6118,2007,6118,66003,66045,20130,150111,10011,2008,2034,";
			//防火墙/路由器/协议转换器/IAD/PBX/IP-PBX/MSAP 产品线定义的映射规则如下
			//String gdJkNeTypeFilter = ",2000,20130,901,900,163,6118,161,2007,";
			String gdCurNeType = ","+o_object_class+",";
			//if (!(jo.contains(gdCurNeType) || gdJkNeTypeFilter.contains(gdCurNeType))) {
			if (!(jo.contains(gdCurNeType) || gdJkNeTypeFilter.contains(gdCurNeType) || o_special_field20.startsWith("11060:7:"))) {
				return;
			}

			String jikeObject=",6108,10131,131,20130,";
			if( o_special_field20 != null && o_special_field20 != "" && jikeObject.contains(gdCurNeType) )
			{
				int t_index_intid = o_special_field20.toString().indexOf("@");
				if( t_index_intid > -1 )
				{
					o_int_id = o_special_field20.toString().substring( t_index_intid+1 );
				}
			}
			else if(o_object_class == "131" && StringUtils.isBlank(o_special_field20))
			{
				//过滤掉误关联集客
				return;
			}

		if(o_professional_type=="2"&&o_title_text=="集团客户SP短信告警"&&StringUtils.isNotBlank(o_special_field20) )
			{
				int t_index_intid = o_special_field20.toString().indexOf("@");
				if( t_index_intid > -1 )
				{
					o_int_id = o_special_field20.toString().substring( t_index_intid+1 );
				}
			}

			//add by wujian(sunyuqiu) at 20130809 [begin]
			//客户侧设备告警关联集客信息
			if (o_omc_id=="6607") {
				String queryKey = "gd.query_intid_from_name@" + o_eqp_label;
				Object[] queryRow = util.getObject(this.CUSTOMCACHE,queryKey,"gd.query_intid_from_name");
				if (queryRow!=null && queryRow.length>0) {
					o_int_id = Util.getTempV(Arrays.asList(queryRow),0);
				}
				log.debug(o_fp0 + " query(gd.jk.gcss-relate.int_id=" + o_int_id + "): " + queryKey);
			}
			String intId = o_int_id;
			String objClass = o_object_class;

			//apn告警关联集客,liucaiyong(sunyuqiu)@20170227
			if(StringUtils.isNotBlank(o_special_field20)&&o_special_field20.startsWith("11060:7:"))
			{
				int t_index_intid = o_special_field20.toString().indexOf("@");
				if( t_index_intid > -1 )
				{
					intId = o_special_field20.toString().substring( t_index_intid+1 );
				}
				objClass = "11060";
			}

			//ONU告警关联集客，用网元名关联集客，luocheng@20160809
			//if(o_object_class=="706"&&o_eqp_object_class=="2012"){
			if(o_eqp_object_class=="2012"){
				//ONU端口集客关联用网元设备关联，@20150906
				intId = o_eqp_int_id;
			}

			//CMCC-GD-DRITXQ-20171130-014	OLT设备关联集客算法修改 wangyingfeng@210171220
			//if(o_eqp_object_class=="2011"){
			//  if(!(o_object_class=="706" && o_alarm_title in ["9608837","10462883","9629163","12095582"])){
			//    return;
			//  }
			//}

				//BigDecimal   int_id = getGcssId(objClass,intId);
			//Gcss gcss = (Gcss) util.getObject(SimpleFindUtil.JIKE_CACHE, int_id);
			// setGcssRthandler(objClass,intId);
			// 使用crc32算法计算int_id会有一定概率重复，导致关联错集客业务信息，底层资源采集逻辑修改暂时无法实现，折中方案：判断object_class、int_id和eqp_object_class、eqp_int_id都能查询到集客信息，才需关联集客业务信息
			if (o_object_class == "706") {
			  setGcssInfo(objClass, intId, o_eqp_object_class, o_eqp_int_id);
			} else {
			  setGcssRthandler(objClass,intId);
			}
			//long int_id = Long.parseLong(intId);
			//Gcss gcss = (Gcss) util.getObject(SimpleFindUtil.JIKE_CACHE, new BigDecimal(int_id));
			//if(gcss!=null){
			//    String client_num=(""+gcss.getClient_num()).equals("0")?"":(""+gcss.getClient_num());
			//    String service_num=(""+gcss.getService_num()).equals("0")?"":(""+gcss.getService_num());
			//    if(!"".equals(client_num)&&!"null".equals(client_num)&&!"".equals(service_num)&&!"null".equals(service_num)){
			//        //o_gcss_client=gcss.getClient_id();
			//        o_gcss_client  = appendStrRthandler(o_gcss_client,gcss.getClient_id());
			//        o_gcss_client_num=client_num;
			//        //o_gcss_client_name=gcss.getClient_name();
			//        o_gcss_client_name  = appendStrRthandler(o_gcss_client_name,gcss.getClient_name());
			//        o_gcss_client_level=gcss.getClient_level()+"";
			//        o_gcss_client_grade=gcss.getGcss_client_grade()+"";
			//        o_gcss_client_grade_mgt = gcss.getClient_grade_mgt()+"";
			//        //o_gcss_service=gcss.getService_id();
			//        o_gcss_service  = appendStrRthandler(o_gcss_service,gcss.getService_id());
			//        o_gcss_service_num=service_num;
			//        //o_gcss_service_type=gcss.getService_type();
			//        o_gcss_service_type  = appendStrRthandler(o_gcss_service_type,gcss.getService_type());
			//        o_gcss_service_level=gcss.getService_sla()+"";
			//        //gcss_service_region = gcss.getRegion_id();
			//        gcss_service_region  = appendStrRthandler(gcss_service_region,gcss.getRegion_id());
			//        //o_service_crossdomain_type = gcss.getService_crossdomain_type()+"";
				  //        log.info(o_fp0+" jikeinfo:int_id["+int_id+"],o_gcss_client["+o_gcss_client+"],o_gcss_client_numm,["+o_gcss_client_num+"],o_gcss_client_name["+o_gcss_client_name+"],o_gcss_client_level["+o_gcss_client_level+"],o_gcss_client_grade["+o_gcss_client_grade+"],o_gcss_client_grade_mgt["+o_gcss_client_grade_mgt+"],o_gcss_service["+o_gcss_service+"],o_gcss_service_num["+o_gcss_service_num+"],o_gcss_service_type["+o_gcss_service_type+"],o_gcss_service_level["+o_gcss_service_level+"],gcss_service_region["+gcss_service_region+"]");
			//    }
			//}
			o_int_id = i_int_id;

		}

		/**
		 * 传输端口查询电路信息
		 */
		private void setTransPortToCircuitRthandler()
		{
		  //wcs 10.27
			if(StringUtils.isBlank(o_int_id)){
				return;
			}
			long int_id = Long.parseLong(o_int_id);
			if(o_professional_type =="3"&&(o_eqp_object_class=="2001"||o_eqp_object_class=="2008")&&o_object_class=="706")
			{
				Circuit circuit = (Circuit) util.getObject(SimpleFindUtil.CIRCUIT_CACHE, new BigDecimal(int_id));
				if(circuit!=null)
				{
					//o_circuit_no=circuit.getCircuit_no()==null?o_circuit_no:circuit.getCircuit_no();
			o_circuit_no=appendStrRthandler(o_circuit_no,circuit.getCircuit_no());
			//o_circuit_id=circuit.getCircuit_id()==null?o_circuit_id:circuit.getCircuit_id();
			o_circuit_id=appendStrRthandler(o_circuit_id,circuit.getCircuit_id());
				}
			}
			 if(StringUtils.isBlank(o_circuit_id) && StringUtils.isNotBlank(o_circuit_no) && o_circuit_no!="多条电路")
			{
		  String[] circuitNos = o_circuit_no.split(",");
		  for(int i = 0; i < circuitNos.length; i++) {
			if(i == 0) {
			  o_circuit_id = Util.getCRC32("610:" + circuitNos[i]);
			} else {
			  o_circuit_id = o_circuit_id + "," + Util.getCRC32("610:" + circuitNos[i]);
			}
		  }
		  //log.info(" jk.circuit_id("+o_circuit_id+")->"+ "610:"+o_circuit_no);
			}

			// 补充传输端口电路赋值 By Lupeng 2013-01-23 (2013-6-20 省传输室李理要求脱管告警只针对本地接入告警)
			if(o_title_text in ["Node Isolation", "Isolation", "NE_COMMU_BREAK", "NE_NOT_LOGIN","承载网管系统告警网元断链","承载网管系统告警 网元断链","NE_COMMU_GNE_SWITCH"] && o_severity_keycode in ["27","25","26"])
			{
				String crc32 = o_eqp_object_class + ":" + o_extra_string1 + ":" + o_eqp_label;
				//o_eqp_int_id = Util.getCRC32(crc32);---20130201罗成要求注释，原因为RT已经将其解析
				int_id = Long.parseLong(o_eqp_int_id);
				Circuit circuit = (Circuit) util.getObject(SimpleFindUtil.CIRCUIT_CACHE, new BigDecimal(int_id));
				if(circuit!=null)
				{
					//o_circuit_no=circuit.getCircuit_no()==null?o_circuit_no:circuit.getCircuit_no();
			//o_circuit_id=circuit.getCircuit_id()==null?o_circuit_id:circuit.getCircuit_id();
			o_circuit_no=appendStrRthandler(o_circuit_no,circuit.getCircuit_no());
			o_circuit_id=appendStrRthandler(o_circuit_id,circuit.getCircuit_id());
				}
			}

			// MSTP 电路MAC口关联集客 add[20130627][wujian][需求-罗成]
		if(o_professional_type=="3" && o_object_class=="706" && (o_circuit_id==null || o_circuit_id=="")) {
				String tmpKey = "gd:circuit:related_a_macpor:"+o_int_id;
				List alist = util.getObject(this.CUSTOMCACHE,tmpKey,"gd.circuit.related_a_macpor");
				tmpKey = "gd:circuit:related_b_macpor:"+o_int_id;
				List blist = util.getObject(this.CUSTOMCACHE,tmpKey,"gd.circuit.related_b_macport");

				List results = new ArrayList<Object>();
				if(alist!=null && !alist.isEmpty()){
				  results.addAll(alist);
				}
				if(blist!=null && !blist.isEmpty()){
				  results.addAll(blist);
				}

					  if (results!=null && !results.isEmpty()) {
						  for (Object item: results) {
							Object[] result = (Object[])item;
							List olist = Arrays.asList(result);
							   String tmp = Util.getTempV(olist,0);
					//o_circuit_id = StringUtils.isNotBlank(o_circuit_id)? o_circuit_id+","+tmp : tmp;
					o_circuit_id = appendStrRthandler(o_circuit_id,tmp);
					tmp = Util.getTempV(olist,1);
					//o_circuit_no = StringUtils.isNotBlank(o_circuit_no)? o_circuit_no+","+tmp : tmp;
					o_circuit_no = appendStrRthandler(o_circuit_no,tmp);
						}
						log.info(o_fp0+"  related_macport :" + o_circuit_no);
					  }
			}

			// 补充爱立信MSC/MSS/BSC/CELL 设备告警的传输电路关联逻辑
			//文档路径[ZHJKA-718]:
			//add[ZHJKA-718] by wj at 20130715
			if (o_vendor_id=="1" && o_region_name=="广州") {
				if (o_eqp_object_class=="200" || o_eqp_object_class=="101") {
					String t_ne_id ="";
					String t_ne_dip="";
					String t_ne_no ="";
					boolean t_is_alone=true;
					//查询大网元DIP
					if (o_title_text == "DIGITAL PATH UNAVAILABLE STATE FAULT" || o_title_text == "DIGITAL PATH FAULT SUPERVISION") {
						def matcher =  o_alarm_text =~/\n:DIP\s+\w+\s+[^\n]+\n:(\w+)\s+/;
						if (matcher.size()>0) {
							t_ne_dip = matcher[0][1] ;
						}
						log.info(o_fp0+" query(mv_z_port_corenet.端口号)="+t_ne_dip);
					}
					else if (o_title_text == "CELL LOGICAL CHANNEL AVAILABILITY SUPERVISION") {
						def matcher =  o_alarm_text =~/\n:CELL\s+[^\n]+\n:CELL\s+[^\n]+\n:?(\w+)\s+/;
						if (matcher.size()>0) {
							String t_cell_name = matcher[0][1];
							String queryKey = "gd.circuit.dg_wydb.cell.dip:"+t_cell_name;
							Object[] queryAry = util.getObject(this.CUSTOMCACHE,queryKey,"gd.circuit.dg_wydb.cell.dip");
							if (queryAry!=null && queryAry.length>0) {
								t_ne_dip = Util.getTempV(Arrays.asList(queryAry),0);
							}
							else {
								log.info(o_fp0+" cache not, query(dg_wydb.cell.rblt)="+queryKey);
							}
						}
						log.info(o_fp0+" query(mv_z_port_corenet.端口号)="+t_ne_dip);
					}

					//查询大网元ID
					if (t_ne_dip!=null && t_ne_dip!="") {
						String queryKey = "gd:circuit:bsc_msc_cell:neid:"+o_eqp_label+":"+o_eqp_object_class;
						Object[] queryAry = util.getObject(this.CUSTOMCACHE,queryKey,"gd.circuit.bsc_msc_cell.neid");
						if (queryAry!=null && queryAry.length>0) {
							t_ne_id = Util.getTempV(Arrays.asList(queryAry),0);
							t_is_alone = false;
						}
						else {
							log.info(o_fp0+" cache not, query(dg_wydb.bsc.id|dg_wydb.msc.id)="+queryKey);
						}
						log.info(o_fp0+" query(mv_z_port_corenet.所属网元)="+t_ne_id);
					}

					//查询关联的电路编号
					if (t_ne_id!=null && t_ne_id!="") {
						if (t_is_alone) {
							String queryKey = "gd:circuit:mv_z_port_corenet:"+t_ne_dip+":"+t_ne_id;
							Object[] queryAry = util.getObject(this.CUSTOMCACHE,queryKey,"gd.circuit.mv_z_port_corenet");
							if (queryAry!=null && queryAry.length>0) {
								t_ne_no = Util.getTempV(Arrays.asList(queryAry),0);
								if (t_ne_no!=null && t_ne_no!="") {
									//o_circuit_no = t_ne_no;
					o_circuit_no = appendStrRthandler(o_circuit_no,t_ne_no);
								}
							}
							else {
								log.info(o_fp0+" cache not, query(mv_z_port_corenet.电路编号)="+queryKey);
							}
						}
						else {
							int i=0;
							for (String item : t_ne_dip.split("&")) {
								if (item==null || item=="") {
									continue;
								}
								String queryKey = "gd:circuit:mv_z_port_corenet:"+item+":"+t_ne_id;
								Object[] queryAry = util.getObject(this.CUSTOMCACHE,queryKey,"gd.circuit.mv_z_port_corenet");
								if (queryAry!=null && queryAry.length>0) {
									String str = Util.getTempV(Arrays.asList(queryAry),0);
									if (str!=null && str!="") {
										t_ne_no = t_ne_no + (i++==0?"":",") + str;
									}
								}
								else {
									log.info(o_fp0+" cache not, query(mv_z_port_corenet.电路编号)="+queryKey);
								}
							}
							if (t_ne_no!=null && t_ne_no!="") {
								//o_circuit_no = t_ne_no;
								 o_circuit_no = appendStrRthandler(o_circuit_no,t_ne_no);
							}
						}
						log.info(o_fp0+" query(mv_z_port_corenet.电路编号)="+t_ne_no);
					}
				}
			}
			//end[ZHJKA-718] by wj at 20130715

			//核心网业务网元、承载网跨专业智能预处理, by sunyuqiu@20150918
	//		if(o_eqp_object_class in ["130","131","102","8109","81091","121","122","8101","8102"] && o_org_severity in ["1","2","3"]){
		 if(o_eqp_object_class in ["130","131","102","8109","81091","121","122","8101","8102","200","9200","108","6108","8106","8107","6107","6111","6112","6117"] ){
				String ces="";
				int j=0;
				String cekey="port_circuit_quip_left:"+o_int_id;
				String task="port_circuit_quip_left";

				List results = (List)util.getObject(this.CUSTOMCACHE,cekey,task);
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
				  Object[] result = (Object[])item;
				  List olist = Arrays.asList(result);
					 String ce	=	Util.getTempV(olist,1);
					 if(StringUtils.isNotBlank(ce)&&!ces.contains(ce)){
							ces+=(j==0?"":";")+ce;
							j++;
							log.info(o_fp0+" port_circuit_quip_left【"+ce+"】from key【"+cekey+"】");
						}
			  }
			}
			cekey="port_circuit_quip:"+o_int_id;
				task="port_circuit_quip_right";
				results = (List)util.getObject(this.CUSTOMCACHE,cekey,task);
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
				  Object[] result = (Object[])item;
				  List olist = Arrays.asList(result);
					 String ce	=	Util.getTempV(olist,1);
					 if(StringUtils.isNotBlank(ce)&&!ces.contains(ce)){
							ces+=(j==0?"":";")+ce;
							j++;
							log.info(o_fp0+" port_circuit_quip_right【"+ce+"】from key【"+cekey+"】");
						}
			  }
			}

				if(StringUtils.isNotBlank(ces)){
					ces="查询本网元"+o_eqp_label+"上联CE："+ces+";无相关故障告警，初步判断非CE侧问题引起，请处理。";
					//if(ces.length()>254){
					//	ces = ces.substring(0,254);
					//}
					ces = subStrLenRthandler(ces);
					o_special_field9 = ces;
					log.info(o_fp0+" port_circuit_quip,special_field9【"+o_special_field9+"】");
				}
			}
			//承载网与传输网关联电路编号,update by shanchunlan@20150917
			//核心网业务网元、承载网跨专业智能预处理, by sunyuqiu@20150918
			int intPreHandle = 0;
			//if(o_extra_id3 in ["7","20"] && o_object_class == "706" &&o_eqp_object_class in ["66003","900"] && o_title_text in ["[huawei][物理端口状态down]","linkDown","接口DOWN告警","链路断开","物理端口DOWN","接口down","链路Down"]){
			if(o_extra_id3 in ["7","20","154","125"] && o_object_class == "706" &&o_eqp_object_class in ["66003","900"] ){
				intPreHandle = 2;//查circuit_no+预处理
			}
			else if(o_eqp_object_class in ["2008","2034"] && o_title_text in ["R_LOF","R_LOS","IN_PWR_LOW","IN_PWR_HIGH","RLOS","RS_LOF","IOP_LOW","IOP_HIGH","LINK_DOWN","RS_SD"]){
				intPreHandle = 1;//仅查circuit_no
			}

			if(intPreHandle>0){
						String cirkey=joinKeyRthandler("port_circuit", o_eqp_int_id,o_int_id);
						String task="port_circuit_left";

						List results = (List)util.getObject(this.CUSTOMCACHE,cirkey,task);
					if (results!=null && !results.isEmpty()) {
						for (Object item : results) {
						  Object[] result = (Object[])item;
						  List olist = Arrays.asList(result);
							 String no	=	Util.getTempV(olist,0);
							 o_circuit_no = appendStrRthandler(o_circuit_no,no);
							 log.info(o_fp0+" port_circuit_left【"+no+"】from key【"+cirkey+"】");
					  }
					}
					task="port_circuit_right";
					results = (List)util.getObject(this.CUSTOMCACHE,cirkey,task);
					if (results!=null && !results.isEmpty()) {
						for (Object item : results) {
						  Object[] result = (Object[])item;
						  List olist = Arrays.asList(result);
							 String no	=	Util.getTempV(olist,0);
							 o_circuit_no = appendStrRthandler(o_circuit_no,no);
							 log.info(o_fp0+" port_circuit_right【"+no+"】from key【"+cirkey+"】");
					  }
					}

					log.info(o_fp0+" port_circuit,circuit_no【"+o_circuit_no+"】");

					//String ids="";//拼circuit_id
					//j=0;
					String level="999";//电路级别，数值越小级别越高

					String cirStr="";//拼电路
					String neStr="";//拼网元

					//遍历电路编号，按电路编号取关联ID，关联网元ID
					String[] circuitNos = o_circuit_no.split(",");
				  for(int i = 0; i < circuitNos.length; i++) {
					  String no = 	circuitNos[i];
					  cirkey=joinKeyRthandler("gd:circuit:level", no);
							task="gdCircuitLevel";

							cirStr +=(i==0?"":";")+no;

							Object[] objects = util.getObject(this.CUSTOMCACHE, cirkey,task);
							results = objects==null?null:Arrays.asList(objects);
							if (results != null&&!results.isEmpty()) {
								String levelstr=Util.getTempV(results, 0);
								if(StringUtils.isNotBlank(levelstr)&&levelstr<level){
									level=levelstr;
								}
								String circuitid=Util.getTempV(results, 2);
								o_circuit_id=appendStrRthandler(o_circuit_id,circuitid);
								//if(StringUtils.isNotBlank(circuitid)&&!ids.contains(circuitid)){
								//	ids+=(j==0?"":",")+circuitid;
								//	j++;
								//}

								if(intPreHandle>1){
									String ane=Util.getTempV(results, 3);
									String bne=Util.getTempV(results, 4);

									String anename="";
									String bnename="";
									neStr="";
									if(StringUtils.isNotBlank(ane)){
										neStr="";
										// cirkey = joinKeyRthandler("objects_trans", ane);
										cirkey = joinKeyRthandler("objects_trans_fdn_id", ane);
										// task = "objects_trans";
										task = "objects_trans_fdn_id";
										objects = util.getObject(SimpleFindUtil.RESOURCE_CACHE, cirkey,task);
										results = objects==null?null:Arrays.asList(objects);
										if (results != null&&!results.isEmpty()) {
											neStr=Util.getTempV(results, 5);
										}
									}
									if(StringUtils.isNotBlank(bne)){
										// cirkey = joinKeyRthandler("objects_trans", bne);
										cirkey = joinKeyRthandler("objects_trans_fdn_id", bne);
										// task = "objects_trans";
										task = "objects_trans_fdn_id";
										objects = util.getObject(SimpleFindUtil.RESOURCE_CACHE, cirkey,task);
										results = objects==null?null:Arrays.asList(objects);
										if (results != null&&!results.isEmpty()) {
											String nename=Util.getTempV(results, 5);
											if(StringUtils.isNotBlank(nename)){
												neStr=(StringUtils.isBlank(neStr)?"":neStr+",")+nename;
											}
										}
									}
									if(StringUtils.isNotBlank(neStr)){
										cirStr+="（传输网元："+neStr+")";
									}
								}
							}
				  }

				  //if(StringUtils.isNotBlank(ids)){
					//  ids = subStrLen(ids);
					  //	o_circuit_id = ids;
				  //}
				  log.info(o_fp0+" port_circuit,circuit_id"+o_circuit_id+"】");

				  if(intPreHandle>1){
							if(StringUtils.isNotBlank(cirStr)){
								cirStr="查询告警网元关联传输电路:"+cirStr;
							cirStr = subStrLenRthandler(cirStr);
							o_special_field9 = cirStr;
								log.info(o_fp0+" port_circuit,special_field9【"+o_special_field9+"】");
						}
						}
					}
					//对传输末端网元电路关联集客 added by lgy@20180620 required by sunyuqiu@CMCC-GD-DRITXQ-20180515-012
						if(o_professional_type =="3"&&StringUtils.isNotBlank(o_circuit_no)){
						String[] circuit=o_circuit_id.toString().split(",");
						for(String id:circuit){
							setGcss("610",id);
							}
						}
					circuit_port_serviceRthandler();
					//5+2,电路中间网元关联, added by liucaiyong@20160223 required by sunyuqiu@20160114
			if(o_professional_type =="3" && o_object_class == "706" && StringUtils.isBlank(o_circuit_no)){
						//告警int_id关联 circuit_res_relation 取 circuit_id
					 if(o_int_id !=""){
						 String task="circuit_res_relation";
						 String key="circuit_res_relation:"+o_int_id;
						 //String circuit_id="";//注意去重
						 //String circuit_no="";//注意去重
						 //int j=0;
						 List results = util.getObject(this.CUSTOMCACHE,key,task);
						 if (results!=null && !results.isEmpty()) {
								  int icount = 0;
							 for (Object item : results) {
								 Object[] result = (Object[])item;
								 if (result==null || result.length<1) {
									 break;
								 }
								 if(icount++ >= 50){
								break;//防止电路过多，最多50个，liucaiyong@20190507
							}
								 List olist = Arrays.asList(result);
								 String cid	=	Util.getTempV(olist,1);

								 //if(StringUtils.isNotBlank(cid)&&!circuit_id.contains(cid)){//拼接电路id
								 if(StringUtils.isNotBlank(cid)){//拼接电路id
									//circuit_id+=(j==0?"":",")+cid;
									o_circuit_id=appendStrRthandler(o_circuit_id,cid);
									//拼接电路no
									String queryKey = "gd:jike:circuit:namefromid:"+cid;
														Object[] queryRow = util.getObject(this.CUSTOMCACHE,queryKey,"jikeCircuitTableFromId");
														if (queryRow!=null && queryRow.length>0) {
															String  t_circuit_no = Util.getTempV(Arrays.asList(queryRow), 0);
															//circuit_no+=(j==0?"":",")+t_circuit_no;
															o_circuit_no=appendStrRthandler(o_circuit_no,t_circuit_no);
														}
									//j++;
								 }
							 }
							 //o_circuit_id	=	circuit_id;
							 //o_circuit_no	=	circuit_no;
							 log.info(o_fp0+" circuit---circuit_id:"+o_circuit_id+" circuit_no:"+o_circuit_no);
						 }
					 }
			}

		}

		/**
		 * 集客告警 电路信息 填充 --[add][20130415][wujian][]
		 */
		private void verifyCircuitNoRthandler()
		{
			String t_circuit_no=o_circuit_no;
			if( StringUtils.isNotBlank(o_gcss_service) && StringUtils.isBlank(o_circuit_no) && o_professional_type != "3" ){
				String[] serviceids = o_gcss_service.split(",");
				if(serviceids!=null)
				{
					t_circuit_no="";
					int i=0;
					int j=0;
					for(String serverid:serviceids)
					{
						if(j>100){
							break;
						}
						j++;
						String rkey = "gd:jike:circuit:"+serverid;
						Object[] result = util.getObject(this.CUSTOMCACHE,rkey,"jikeCircuitTable");
						List olist = result==null?null:Arrays.asList(result);
						if (olist != null&&!olist.isEmpty()) {
							if(i>4)
							{
								break;
							}
							o_alarm_text = o_alarm_text + ((i==0)?"\n关联电路: \n":"\n") + Util.getTempV(olist, 0);
							t_circuit_no = t_circuit_no + ((i==0)?"":",") + Util.getTempV(olist, 0);
							i++;
						}
					}
					//log.debug(o_fp0+" jk.circuitNoVerify-1.2(serverid:"+o_gcss_service+") "+t_circuit_no);
				}
			}

			//增加处理电路级别 --[add][20130609][wujian][需求提出人:luocheng]
			//if (StringUtils.isNotBlank(t_circuit_no)) {
			//    String[] circuits = t_circuit_no.split(",");
			//    if (circuits!=null) {
			//        //int i_circuit_level = 100000;
			//        for (String circuit : circuits) {
			//            String queryKey = circuit.trim();
			//            if (!queryKey.equals("")) {
			//                queryKey = "gd:circuit:level:" + queryKey;
			//                Object[] result = util.getObject(this.CUSTOMCACHE,queryKey,"gdCircuitLevel");
			//                if (result!=null && result.length>0) {
			//                    o_circuit_level = LevelCompareRthandler("circuit_level",Util.getTempV(Arrays.asList(result), 0),o_circuit_level);
			//                    //try {
			//                    //    int temp_level = Integer.parseInt(Util.getTempV(Arrays.asList(result), 0));
			//                        //if (temp_level >0 && temp_level<i_circuit_level) {
			//                        //    i_circuit_level = temp_level;
			//                        //}
			//                    //} catch (Exception ex) {}
			//                }
			//            }
			//        }
			//        //o_circuit_level = i_circuit_level!=100000? String.valueOf(i_circuit_level) : "";
			//    }
			//    //log.debug(o_fp0+" jk.gdCircuitLevel-1.3(circuit_level="+o_circuit_level+") "+t_circuit_no);
			//}

				//if (o_circuit_level!="" && o_professional_type=="3" && (o_circuit_no==""||o_circuit_no==null)) {
				//	o_circuit_level = "";
				//	log.info(o_fp0+" jk.gdCircuitLevel-1.3(circuit_level is not empty and o_circuit_no is empty)");
				//}

		}
	  //集客末端标志添加到告警正文中 added by lgy@20180625 required by sunyuqiu@CMCC-GD-DRITXQ-20180515-012
	   private void setMoDuanRthandler(){
			 if(StringUtils.isNotBlank(o_gcss_client)&&o_professional_type=="3"){
				   boolean t_switch=false;
					 Long int_id = Long.parseLong(o_eqp_int_id);
				   Circuit circuit = (Circuit) util.getObject(SimpleFindUtil.CIRCUIT_CACHE, new BigDecimal(int_id));
				   if(circuit!=null){
					   String t_circuit=circuit.getCircuit_id();
					   if(StringUtils.isNotBlank(t_circuit)){
					   String[] Circuit_Id = t_circuit.split(",");
					   for(String id:Circuit_Id){
						   String task = "gcss_service";
								List results = util.getObject(SimpleFindUtil.RESOURCE_CACHE,joinKeyRthandler(task, "610",id),task);
							if (results!=null && !results.isEmpty()) {
							  t_switch=true;
							  break;
							  }
						  }
					  if(t_switch==true){
					  o_alarm_text+="\n集客末端网元：是"
							 }else{
							 o_alarm_text+="\n集客末端网元：否"
							 }
					  }
				  }
			  }
	  }
		private void setGcssRthandler(String object_class,String int_id){
				//set client
				String task = "gcss_client";
				String tmp;
				List results = util.getObject(SimpleFindUtil.RESOURCE_CACHE,joinKeyRthandler(task, object_class,int_id),task);
			if (results!=null && !results.isEmpty()) {
			  for (Object item : results) {
			  Object[] result = (Object[])item;
			  if (result==null || result.length<1) {
				  break;
			  }
			  List olist = Arrays.asList(result);
			  tmp	=	Util.getTempV(olist,2);//client_id
			  o_gcss_client  = appendStrRthandler(o_gcss_client,tmp);
			  tmp	=	Util.getTempV(olist,3);//client_name
			  o_gcss_client_name  = appendStrRthandler(o_gcss_client_name,tmp);
			  tmp	=	Util.getTempV(olist,4);//client_level
				 o_gcss_client_level = LevelCompareRthandler("reverse", tmp, o_gcss_client_level);
			  tmp	=	Util.getTempV(olist,5);//gcss_client_grade
			  o_gcss_client_grade = LevelCompareRthandler("gcss_client_grade", tmp, o_gcss_client_grade);
			  tmp	=	Util.getTempV(olist,6);//gcss_client_grade_mgt
			  o_gcss_client_grade_mgt = LevelCompareRthandler("gcss_client_grade_mgt", tmp, o_gcss_client_grade_mgt);
			}
			o_gcss_client_num=this.distinceNumRthandler(o_gcss_client);
			log.info(o_fp0+" "+task+":int_id["+int_id+"],o_gcss_client["+o_gcss_client+"],o_gcss_client_numm,["+o_gcss_client_num+"],o_gcss_client_name["+o_gcss_client_name+"],o_gcss_client_level["+o_gcss_client_level+"],o_gcss_client_grade["+o_gcss_client_grade+"],o_gcss_client_grade_mgt["+o_gcss_client_grade_mgt+"]");
			 }
				//set service
				task = "gcss_service";
				results = util.getObject(SimpleFindUtil.RESOURCE_CACHE,joinKeyRthandler(task, object_class,int_id),task);
			if (results!=null && !results.isEmpty()) {
			  for (Object item : results) {
			  Object[] result = (Object[])item;
			  if (result==null || result.length<1) {
				  break;
			  }
			  List olist = Arrays.asList(result);
			  tmp	=	Util.getTempV(olist,2);//service_id
			  o_gcss_service  = appendStrRthandler(o_gcss_service,tmp);
			  tmp	=	Util.getTempV(olist,3);//service_type
			  o_gcss_service_type  = appendStrRthandler(o_gcss_service_type,tmp);
			  tmp	=	Util.getTempV(olist,4);//service_sla
			  o_gcss_service_level  = LevelCompareRthandler("gcss_service_level", tmp, o_gcss_service_level);
			  tmp	=	Util.getTempV(olist,5);//service_region
			  gcss_service_region  = appendStrRthandler(gcss_service_region,tmp);
			  // 云专线资源字段接入
			  tmp	=	Util.getTempV(olist,6);// gcss_service_sub_type
			  o_gcss_service_sub_type  = appendStrRthandler(o_gcss_service_sub_type,tmp);
						// 集客业务编码字段
			  tmp	=	Util.getTempV(olist,7);// gcss_service_sub_type
			  o_gcss_service_code  = appendStrRthandler(o_gcss_service_code,tmp);
			}
			o_gcss_service_num=this.distinceNumRthandler(o_gcss_service);
			log.info(o_fp0+" "+task+":int_id["+int_id+"],o_gcss_service["+o_gcss_service+"],o_gcss_service_num["+o_gcss_service_num+"],o_gcss_service_type["+o_gcss_service_type+"],o_gcss_service_level["+o_gcss_service_level+"],gcss_service_region["+gcss_service_region+"],o_gcss_service_sub_type["+o_gcss_service_sub_type+"],o_gcss_service_code["+o_gcss_service_code+"]");
		  }
			}
		/**
		 * 传输端口查询集客信息
		 */
		private void setTransportRelatedJikeRthandler()
		{
			//ONU端口告警不关联集客信息，因现在int_id不唯一导致错误关联 ,luocheng@20140501215
			//if(o_object_class=="706"&&o_eqp_object_class=="2012"){
			//	return;
			//}

				if(StringUtils.isNotBlank(o_circuit_id))
			{
			  String[] circuitids = o_circuit_id.toString().split(",");
			  //add by wujian(sunyuqiu) at 20130815 --begin
			  //传输网管告警正文中附加正确匹配集客信息的电路编号
			  int queryCount = 0;
			  //add by wujian(sunyuqiu) at 20130815 --end
			  for(String id:circuitids)
			  {
				//add by gd.wujian(lucheng) at 20130815 --begin
				//传输网管告警正文中附加正确匹配集客信息的电路编号
				if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"]){
				}else{
				  String queryKey = "gd:jike:circuit:namefromid:"+id;
				  Object[] queryRow = util.getObject(this.CUSTOMCACHE,queryKey,"jikeCircuitTableFromId");
				  if (queryRow!=null && queryRow.length>0) {
					  o_alarm_text = o_alarm_text + ((queryCount==0)?"\n关联电路信息: \n":"\n") + Util.getTempV(Arrays.asList(queryRow), 0);
					  queryCount++;
				  }
				}
			  }
			  //不能取消全程路由点关联电路和电路关联集客的算法，且集客重要的关联算法都不是直接依赖电路去关联集客的，故和用户确定修改“通过电路关联集客”模块的逻辑：
			  //将用电路关联集客的逻辑增加一个判断，即：若circuit_no字段包含的电路>=2个，则不做集客的关联。
			  //required by sunyuqiu ,coded by liucaiyong@20180118
			  if(circuitids.length < 2){
				  for(String id:circuitids)
				  {
					  setGcss("610",id);
					  if (StringUtils.isNotBlank(o_gcss_client)){
						  String skey = this.joinKeyRthandler("circuit_interrupt_title",o_vendor_id,o_eqp_object_class,o_title_text);
					Object[] objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, skey,"circuit_interrupt_title");
					List list = objects == null ? null : Arrays.asList(objects);
					if (list != null && !list.isEmpty()) {
						 o_interrupt_circuit_state  = "1";
						 log.info(o_fp0+ "circuit_interrupt_title");
						  }
					  }
				  }
			  }
			}

			apnJikeRthandler();
		}

		private void apnJikeInfoRthandler(){
		  String apn = null;
		  if(o_title_text == "行业APN路由器PING失败"){
			apn = o_ne_label;
		  }else if(o_title_text in ["专网APN拨测失败","行业APN网络激活失败"]){
			def testFlag =  o_alarm_text =~/\s*APN\:([0-9a-zA-Z.]+)\s*绑定的终端/;
			if(testFlag.size()>0){
			  apn = testFlag[0][1];
			}
		  }else if(o_title_text == "行业APN地址池利用率高于90%"){
			def testFlag =  o_alarm_text =~/APN\:([0-9a-zA-Z.]+)\s*\;/;
			if(testFlag.size()>0){
			  apn = testFlag[0][1];
			}
		  }else if(o_title_text in ["爱立信SAEGW企业APN上行流量异常（15分钟）","爱立信SAEGW企业APN下行流量异常（15分钟）","爱立信SAEGW企业APN上行流量异常(15分钟)","爱立信SAEGW企业APN下行流量异常(15分钟)"]){
			def testFlag =  o_alarm_text =~/\对象\:([0-9a-zA-Z.]+)\s*KPI表达式\:/;
			if(testFlag.size()>0){
			  apn = testFlag[0][1];
			}
		  }else if(o_title_text in ["GPRS GGSN 企业APN-GI上行流量异常性能告警","GPRS GGSN 企业APN-GI下行流量异常性能告警","GPRS GGSN 企业APN-PDP激活成功率紧急性能告警","GPRS GGSN 企业APN在线用户数异常性能告警"]){
			def testFlag =  o_alarm_text =~/\s*APN：([0-9a-zA-Z.]+)\s*产生告警/;
			if(testFlag.size()>0){
			  apn = testFlag[0][1];
			}
		  }

		  if(apn!=null){
			  apn = apn.toUpperCase();
			  apn = "11060:7:"+ apn ;

			  o_special_field20 = apn + "@" + Util.getCRC32(apn);
			  log.info(o_fp0+" apn["+apn+"] from title["+o_title_text+"] to sp20["+o_special_field20+"]");
			}
		}
		//传输和互联网承载专线告警关联APN,liucaiyong(sunyuqiu)@20170227
		private void apnJikeRthandler(){
			String apninfo;
			if(o_special_field20.startsWith("11060:7:")&&StringUtils.isNotBlank(o_gcss_service)){
				//正文+GCSS+APN ,11060:7:ZYGDXS1.GD@141217441
				String tmp = o_special_field20.substring(0,o_special_field20.toString().indexOf("@"));
				tmp = tmp.substring(8);
				apninfo = "APN名称:"+tmp+"\n";
				Object[] objects = util.getObject(CUSTOMCACHE, "apn:"+tmp,"apn");
				List list = objects==null?null:Arrays.asList(objects);
				if(list!=null&&!list.isEmpty()){
					tmp = Util.getTempV(list, 1);
					apninfo+="APNID:"+tmp+"\n";
					tmp = Util.getTempV(list, 2);
					apninfo+="GRE网络端地址:"+tmp+"\n";
					tmp = Util.getTempV(list, 3);
					apninfo+="GRE企业端地址:"+tmp+"\n";
					tmp = Util.getTempV(list, 4);
					apninfo+="GRE隧道tunnel key:"+tmp;
				}
			}

			else if(StringUtils.isNotBlank(o_gcss_service) && (o_gcss_service_type.contains("40001")||o_gcss_service_type.contains("40004"))){
				String task;
				String tkey;
				String tmp;
				Object[] objects;
				List list ;

				String gapnid;
				String gapn;
				String glocal;
				String gpeer;
				String gkey;

				String scode;
				String sip;
				String saddr;
				int icount=0;
				int scount=0;

				String[] sids = o_gcss_service.toString().split(",");
				for(String sid:sids){
					task= "nrmdb.service";
					tkey = "service:"+sid;
					objects = util.getObject(CUSTOMCACHE, tkey,task);
					list = objects==null?null:Arrays.asList(objects);
					if(list!=null&&!list.isEmpty())
					{
						String pno = Util.getTempV(list, 6);
						task= "gcss_apn";
						tkey = "gcss_apn:"+pno;
						objects = util.getObject(CUSTOMCACHE, tkey,task);
						List olist = objects==null?null:Arrays.asList(objects);
						if(olist!=null&&!olist.isEmpty())
						{
							icount++;
							tmp = Util.getTempV(olist, 1);//gcss_client
							//o_gcss_client=this.distinceString(StringUtils.isNotBlank(o_gcss_client)?o_gcss_client+","+tmp:tmp);
							o_gcss_client  = appendStrRthandler(o_gcss_client,tmp);
							tmp = Util.getTempV(olist, 2);//gcss_client-grade
							if(StringUtils.isNotBlank(o_gcss_client_grade)){
								//o_gcss_client_grade = Integer.parseInt(tmp)<Integer.parseInt(o_gcss_client_grade)?tmp+"":o_gcss_client_grade;
								o_gcss_client_grade = LevelCompareRthandler("gcss_client_grade",tmp,o_gcss_client_grade);
							}
							else{
								o_gcss_client_grade=tmp+"";
							}
							tmp = Util.getTempV(olist, 3);//gcss_client_level
							if(StringUtils.isNotBlank(o_gcss_client_level)){
											o_gcss_client_level =  Integer.parseInt(o_gcss_client_level)<Integer.parseInt(tmp)?o_gcss_client_level:tmp+"";
										}
							else{
								o_gcss_client_level=tmp+"";
							}
							tmp = Util.getTempV(olist, 4);//gcss_client_name
							//o_gcss_client_name  = this.distinceString(StringUtils.isNotBlank(o_gcss_client_name)?o_gcss_client_name+","+tmp:tmp);
							o_gcss_client_name  = appendStrRthandler(o_gcss_client_name,tmp);
							o_gcss_client_num   =  this.distinceNumRthandler(o_gcss_client);//重新计算客户去重后的数量
							tmp = Util.getTempV(olist, 5);//gcss_service
							//o_gcss_service=this.distinceString(StringUtils.isNotBlank(o_gcss_service)?o_gcss_service+","+tmp:tmp);
							o_gcss_service  = appendStrRthandler(o_gcss_service,tmp);
							tmp = Util.getTempV(olist, 6);//gcss_service_level
							if(StringUtils.isNotBlank(o_gcss_service_level)){//?
								//o_gcss_service_level=Integer.parseInt(o_gcss_service_level)>Integer.parseInt(tmp)?o_gcss_service_level:tmp+"";
								o_gcss_service_level = LevelCompareRthandler("gcss_service_level",tmp,o_gcss_service_level);
							}
							else{
								o_gcss_service_level=tmp+"";
							}
							o_gcss_service_num=this.distinceNumRthandler(o_gcss_service);// 重新计算业务去重后的数量
							tmp = Util.getTempV(olist, 7);//gcss_service_type
							//o_gcss_service_type=this.distinceString(StringUtils.isNotBlank(o_gcss_service_type)?o_gcss_service_type+","+tmp:tmp);
							o_gcss_service_type  = appendStrRthandler(o_gcss_service_type,tmp);
							tmp = Util.getTempV(olist, 8);//gcss_service_region
							//gcss_service_region = this.distinceString(StringUtils.isNotBlank(gcss_service_region)?gcss_service_region+","+tmp:tmp);
							gcss_service_region  = appendStrRthandler(gcss_service_region,tmp);
							//apnid,customer_device_name,ggsn_gre_local,ggsn_gre_peer,ggsn_gre_key
							tmp = Util.getTempV(olist, 9);//apnid
							//gapnid=this.distinceString(StringUtils.isNotBlank(gapnid)?gapnid+","+tmp:tmp);
							gapnid  = appendStrRthandler(gapnid,tmp);
							tmp = Util.getTempV(olist, 10);//customer_device_name
							//gapn=this.distinceString(StringUtils.isNotBlank(gapn)?gapn+","+tmp:tmp);
							gapn  = appendStrRthandler(gapn,tmp);
							tmp = Util.getTempV(olist, 11);//ggsn_gre_local
							//glocal=this.distinceString(StringUtils.isNotBlank(glocal)?glocal+","+tmp:tmp);
							glocal  = appendStrRthandler(glocal,tmp);
							tmp = Util.getTempV(olist, 12);//ggsn_gre_peer
							//gpeer=this.distinceString(StringUtils.isNotBlank(gpeer)?gpeer+","+tmp:tmp);
							gpeer  = appendStrRthandler(gpeer,tmp);
							tmp = Util.getTempV(olist, 13);//ggsn_gre_key
							//gkey=this.distinceString(StringUtils.isNotBlank(gkey)?gkey+","+tmp:tmp);
							gkey  = appendStrRthandler(gkey,tmp);
						}

						//短彩信集客
						task= "gcss_sms";
						tkey = "gcss_sms:"+pno;
						objects = util.getObject(CUSTOMCACHE, tkey,task);
						olist = objects==null?null:Arrays.asList(objects);
						if(olist!=null&&!olist.isEmpty())
							  {
								  scount++;
							tmp = Util.getTempV(olist, 1);//gcss_client
							//o_gcss_client=this.distinceString(StringUtils.isNotBlank(o_gcss_client)?o_gcss_client+","+tmp:tmp);
							o_gcss_client  = appendStrRthandler(o_gcss_client,tmp);
							tmp = Util.getTempV(olist, 2);//gcss_client-grade
							if(StringUtils.isNotBlank(o_gcss_client_grade)){
								//o_gcss_client_grade = Integer.parseInt(tmp)<Integer.parseInt(o_gcss_client_grade)?tmp+"":o_gcss_client_grade;
								o_gcss_client_grade = LevelCompareRthandler("gcss_client_grade",tmp,o_gcss_client_grade);
							}
							else{
								o_gcss_client_grade=tmp+"";
							}
							tmp = Util.getTempV(olist, 3);//gcss_client_level
							if(StringUtils.isNotBlank(o_gcss_client_level)){
											o_gcss_client_level =  Integer.parseInt(o_gcss_client_level)<Integer.parseInt(tmp)?o_gcss_client_level:tmp+"";
										}
							else{
								o_gcss_client_level=tmp+"";
							}
							tmp = Util.getTempV(olist, 4);//gcss_client_name
							//o_gcss_client_name  = this.distinceString(StringUtils.isNotBlank(o_gcss_client_name)?o_gcss_client_name+","+tmp:tmp);
							o_gcss_client_name  = appendStrRthandler(o_gcss_client_name,tmp);
							o_gcss_client_num   =  this.distinceNumRthandler(o_gcss_client);//重新计算客户去重后的数量
							tmp = Util.getTempV(olist, 5);//gcss_service
							//o_gcss_service=this.distinceString(StringUtils.isNotBlank(o_gcss_service)?o_gcss_service+","+tmp:tmp);
							o_gcss_service  = appendStrRthandler(o_gcss_service,tmp);
							tmp = Util.getTempV(olist, 6);//gcss_service_level
							if(StringUtils.isNotBlank(o_gcss_service_level)){//?
								//o_gcss_service_level=Integer.parseInt(o_gcss_service_level)>Integer.parseInt(tmp)?o_gcss_service_level:tmp+"";
								o_gcss_service_level = LevelCompareRthandler("gcss_service_level",tmp,o_gcss_service_level);
							}
							else{
								o_gcss_service_level=tmp+"";
							}
							o_gcss_service_num=this.distinceNumRthandler(o_gcss_service);// 重新计算业务去重后的数量
							tmp = Util.getTempV(olist, 7);//gcss_service_type
							//o_gcss_service_type=this.distinceString(StringUtils.isNotBlank(o_gcss_service_type)?o_gcss_service_type+","+tmp:tmp);
							o_gcss_service_type  = appendStrRthandler(o_gcss_service_type,tmp);
							tmp = Util.getTempV(olist, 8);//gcss_service_region
							//gcss_service_region = this.distinceString(StringUtils.isNotBlank(gcss_service_region)?gcss_service_region+","+tmp:tmp);
							gcss_service_region  = appendStrRthandler(gcss_service_region,tmp);
							//apnid,customer_device_name,ggsn_gre_local,ggsn_gre_peer,ggsn_gre_key

							tmp = Util.getTempV(olist, 9);//apnid
							//gapnid=this.distinceString(StringUtils.isNotBlank(gapnid)?gapnid+","+tmp:tmp);
							scode  = appendStrRthandler(scode,tmp);
							tmp = Util.getTempV(olist, 10);//customer_device_name
							//gapn=this.distinceString(StringUtils.isNotBlank(gapn)?gapn+","+tmp:tmp);
							sip  = appendStrRthandler(sip,tmp);
							tmp = Util.getTempV(olist, 11);//ggsn_gre_local
							//glocal=this.distinceString(StringUtils.isNotBlank(glocal)?glocal+","+tmp:tmp);
							saddr  = appendStrRthandler(saddr,tmp);
						}
											// 集客业务编码字段
											o_gcss_service_code  = appendStrRthandler(o_gcss_service_code, pno); // product_no
					}
				}

				if(icount>0){
				   apninfo = "APNID:"+gapnid+"\n";
				   apninfo += "APN名称:"+gapn+"\n";
				   apninfo += "GRE网络端地址:"+glocal+"\n";
				   apninfo += "GRE企业端地址:"+gpeer+"\n";
				   apninfo += "GRE隧道tunnel key:"+gkey+"\n";
				}
				if(scount>0){
				   apninfo += "服务代码:"+scode+"\n";
				   apninfo += "网关IP地址:"+sip+"\n";
				   apninfo += "客户端IP地址:"+saddr+"\n";
				}

			}else
				return;

			if(StringUtils.isNotBlank(o_gcss_client)){//gcss->alarm_text
			   setJikeServiceRegionRthandler();

			   String info = "客户名称:"+o_gcss_client_name;
			   info += "\n所属地市:"+o_special_field2;
				   Object[] objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, this.joinKeyRthandler("tia_alarm_dict",o_gcss_client_grade,"101104"),"tia_alarm_dict.2");
				   List list = objects == null ? null : Arrays.asList(objects);
				   if (list != null && !list.isEmpty()){
						info += "\n集客客户属性:" + Util.getTempV(list, 2);
				   }
				   objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, this.joinKeyRthandler("tia_alarm_dict",o_gcss_service_level,"101103"),"tia_alarm_dict.2");
				   list = objects == null ? null : Arrays.asList(objects);
				   if (list != null && !list.isEmpty()){
						info += "\n业务保障等级:" + Util.getTempV(list, 2);
				   }

				   if(StringUtils.isNotBlank(info)){
						o_alarm_text += "\n" + info;
						log.info(o_fp0+" service-info-gcss["+info+"]");
				}
			}
			if(StringUtils.isNotBlank(apninfo)){//gcss->apn
				o_alarm_text += "\n" + apninfo;
				log.info(o_fp0+" service-info-extra["+apninfo+"]");
			}
		}

		/** 集客AZ端上联口、拓扑对端网元及端口关联集客
			* add by liucaiyong@20160928, require by v_sunyuqiu@boco.com.cn
			*/
		private void circuit_port_serviceRthandler(){
			if(o_professional_type != "3")
				return;
			if(!(o_eqp_object_class in ["2001","2008","2009","2034"]))
				return;
			String task;
			String tkey;
		  if(o_object_class in  ["2001","2008","2009","2034"]){
				task = "circuit_port_service_ne";
				tkey = this.joinKeyRthandler(task,o_int_id);
			}else if(o_object_class == "150114"){  //增加“网元类型” object_class=150114  add by lgy@20180412
				task = "circuit_port_service_ne";
				tkey = this.joinKeyRthandler(task,o_eqp_int_id);
				}else if(o_object_class == "706"){
				task = "circuit_port_service_port";
				tkey = this.joinKeyRthandler(task,o_int_id);
			}else if(o_object_class == "10011"){
				task = "circuit_port_service_board";
				tkey = this.joinKeyRthandler(task,o_int_id);
				if(o_eqp_object_class == "2009" && o_alarm_title in ["10023993","1705","10023976","10605391","100018"]){
					if(o_special_field9.contains("板卡名称=PW;")||o_special_field9.contains("板卡名称=PWRA;")||o_special_field9.contains("板卡名称=PIU;")){
						task = "circuit_port_service_ne";
						tkey = this.joinKeyRthandler(task,o_eqp_int_id);
					}
				}
			}
			if(StringUtils.isBlank(task)){
				return;
			}

			//log.info(o_fp0+" circuit_port_info:task["+task+"],key["+tkey+"]");
			String pstr="";
			String tmp="";
			int itmp=0;
			//String cids="";
			//String cnames="";
			int clevel=99;

			//String sids="";
			//String sobj = "";
			//String sregin="";

			//String cnoids="";
			//String cnos="";
			//log.info(o_fp0+" begin-circuit_port_info:circuit_id["+o_circuit_id+"],circuit_no["+o_circuit_no+"]");
			List results = util.getObject(this.CUSTOMCACHE,tkey,task);
			int filtertype = 0;
			if (results!=null && !results.isEmpty()) {
				for (Object item : results) {
					Object[] result = (Object[])item;
					if (result==null || result.length<1) {
						break;
					}
					List olist = Arrays.asList(result);
					String ptype	=	Util.getTempV(olist,1);
					pstr  = appendStrRthandler(pstr,ptype);
				}
			}
			if(StringUtils.isNotBlank(pstr)){
				//现网的多个关联电路的逻辑及顺序相互存在影响，导致电路未正常关联，故：计划调整上联口的算法。以达到所有电路关联算法的有效结合。 sunyuqiu ,by liucaiyong@20190814
				//无 Port_type  in（1,2）类型，则关联出全部电路和集客赋值给告警的电路和集客字段；
				//有Port_type  in（1,2）类型，则只取Port_type  in（1,2）对应的电路和集客。
				if("1,2".equals(pstr) || "2,1".equals(pstr)){
					filtertype = 1;//只有1，2
				}else if(pstr.contains("1") || pstr.contains("2")){
					filtertype = 3;//包含1，2
				}else if(!"1,2".equals(pstr) && !"2,1".equals(pstr)){
					filtertype = 2;//无1，2
				}
			}
			log.info(o_fp0+" pstr:"+ pstr + ",filtertype:" + filtertype);
			if (results!=null && !results.isEmpty()) {
			for (Object item : results) {
				Object[] result = (Object[])item;
				if (result==null || result.length<1) {
					break;
				}
				List olist = Arrays.asList(result);
				String ptype	=	Util.getTempV(olist,1);

				if(filtertype == 0)
					continue;
				else if(filtertype == 3 && !(ptype in ["1","2"]))
					continue;
				//pstr += ptype+",";
				//pstr  = appendStrRthandler(pstr,ptype);
				//			if(ptype == "1")
				//				continue;

				String cid = Util.getTempV(olist,2);
				//cids += cid+",";
				o_gcss_client = appendStrRthandler(o_gcss_client,cid);
				String sid = Util.getTempV(olist,3);
				   //sids += sid+",";
				   o_gcss_service = appendStrRthandler(o_gcss_service,sid);

				   String cnoid = Util.getTempV(olist,4);
				   //cnoids += cnoid+",";
				   o_circuit_id=appendStrRthandler(o_circuit_id,cnoid);

				//查询cid
				task= "great_client";
				tkey = this.joinKeyRthandler(task,cid);
				Object[] objects = util.getObject(CUSTOMCACHE, tkey,task);
							List list = objects==null?null:Arrays.asList(objects);
							if(list!=null&&!list.isEmpty())
							{
								 tmp = Util.getTempV(list, 1);
								 //cnames += tmp+",";
								 o_gcss_client_name = appendStrRthandler(o_gcss_client_name,tmp);
								 tmp = Util.getTempV(list, 2);//grade
								 //itmp = Integer.parseInt(tmp);
								 //cgrade = cgrade<itmp?cgrade:itmp;
								 o_gcss_client_grade = LevelCompareRthandler("gcss_client_grade",tmp,o_gcss_client_grade);
								 tmp = Util.getTempV(list, 3);//level
								 itmp = Integer.parseInt(tmp);//字典中值小业务级别大，所以应该取 值较小的
								 clevel = clevel<itmp?clevel:itmp;
								 tmp = Util.getTempV(list, 4);//grade_mgt
								 //itmp = Integer.parseInt(tmp);
								 //cmgt = cmgt<itmp?cmgt:itmp;
								 o_gcss_client_grade_mgt = LevelCompareRthandler("gcss_client_grade_mgt",tmp,o_gcss_client_grade_mgt);
							}
				//查询sid
				task= "nrmdb.service";
				tkey = "service:"+sid;
				objects = util.getObject(CUSTOMCACHE, tkey,task);
							list = objects==null?null:Arrays.asList(objects);
							if(list!=null&&!list.isEmpty())
							{
								tmp = Util.getTempV(list, 0);//object_class
								//sobj+=tmp+",";
								o_gcss_service_type = appendStrRthandler(o_gcss_service_type,tmp);
								tmp = Util.getTempV(list, 1);//service_sla
								o_gcss_service_level = LevelCompareRthandler("gcss_service_level",tmp,o_gcss_service_level);
								tmp = Util.getTempV(list, 3);
								//sregin+=tmp+",";
								gcss_service_region = appendStrRthandler(gcss_service_region,tmp);
							}


				//查询cno
				task= "jikeCircuitTableFromId";
				tkey = "gd:jike:circuit:namefromid:"+cnoid;
				objects = util.getObject(CUSTOMCACHE, tkey,task);
							list = objects==null?null:Arrays.asList(objects);
							if(list!=null&&!list.isEmpty())
							{
								tmp = Util.getTempV(list, 0);//cno
								//cnos += tmp+",";
								o_circuit_no=appendStrRthandler(o_circuit_no,tmp);
							}
			}
		}
		i_pstr=pstr; //暂存到i_pstr，给后面调用。 add by lgy@20180522
		//cids = distinceString(cids);
		//cnames = distinceString(cnames);
		//if(StringUtils.isNotBlank(cids)){
		if(StringUtils.isNotBlank(o_gcss_client)){
			//o_gcss_client = cids;
			o_gcss_client_num = distinceNumRthandler(o_gcss_client);
			//o_gcss_client_name = cnames;
			if(clevel==99)
				o_gcss_client_level = "";
			else
			 o_gcss_client_level = clevel+"";

			log.info(o_fp0+" circuit_port_client:gcss_client["+o_gcss_client+"],gcss_client_num["+o_gcss_client_num+"],gcss_client_name["+o_gcss_client_name+"],gcss_client_level["+o_gcss_client_level+"],gcss_client_grade["+o_gcss_client_grade+"],gcss_client_grade_mgt["+o_gcss_client_grade_mgt+"]");
		}

		//sids = distinceString(sids);
		//if(StringUtils.isNotBlank(sids)){
		if(StringUtils.isNotBlank(o_gcss_service)){
			//o_gcss_service = sids;
			//o_gcss_service_num = distinceNumRthandler(sids);
			o_gcss_service_num = distinceNumRthandler(o_gcss_service);
			//o_gcss_service_type = distinceString(sobj);

			//gcss_service_region = distinceString(sregin);
		  setJikeServiceRegion();
			log.info(o_fp0+" circuit_port_service:gcss_service["+o_gcss_service+"],gcss_service_num["+o_gcss_service_num+"],gcss_service_level["+o_gcss_service_level+"],gcss_service_type["+o_gcss_service_type+"],gcss_service_type["+o_gcss_service_type+"]");
		}

		//cnoids = distinceString(cnoids);
		//cnos = distinceString(cnos);
		//if(StringUtils.isNotBlank(cnoids)){
		//	o_circuit_id = subStrLen(cnoids);
			//  o_circuit_no = subStrLen(cnos);
			//  log.info(o_fp0+" circuit_port_info:circuit_id["+o_circuit_id+"],circuit_no["+o_circuit_no+"]");
		//}
		log.info(o_fp0+" circuit_port_info:circuit_id["+o_circuit_id+"],circuit_no["+o_circuit_no+"]");
		}
		/**
		 * 集客的地区信息映射为中文添加到special_field2中
		 */
		private void setJikeServiceRegionRthandler()
		{
			if(StringUtils.isNotBlank(gcss_service_region))
			{
				String[] regionIds = gcss_service_region.split(",");
				if(regionIds!=null)
				{
					for(String regionId:regionIds)
					{
						String rkey = "region_city_local:region_id:"+regionId;
						String regionName = this.getJikeRegionName(rkey,"jikeRegion");
						o_special_field2=regionName+(StringUtils.isNotBlank(o_special_field2)?","+o_special_field2:"");
					}
				}
			}
		}

		/**
		 * 集客的地区Id转化地区名称
		 * @param key
		 * @return
		 */
		private String getJikeRegionNameRthandler(String key,String taskName)
		{
			Object[] jikeRegion = util.getObject(CUSTOMCACHE, key,taskName);
			List jikeRegionList = jikeRegion==null?null:Arrays.asList(jikeRegion);
			if(jikeRegionList!=null&&!jikeRegionList.isEmpty())
			{
				return Util.getTempV(jikeRegionList, 0);
			}
			return "";
		}

		/**
		 * 计算(客户、业务)去重后的数量
		 * <br>
		 * 将客户/业务分隔后的数量作为客户/业务数量
		 *
		 * @param str 客户/业务
		 * @return
		 * 			返回客户/业务分隔的数量
		 */

		private String distinceNumRthandler(String str) {
			int num = 0;
			if(StringUtils.isNotBlank(str)) {
				String[] strArray = str.split(",");
				for(String s: strArray) {
					if(StringUtils.isNotBlank(s)) {
						num ++;
					}
				}
			}
			return num + "";
		}

		private String distinceStringRthandler(String strList)
		{
			String disList="";
			if(StringUtils.isNotBlank(strList.trim()))
			{
				String[] slist = strList.split(",");
				Map map = new HashMap();
				for(String str:slist)
				{
					if(StringUtils.isNotBlank(str)){
						map.put(str, "");
					}
				}
				if(map.size()>0){
				  Iterator itt = map.keySet().iterator();
				  while(itt.hasNext())
				  {
					  disList=disList+itt.next()+",";
				  }
				  disList = disList.substring(0, disList.length()-1);
				  map.clear();
				}
			}
			return disList;
		}

		/**
		 * 影响用户数
		 */
		private void setAffectUserNumRthandler()
		{
			if(o_object_class in ["200","201","131","130","9201","9200"])
			{
				Object obj = util.getObject(SimpleFindUtil.RESOURCE_CACHE, "UserNum:"+o_int_id);
				if(obj!=null)
				{
					int usernum = (Integer) obj;
					if(usernum!=0){
						o_special_field23=usernum+"";
					}
				}
			}
		}
		/**
		 * 级别比较
		 */
		private String LevelCompareRthandler(String type,String va,String vb){
			if(StringUtils.isBlank(va))
				return vb;
			if(StringUtils.isBlank(vb))
				return va;
			//集客客户属性（GCSS_CLIENT_GRADE）、集客客户管理属性（gcss_client_grade_mgt）：（0：省管客户>2：总部客户>1：地市客户）
		//集客业务级别（GCSS_SERVICE_LEVEL）:  （-1：AAA+>0：AAA>1：AA>2：A>3：普通>：4：未知）
		//电路级别（circuit_level）:（2：跨省>1：跨境>3：跨市>4:本地）
		if("reverse".equals(type.toLowerCase())){
			return LevelWeight(type,va)>LevelWeight(type,vb)?  vb : va;
		}
			return LevelWeight(type,va)>LevelWeight(type,vb)?va:vb;
		}
		/**
		 * 级别比较,权重
		 */
		private int LevelWeightRthandler(String type,String val){
			int ival = Integer.parseInt(val);
			int iret;
			if("circuit_level".equals(type.toLowerCase())){
				//电路级别（circuit_level）:（2：跨省>1：跨境>3：跨市>4:本地）
				switch(ival){
					case 2:
						iret=100;
						break;
					case 1:
						iret=90;
						break;
					case 3:
						iret=80;
						break;
					case 4:
						iret=70;
						break;
					default:
						iret = 70;
						break;
				}
			}else if("gcss_client_grade".equals(type.toLowerCase()) || "gcss_client_grade_mgt".equals(type.toLowerCase())){
				//集客客户属性（GCSS_CLIENT_GRADE）、集客客户管理属性（gcss_client_grade_mgt）：（0：省管客户>2：总部客户>1：地市客户）
				switch(ival){
					case 0:
						iret=100;
						break;
					case 2:
						iret=90;
						break;
					case 1:
						iret=70;
						break;
					default:
						iret = 70;
						break;
				}
			}else if("gcss_service_level".equals(type.toLowerCase())){
				//集客业务级别（GCSS_SERVICE_LEVEL）:  （-1：AAA+>0：AAA>1：AA>2：A>3：普通>：4：未知）
				switch(ival){
					case -1:
						iret=100;
						break;
					case 0:
						iret=90;
						break;
					case 1:
						iret=80;
						break;
					case 2:
						iret=70;
						break;
					case 3:
						iret=60;
						break;
					case 4:
						iret=50;
						break;
					default:
						iret = 50;
						break;
				}
			}else{
				iret = ival;
			}
			return iret;
		}

		private void setSubAlarmTypeIdRthandler(Map map)
		{
			if(map.isEmpty())
				return ;

			String taskName=map.get("taskName");
			if(StringUtils.isBlank(taskName))
				return ;
			String sep = map.get("seperator");
			if(StringUtils.isBlank(sep))
			{
					 sep="@";
			}
			String logger=map.get("logger");


			String professional_type=map.get("professional_type");
			String vendor_id=map.get("vendor_id");
			String alarm_title=map.get("alarm_title");
			String nms_alarm_id = map.get("nms_alarm_id");
			String ne_type=map.get("ne_type");
			String standard_alarm_id=map.get("standard_alarm_id");

			String key="common_subalarm_define";
			if(map.containsKey("professional_type"))
			{
				key=key+sep+professional_type;
			}
			if(map.containsKey("vendor_id"))
			{
				key=key+sep+vendor_id;
			}
			if(map.containsKey("alarm_title"))
			{
				key=key+sep+alarm_title;
			}
			if(map.containsKey("nms_alarm_id"))
			{
				key=key+sep+nms_alarm_id;
			}
			if(map.containsKey("ne_type"))
			{
				key=key+sep+ne_type;
			}
			if(map.containsKey("standard_alarm_id"))
			{
				key=key+sep+standard_alarm_id;
			}

			Object[] sub = util.getObject(this.CUSTOMCACHE,key,taskName);
			List olist = sub==null?null:Arrays.asList(sub);
			log.info(o_fp0+" "+logger+" set SubAlarmTypeKey["+key+"]");
			if (olist != null&&!olist.isEmpty()) {
				o_sub_alarm_type=Util.getTempV(olist, 6);
				log.info(o_fp0+" "+logger+",set-SubAlarmTypeKey["+key+"],get-SubAlarmTypeId["+o_sub_alarm_type+"]");
			}
		}
		private void setExtraString2Rthandler(Map map)
		{
			if(map.isEmpty())
				return ;

			String taskName=map.get("taskName");
			if(StringUtils.isBlank(taskName))
				return ;
			String sep = map.get("seperator");
			if(StringUtils.isBlank(sep))
			{
				   sep="@";
			}
			String logger=map.get("logger");


			String professional_type=map.get("professional_type");
			String vendor_id=map.get("vendor_id");
			String alarm_title=map.get("alarm_title");
			String nms_alarm_id = map.get("nms_alarm_id");
			String ne_type=map.get("ne_type");
			String standard_alarm_id=map.get("standard_alarm_id");
			String standard_alarm_name=map.get("standard_alarm_name");

			String key="common_subalarm_define";

			if(map.containsKey("professional_type"))
			{
				key=key+sep+professional_type;
			}
			if(map.containsKey("vendor_id"))
			{
				key=key+sep+vendor_id;
			}
			if(map.containsKey("alarm_title"))
			{
				key=key+sep+alarm_title;
			}
			if(map.containsKey("nms_alarm_id"))
			{
				key=key+sep+nms_alarm_id;
			}
			if(map.containsKey("ne_type"))
			{
				key=key+sep+ne_type;
			}
			if(map.containsKey("standard_alarm_id"))
			{
				key=key+sep+standard_alarm_id;
			}
			if(map.containsKey("standard_alarm_name"))
			{
				key=key+sep+standard_alarm_name;
			}

			Object[] sub = util.getObject(this.CUSTOMCACHE,key,taskName);
			List olist = sub==null?null:Arrays.asList(sub);
			log.info(o_fp0+" "+logger+" set ExtraString2Key["+key+"]");
			if (olist != null&&!olist.isEmpty()) {
				o_extra_string2 = Util.getTempV(olist, 9);
				log.info(o_fp0+" "+logger+",set-ExtraString2Key["+key+"],get-o_extra_string2["+o_extra_string2+"]");
			}
		}


		/**
		 * SubAlarmType赋值
		 */
		private void setSubAlarmTypeRthandler()
		{
			Map keyMap = new HashMap();
			//基站告警与传输拓扑关联呈现-告警细分类型调整,update by liucaiyong,required by sunyuqiu@2014070318
			//if(o_professional_type == "3" && o_vendor_id in ["0","7","8"] && o_eqp_object_class in ["2001","2009","2011","2034"])
			if(o_professional_type == "3" && o_vendor_id in ["0","7","8","202"] && o_eqp_object_class in ["2001","2009","2011","2034","2008"])
			{
				keyMap.put("taskName","common_subalarm_define.0");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("alarm_title",o_title_text);
				keyMap.put("ne_type",o_eqp_object_class);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-2");

				setSubAlarmTypeIdRthandler(keyMap);
			}
			//5G无线工单增加追加逻辑, analysis sunyuqiu@20200225 add by liucaiyong
		else if(o_object_class in ["3300","3201"])
		{
			keyMap.put("taskName","common_subalarm_define.0");
			keyMap.put("professional_type",o_professional_type);
			keyMap.put("vendor_id",o_vendor_id);
			keyMap.put("alarm_title",o_title_text);
			keyMap.put("ne_type",o_eqp_object_class);
			keyMap.put("seperator","@");
			keyMap.put("logger","sat-12");

			setSubAlarmTypeIdRthandler(keyMap);
		}
			//LTE退服告警细分类型的解析,by shanchunlan@20140618
			//TD\LTE跨专业关联-市电告警细分,by sunyuqiu@20140722
			else if(o_object_class in ["8104","8105","41011","270"])
			{
				String tmp = o_probable_cause;
				if(o_vendor_id=="1"){
					tmp = "无";
				}
				keyMap.put("taskName","common_subalarm_define.1");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("alarm_title",o_title_text);
				keyMap.put("nms_alarm_id",tmp);
				keyMap.put("ne_type",o_object_class);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-3");

				setSubAlarmTypeIdRthandler(keyMap);
			}
			//TD退服，added by liucaiyong@20140722
			else if(o_object_class in ["9200","9201","9300"])
			{
				keyMap.put("taskName","common_subalarm_define.1");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("alarm_title",o_title_text);
				keyMap.put("nms_alarm_id",o_probable_cause);
				keyMap.put("ne_type",o_object_class);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-4");

				setSubAlarmTypeIdRthandler(keyMap);
			}
			else if(o_object_class in ["201"])
			{
				keyMap.put("taskName","common_subalarm_define.1");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("ne_type",o_object_class);
				keyMap.put("nms_alarm_id",o_probable_cause);
				keyMap.put("alarm_title",o_title_text);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-9");

				setSubAlarmTypeIdRthandler(keyMap);
			}
			//铁塔告警-市电告警,liucaiyong@20170921 ,by sunyuqiu
			else if(o_vendor_id == "1038" && o_eqp_object_class == "30013")
			{
				keyMap.put("taskName","common_subalarm_define.1");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("ne_type",o_object_class);
				keyMap.put("nms_alarm_id","无");
				keyMap.put("alarm_title",o_title_text);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-38");

				setSubAlarmTypeIdRthandler(keyMap);
			}

			//TD\LTE告警跨专业关联，added by sunyuqiu@20140722
			//断连,温度,防盗,空调,门禁,added by sunyuqiu@20150415
			if(o_object_class in ["8104","9201","201","41011"]&&StringUtils.isNotBlank(o_standard_alarm_id))
			{
				keyMap = new HashMap();
				keyMap.put("taskName","common_subalarm_define.5");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("ne_type",o_object_class);
				keyMap.put("standard_alarm_id",o_standard_alarm_id);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-8");

				setSubAlarmTypeIdRthandler(keyMap);
			}
			//GSM/TD市电告警，added by sunyuqiu@20150206
			//无线低压告警，added by shanchunlan@20150415
			//断连,温度,防盗,空调,门禁,added by sunyuqiu@20150415
			//if(o_object_class in ["201","9201"]){
			if(o_object_class in ["201","9201","8104","200","9200","8105","41011","270"]){
				keyMap = new HashMap();
				keyMap.put("taskName","common_subalarm_define.6");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("ne_type",o_object_class);
				keyMap.put("nms_alarm_id",o_probable_cause);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-11");

				setSubAlarmTypeIdRthandler(keyMap);
			}
			//跨专业关联-核心智能网告警,by liucaiyong,required by sunyuqiu@20170112
			if(o_professional_type == "1" && o_vendor_id in ["1","7","8","12","14"])
			{
				keyMap = new HashMap();
				keyMap.put("taskName","common_subalarm_define.0");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("alarm_title",o_title_text);
				keyMap.put("ne_type",o_eqp_object_class);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-23");

				setSubAlarmTypeIdRthandler(keyMap);
			}else if(o_professional_type == "2" ){
				//核心网与传输网告警跨专业关联,PS域:1004,CE:1005 ,,by liucaiyong,required by sunyuqiu@20170317
				keyMap = new HashMap();
				keyMap.put("taskName","common_subalarm_define.0");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("alarm_title",o_title_text);
				keyMap.put("ne_type",o_eqp_object_class);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-24");

				setSubAlarmTypeIdRthandler(keyMap);
			}

			//动环
			if((StringUtils.isBlank(o_sub_alarm_type)||o_sub_alarm_type =="0") && o_omc_id in ["6101","6102"])
			{
				if(o_eqp_object_class == "30007")
				{
					//机房环境
					keyMap = new HashMap();
					keyMap.put("taskName","common_subalarm_define.3");
					keyMap.put("professional_type",o_professional_type);
					keyMap.put("alarm_title",o_title_text);
					keyMap.put("ne_type",o_object_class);
					keyMap.put("seperator","@");
					keyMap.put("logger","sat-5");

					setSubAlarmTypeIdRthandler(keyMap);

					if(StringUtils.isBlank(o_sub_alarm_type)||o_sub_alarm_type =="0")
					{
						keyMap = new HashMap();
						keyMap.put("taskName","common_subalarm_define.2");
						keyMap.put("professional_type",o_professional_type);
						keyMap.put("ne_type",o_object_class);
						keyMap.put("seperator","@");
						keyMap.put("logger","sat-6");

						setSubAlarmTypeIdRthandler(keyMap);
					}
				}

				//市电告警-发电代维,update by liucaiyong@2014010911
				keyMap = new HashMap();
				keyMap.put("taskName","common_subalarm_define.4");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("alarm_title",o_standard_alarm_name);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-7");

				setSubAlarmTypeIdRthandler(keyMap);
			}

			//无线外告 20150518 add by fuwei
			if(o_object_class in ["201","9201","8104","41011"] && ((o_vendor_id == "1" && StringUtils.isNotBlank(o_standard_alarm_id)) || (o_vendor_id != "1" && StringUtils.isNotBlank(o_probable_cause))) ){
				keyMap = new HashMap();

				if(o_vendor_id == "1"){
					keyMap.put("taskName","common_subalarm_define.10");
					keyMap.put("standard_alarm_id",o_standard_alarm_id);
				}else{
					keyMap.put("taskName","common_subalarm_define.8");
					keyMap.put("nms_alarm_id",o_probable_cause);
				}

				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("ne_type",o_object_class);


				keyMap.put("seperator","@");
				keyMap.put("logger","sat-21");

				setSubAlarmTypeIdRthandler(keyMap);
			}

			//默认-599
			if((StringUtils.isBlank(o_sub_alarm_type) || o_sub_alarm_type =="0")&&o_object_class in ["300","201","9300","9201"])
			{
				keyMap = new HashMap();
				keyMap.put("taskName","common_subalarm_define.2");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("ne_type",o_object_class);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-10");

				setSubAlarmTypeIdRthandler(keyMap);
			}
			//log.info(o_fp0+" get sub_alarm_type:"+o_sub_alarm_type);
		}

		/**
		* 告警细分类型输出预处理意见
		*/
		private void processPrapareBySubAlarmTypeRthandler()
		{
			if(o_sub_alarm_type == "544"){
			   o_extra_string2="请现场检查空调设备或传感器是否正常。";
			}else if(o_sub_alarm_type == "536"){
				o_extra_string2="请现场检查空调设备或传感器是否正常。";
			}else if(o_sub_alarm_type == "534"){
				o_extra_string2="请现场检查基站是否被盗，工程人员进站是否未登记基站出入门禁系统。";
			}else if(o_sub_alarm_type == "538"){
				o_extra_string2="请现场检查基站是否被盗，或传感器是否正常。";
			}else if(o_sub_alarm_type == "533"){
				o_extra_string2="经网管核查,初步判断为停电或设备故障引起,请现场检查。";
			}else if(o_sub_alarm_type == "546"){
				o_extra_string2="请现场检查空调设备或传感器是否正常。";
			}else if(o_sub_alarm_type == "543"){
				o_extra_string2="经网管核查,初步判断为停电或熔丝故障引起,请现场检查。";
			}else if(o_sub_alarm_type == "535"){
				o_extra_string2="请现场检查是否有火警,传感器是否正常。";
			}else if(o_vendor_id=="4" &&( o_sub_alarm_type == "974" || (o_sub_alarm_type == "68" && o_object_class in ["8105","270"]))){
				//7650基站退服:模块软件下载失败
				def GZ,YY
				def testFlag =  o_standard_alarm_name =~/^.*\d+(\S+):(.+)$/;
					if(testFlag.size()>0)
					{
						GZ = testFlag[0][1];
						YY = testFlag[0][2];
						YY = YY.replace("告警","故障");
						o_extra_string2="经网管核查，${GZ}因${YY}引起，请处理。";
					}
			}
			//关于部署告警智能预处理需求--BTS十一条告警预处理（CMCC-GD-DRITXQ-20170420-003）,sunyuqiu@20170522,liucaiyong
			else if(o_vendor_id=="8"&& o_object_class=="201"){
				int pos;
				if(o_title_text=="Manostat Alarm（稳压器故障告警）"){
					//站点号=19, 单板ID=DEMU, 单板号=0, 通道号=255, 支路号=255, 小区号=65535, 站点类型=BTS3012, 机架号=0, 机框号=0, 槽位号=2, 站点名称=HS72东港, 告警性质=普通
					pos = o_locate_info.indexOf("单板ID");
					if(pos>0)
				{
					String tmp = o_locate_info.substring(pos);
					//pos = tmp.indexOf("通道号");
					o_extra_string2 = "经网管核查，故障定位"+tmp.substring(0,tmp.indexOf("通道号"));
					pos = tmp.indexOf("机架号");
					tmp = tmp.substring(pos);
					pos = tmp.indexOf("站点名称");
					tmp = tmp.substring(0,pos);

									o_extra_string2 += tmp +"请尽快处理。";
								}
				}else if(o_title_text=="射频单元接收通道RTWP/RSSI不平衡告警"){
					//柜号=0, 框号=4, 槽号=0, 载波编号=2, 主集接收通道号=255, 分集接收通道号=255, 单板类型=MRFU, 主集RTWP值(0.1dBm)=-730, 分集RTWP值(0.1dBm)=-1152, 站点号=93, 站点类型=BTS3900 GSM, 站点名称=M71洋潭, 载频名称=&lt;NULL&gt;
					pos = o_locate_info.indexOf("站点号");
					if(pos>0){
						o_extra_string2 = "经网管核查，故障定位"+o_locate_info.substring(0,pos)+"请尽快处理。";
					}
				}else if(o_title_text=="射频单元光接口性能恶化告警"){
					//柜号=0, 框号=62, 槽号=0, 端口=端口0, 单板类型=MRRU, 具体问题=接收功率过高, 站点号=153, 站点类型=DBS3900 GSM, 站点名称=L2陆丰禾路D
					pos = o_locate_info.indexOf("站点号");
					if(pos>0){
						o_extra_string2 = "经网管核查，故障定位"+o_locate_info.substring(0,pos)+"请尽快处理。";
					}
				}else if(o_title_text=="一级驻波告警"){
					//站点号=45, 单板ID=DDPU, 单板号=7, 通道号=255, 支路号=1, 小区号=65535, 站点类型=BTS3012, 机架号=1, 机框号=9, 槽位号=4, 站点名称=585D深巷, 告警性质=普通
					pos = o_locate_info.indexOf("单板ID");
					if(pos>0)
				{
					String tmp = o_locate_info.substring(pos);
					o_extra_string2 = "经网管核查，故障定位"+tmp.substring(0,tmp.indexOf("小区号"));
					pos = tmp.indexOf("机架号");
					tmp = tmp.substring(pos);
					pos = tmp.indexOf("站点名称");
					tmp = tmp.substring(0,pos);

									o_extra_string2 += tmp +"请尽快处理。";
								}
				}else if(o_title_text=="单板通信告警"){
					//站点号=72, 单板ID=DFCB, 单板号=8, 通道号=255, 支路号=255, 小区号=65535, 站点类型=BTS3012, 机架号=1, 机框号=9, 槽位号=8, 站点名称=SGS71韶关韶关大学, 告警性质=普通
					pos = o_locate_info.indexOf("单板ID");
					if(pos>0)
				{
					String tmp = o_locate_info.substring(pos);
					o_extra_string2 = "经网管核查，故障定位"+tmp.substring(0,tmp.indexOf("小区号"));
					pos = tmp.indexOf("机架号");
					tmp = tmp.substring(pos);
					pos = tmp.indexOf("站点名称");
					tmp = tmp.substring(0,pos);

									o_extra_string2 += tmp +"请尽快处理。";
								}
				}else if(o_title_text=="BBU光模块收发异常告警"&&StringUtils.isNotBlank(o_locate_info)){
					//柜号=0, 框号=0, 槽号=6, 端口号=0, 单板类型=GTMU, 具体问题=接收无信号, 站点号=140, 站点类型=DBS3900 GSM, 站点名称=L2安溪2BBU
					pos = o_locate_info.indexOf("站点号");
					if(pos>0){
						o_extra_string2 = "经网管核查，故障定位"+o_locate_info.substring(0,pos)+"请尽快处理。";
					}
				}
				//log.info(o_fp0+"  get-o_extra_string2:"+o_extra_string2);
			}else if(o_vendor_id=="8"&& o_object_class=="9201"){
				if(StringUtils.isNotBlank(o_locate_info) && o_title_text in ["射频单元通道异常告警","射频单元光接口性能恶化告警","传输光接口异常告警","单板心跳检测失败告警"]){
					o_extra_string2 = "经网管核查，故障定位"+o_locate_info+"，请尽快处理。";
				}
			}else if(o_vendor_id=="7"&& o_object_class=="9201"){
			   if(o_title_text == "天线校正通道或校正线缆故障"){
					if(o_alarm_text.contains("下行校正通道故障")){
						o_extra_string2 ="经网管核查，故障定位为下行校正通道故障，请尽快处理。";
					}
				}else if(o_title_text == "下行输出欠/过功率告警"){
					int pos = o_probable_cause_txt.indexOf("||");
						o_extra_string2 = "经网管核查，初步判断为" + o_probable_cause_txt.substring(pos + 2);
							def testFlag =  o_alarm_text =~/.*下行通道号:(\d+)</;
							if(testFlag.size()>0)
							{
								def var1 = testFlag[0][1];
								o_extra_string2 += "导致，下行通道号为${var1}，请尽快处理。";
							}
				}else if(o_title_text == "单板温度过高或者过低"){
				   def testFlag =  o_alarm_text =~/.*附加信息.*单板类型:(\w+)\s*#.*温度:(\w+)/;
								if(testFlag.size()>0)
								{
									def var1 = testFlag[0][1];
									def var2 = testFlag[0][2];
									o_extra_string2="经网管核查，故障定位单板类型为${var1},当前温度为${var2}℃，请尽快处理。";
								}
				}else if(o_title_text == "IMA组故障"){
				   def var1,var2 ;
							def testFlag =  o_alarm_text =~/.*IMA组号：(\d+)/;
							if(testFlag.size()>0)
							{
								var1 = testFlag[0][1];

							}
							testFlag =  o_alarm_text =~/.*CAUSE=([^\n]+)/;
							if(testFlag.size()>0)
							{
								var2 = testFlag[0][1];
								var2 = var2.replace("。 ",";\n");
							}
							if(StringUtils.isNotBlank(var1)&& StringUtils.isNotBlank(var2)){
								o_extra_string2="经网管核查，故障定位IMA组号为${var1}，初步判断为以下原因导致，请尽快处理。\n${var2}";
							}
				}
			}else if(o_vendor_id=="8"&& o_object_class in ["8104","41011"]){
				if(StringUtils.isNotBlank(o_locate_info) &&o_title_text in ["时间同步失败告警","射频单元硬件故障告警","射频单元光接口性能恶化告警","射频单元发射通道增益异常告警","射频单元ALD电流异常告警","传输光接口异常告警"]){
					o_extra_string2 = "经网管核查，故障定位"+o_locate_info+"，请尽快处理。";
				}else if(StringUtils.isNotBlank(o_locate_info) && o_title_text == "基站S1控制面传输中断告警"){
					def testFlag =  o_alarm_text =~/eNodeB名称=(.*)/;
								if(testFlag.size()>0)
								{
									def var1 = testFlag[0][1];
									o_extra_string2="经网管核查，基站${var1}伴随基站S1控制面传输中断告警告警，影响业务，请尽快处理。";
								}
				}else if(StringUtils.isNotBlank(o_locate_info) && o_title_text == "用户面故障告警"){
					if(o_locate_info == "业务类型=S1"){
						o_extra_string2 = "经网管核查，业务故障类型为S1，影响业务，请尽快处理。";
					}else if(o_locate_info == "业务类型=X2"){
						o_extra_string2 = "经网管核查，业务故障类型为X2，暂不影响业务。";
					}
				}
			}else if(o_vendor_id=="7"&& o_object_class in ["8104","41011"]){
				if(o_title_text == "RRU链路断"){
					def var1,var2 ;
							//def testFlag =  o_alarm_text =~/拓扑:(.+)[(\n)|(\;.*\n)]/;
							def testFlag =  o_alarm_text =~/拓扑:([^;]+)/;
							if(testFlag.size()>0)
							{
								var1 = testFlag[0][1];
							}
							testFlag =  o_alarm_text =~/.*CAUSE=([^\n]+)/;
							if(testFlag.size()>0)
							{
								var2 = testFlag[0][1];
								var2 = var2.replace("。 ",";\n");
							}
							if(StringUtils.isNotBlank(var1)&& StringUtils.isNotBlank(var2)){
								o_extra_string2="经网管核查，${var1}，初步判断为以下原因导致，请尽快处理。\n${var2}";
							}
				}else if(o_title_text == "S1断链告警"){
					def var1,var2 ;
						   def testFlag =  o_alarm_text =~/ALARMTEXT=SCTP偶联号:\s*(\d+),\s*([^;]*);/;
							if(testFlag.size()>0)
							{
								var1 = testFlag[0][1];
								var2 = testFlag[0][2];
								if("S1 SCTP偶联断" == var2){
									o_extra_string2="经网管核查，故障定位SCTP偶联号为${var1}，${var2}，请检查SCTP偶联参数配置是否正确。";
								}else{
									o_extra_string2="经网管核查，故障定位SCTP偶联号为${var1}，${var2}，请检查基站小区是否配置。";
								}
							}
				}else if(o_title_text == "输入电压异常"){
					def var1,var2 ;
							def testFlag =  o_alarm_text =~/ALARMTEXT.*[=|;](.*);\s*电压:\s*([^;]*);/;
							if(testFlag.size()>0)
							{
								var1 = testFlag[0][1];
								var2 = testFlag[0][2];
								o_extra_string2="经网管核查，故障定位为${var1}; 电压: ${var2}，请尽快处理。";
							}
				}
			}else if(o_vendor_id=="4"&& o_object_class in ["8104","41011"]){
				int pos = o_standard_alarm_name.indexOf(":");
				if(pos>0){
					String tmp = o_standard_alarm_name.substring(0,pos);
					o_extra_string2 = "经网管核查，" + tmp + "因";
					tmp = o_standard_alarm_name.substring(pos+1);
					o_extra_string2 += tmp + "引起，请处理。";
				}
			}
			//传输 智能预处理 add by fw ，required by sunyuqiu@20160829
			else if(o_professional_type == "3" && o_vendor_id in ["0","7","8","202"]
					&& o_eqp_object_class in ["2001","2009","2034"]
					&& o_sub_alarm_type == "90"  ){
				o_extra_string2="经核查，该网元上报"+o_title_text+"告警，网元无市电故障且相邻网元无LOS告警，初步判定为DCN故障引起，请维护人员及时处理。";
			}
			else if(o_professional_type == "3" && o_vendor_id in ["202"]
					&& o_eqp_object_class in ["2009"]
					&& o_sub_alarm_type == "977"  ){
				o_extra_string2="经核查，该网元"+o_ne_label+"板上报"+o_title_text+"告警，初步判断为硬件故障，请维护人员及时处理。";
			}
			else if(o_professional_type == "3" && o_vendor_id in ["0"]
					&& o_eqp_object_class in ["2001","2009"]
					&& o_title_text == "PPP Fail" ){
				o_extra_string2="经核查，该网元上报带内DCN通道告警，请检查线路、相关端口是否正常，请维护人员及时跟进处理。";
			}
			else if(o_professional_type == "3" && o_vendor_id in ["12","7","8","202"]
					&& o_eqp_object_class in ["2001","2009","2034"]
					&& o_object_level == "70602"
					&& o_sub_alarm_type == "821"  ){
				o_extra_string2="经核查，该网元端口"+o_ne_label+"上报LOS告警，且该端口为支路口，初步判断为连接件或者业务侧故障导致，请维护人员及时处理。经核查综资该端口所带业务电路代号为："+o_circuit_no;
			}
			//传输 智能预处理 对端 add by fw ， required by  shunyuqiu@20160829
			else if(o_professional_type == "3" &&   o_vendor_id in ["8","7","202","12"] &&  o_eqp_object_class in ["2001","2009","2034"] &&
			   o_sub_alarm_type =="821" &&   o_object_level == "70601" &&
			   o_title_text != "MUT_LOS" &&   StringUtils.isNotBlank(o_special_field9) && StringUtils.isNotBlank(o_extra_string1)
			   ){
				this.getRemoteInfoBySF9Rthandler();
			}
			else if(o_professional_type == "3" &&   o_vendor_id in ["8"] &&  o_eqp_object_class in ["2034"] &&
			   o_sub_alarm_type =="821" &&   o_object_level == "70601" &&
			   o_title_text in ["MUT_LOS"] &&   StringUtils.isNotBlank(o_special_field9) && StringUtils.isNotBlank(o_extra_string1)
			   ){
				this.getRemoteInfoBySF9Rthandler();
			}
			//动力环境专业告警智能预处理规则的优化（CMCC-GD-DRITXQ-20170316-007), liucaiyong@20170621,asynced by sunyuqiu
			else if(o_professional_type == "4" && o_title_text in ["其他告警","电池组被盗告警","防雷器空开断开告警","玻破告警","防雷器故障告警","风扇故障告警"] ){
			   o_extra_string2="经网管核查，该告警信号具体内容为"+o_alarm_unit+"，请维护人员及时处理。";
			}else if(o_professional_type == "4" && o_title_text in ["湿度过低告警","温度过低告警"] ){
				 o_extra_string2="初步怀疑故障原因为监控探头异常或者是阈值设置不合理，请维护人员核实处理。";
			}

			//传输专业 非衍生告警预处理 , category=20 update by fuwei,required by sunyuqiu@20150430
			if(o_professional_type == "3" && o_vendor_id in ["0","7","8","202"] && o_eqp_object_class in ["2001","2009","2011","100","2034"])
			{
				Map keyMap = new HashMap();
				keyMap.put("taskName","common_subalarm_define.7");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("ne_type",o_eqp_object_class);
				keyMap.put("standard_alarm_name",o_standard_alarm_name);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-20");

				setExtraString2Rthandler(keyMap);
			}

			//无线告警预处理 , category=20 update by fuwei,required by sunyuqiu@20150430
			if(o_professional_type == "1" && o_vendor_id in ["9","7"] && o_object_class in ["8104","8105","9201","41011","270"])
			{
			  Map keyMap = new HashMap();
				keyMap.put("taskName","common_subalarm_define.9");
				keyMap.put("professional_type",o_professional_type);
				keyMap.put("vendor_id",o_vendor_id);
				keyMap.put("ne_type",o_object_class);
				keyMap.put("nms_alarm_id",o_probable_cause);
				keyMap.put("seperator","@");
				keyMap.put("logger","sat-21");

				setExtraString2Rthandler(keyMap);
			}
			if(o_object_class in ["201","300","8104","8105","41011","270"]){
			setGaoTiePropRthandler();
			if(checkGaoTiePropRthandler()==1){
				o_ne_sub_type = (o_object_class == "41011" ? "8104" : (o_object_class == "270" ? "8105" : o_object_class)) + "01";
				if(o_org_type!="2")
					o_special_field0="★★★★★";

						Object[] rru;
						List rruList;
			  //关联高铁小区和基站下带RRU数, by sunyuqiu@2019057
			  rru = util.getObject(CUSTOMCACHE, "site_rru:" + o_int_id,"site_rru");
			  rruList = rru==null?null:Arrays.asList(rru);
			  if(rruList!=null&&!rruList.isEmpty())
			  {
				  o_home_client_num = Util.getTempV(rruList, 1);
				  log.info(o_fp0+"  get-site["+o_int_id+"]-rrucount["+o_home_client_num+"]");
			  }
			}

	   }
			 //设备掉电
			 if(o_vendor_id=="7"&&o_object_class=="8104"&&o_title_text=="设备掉电"){
				 def testFlag =  o_alarm_text =~/ALARMTEXT.*小区ID\s*=\s*(\S+)\s*/;
					 if(testFlag.size()>0){
				   def matchKey = testFlag[0][1];
				   o_extra_string2 = "经网管核查，初步判断为外部供电问题导致，影响第"+matchKey+"小区，请协助处理。";
				 }
				 }
			 //射频单元不在位告警
			 if(o_vendor_id=="9"&&o_object_class=="8104"&&o_title_text=="射频单元不在位告警"){
				 def testFlag =  o_alarm_text =~/ALARM_TEXT.*\|\|[0-9.]+\|\|(.*)\|\|/;
					 if(testFlag.size()>0){
				   def matchKey = testFlag[0][1];
				   o_extra_string2 = "经网管核查，初步判断为"+matchKey+"引起，请协助处理。";
				 }
				 }
			 //射频单元交流掉电告警
			 if(o_vendor_id=="8"&&o_object_class=="8104"&&o_title_text=="射频单元交流掉电告警"){
				 def testFlag =  o_alarm_text =~/定位信息\s*=\s*(.*)\s*单板类型/;
					 if(testFlag.size()>0){
				   def matchKey = testFlag[0][1];
				   o_extra_string2 = "经网管核查，初步判断为外部供电问题导致，影响RRU信息为："+matchKey+"请协助处理。";
				 }
				 }
			 //射频单元维护链路异常告警
			 if(o_vendor_id=="8"&&o_object_class=="8104"&&o_title_text=="射频单元维护链路异常告警"){
				 if(o_alarm_text.contains("locationInfo")){
					 def testFlag =  o_alarm_text =~/locationInfo\"\:\"(.*)\s*单板类型/;
					 if(testFlag.size()>0){
					   def matchKey = testFlag[0][1];
					   o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey+"请协助处理。";
					 }
				 }else{
							 def testFlag =  o_alarm_text =~/定位信息\s*=\s*(.*)\s*单板类型/;
							 if(testFlag.size()>0){
					  def matchKey = testFlag[0][1];
					  o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey+"请协助处理。";
					 }
				 }
				 }
			 //GNSS接收机搜星故障
			 if(o_vendor_id=="7"&&o_object_class=="8104"&&o_title_text=="GNSS接收机搜星故障"){
				 def testFlag =  o_alarm_text =~/CAUSE\s*=([\s\S]*)EVENTTIME[\s\S]*ALARMTEXT\s*=\s*([^\;]+)/;
					 if(testFlag.size()>0){
				   def matchKey1 = testFlag[0][1];
				   def matchKey2 = testFlag[0][2];
				   o_extra_string2 = "经网管核查，故障由【"+matchKey2+"】导致，初步怀疑有以下原因，请现场排查。"+"\n"+matchKey1;
				 }
				 }
			 //BBU IR光模块收发异常告警   BBU IR接口异常告警  BBU光模块收发异常告警
			 if(o_vendor_id=="8"&&o_object_class=="8104"&&o_title_text in ["BBU IR接口异常告警","BBU IR光模块收发异常告警","BBU光模块收发异常告警"]){
				 if(o_alarm_text.contains("locationInfo")){
					 def testFlag =  o_alarm_text =~/locationInfo\"\:\"(.*)\s*单板类型.*具体问题\s*=\s*([^\"]*)/;
					 if(testFlag.size()>0){
				   def matchKey1 = testFlag[0][1];
				   def matchKey2 = testFlag[0][2];
				   o_extra_string2 = "经网管核查，故障定位信息为"+matchKey1+"具体问题为"+matchKey2+"，请协助处理";
					 }
				}else{
					def testFlag =  o_alarm_text =~/定位信息\s*=\s*(.*)\s*单板类型.*具体问题\s*=\s*(.*)/;
						 if(testFlag.size()>0){
					   def matchKey1 = testFlag[0][1];
					 def matchKey2 = testFlag[0][2];
					 o_extra_string2 = "经网管核查，故障定位信息为"+matchKey1+"具体问题为"+matchKey2+"，请协助处理";
						 }
					}
				 }
			 //温度异常
			 if(o_vendor_id=="7"&&o_object_class=="8104"&&o_title_text=="温度异常"){
				 def testFlag =  o_alarm_text =~/ALARMTEXT\s*=\s*([^\;]+).*当前温度\s*\:\s*([^\;]+)/;
					 if(testFlag.size()>0){
				   def matchKey1 = testFlag[0][1];
				   def matchKey2 = testFlag[0][2];
				   o_extra_string2 = "经网管核查，初步判断为"+matchKey1+"，当前单板温度为"+matchKey2+"，请现场处理。";
				 }
				 }
			 //射频单元温度异常告警
			 if(o_vendor_id=="8"&&o_object_class=="8104"&&o_title_text=="射频单元温度异常告警"){
				 def testFlag =  o_alarm_text =~/功放温度值\s*\(C\/F\)\s*=\s*(\d+\/\d+).*单板温度值\s*\(C\/F\)\s*=\s*(\d+\/\d+)/;
					 if(testFlag.size()>0){
				   def matchKey1 = testFlag[0][1];
				   def matchKey2 = testFlag[0][2];
				   o_extra_string2 = "经网核查，功放温度值(C/F)为"+matchKey1+"，单板温度值(C/F)为"+matchKey2+"，请现场处理。";
				 }
				 }
			 //校准失败（干扰）
			 if(o_vendor_id=="1"&&o_object_class=="8104"&&o_standard_alarm_name=="校准失败（干扰）"){
				 o_extra_string2 = "经网管核查，初步判断小区存在外部干扰，请现场排查处理。"
			}
			//lgy@20190116,CMCC-GD-DRITXQ-20181213-030 需求名称：关于部署告警预处理规则需求
			if(o_vendor_id=="8"&&o_eqp_object_class in ["8104","41011"]&&StringUtils.isBlank(o_extra_string2)&&!(o_title_text in ["主电告警","小区不可用告警","星卡天线故障告警","BBU IR接口异常告警","射频单元光模块收发异常告警","系统时钟不可用告警","S1接口故障告警","eNodeB退服告警"])){
				if(o_alarm_text.contains("locationInfo")){
					if(o_alarm_text.contains("端口号=")){
						 def testFlag =  o_alarm_text =~/locationInfo\"\:\".*柜号\s*=\s*(\d+),\s*框号\s*=\s*(\d+),\s*槽号\s*=\s*(\d+),\s*端口号\s*=\s*(\S+),.*具体问题\s*=\s*([^\"]*)/;
						 if(testFlag.size()>0){
							 def matchKey1 = testFlag[0][1];
					   def matchKey2 = testFlag[0][2];
					   def matchKey3 = testFlag[0][3];
					   def matchKey4 = testFlag[0][4];
					   def matchKey5 = testFlag[0][5];
					   o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey1+"，框号为"+matchKey2+"，槽号为"+matchKey3+"，"+matchKey4+"，初步判断为"+matchKey5+"，请协助处理。";
				   }
			  }else{
						 def testFlag =  o_alarm_text =~/locationInfo\"\:\".*柜号\s*=\s*(\d+),\s*框号\s*=\s*(\d+),\s*槽号\s*=\s*(\d+),.*具体问题\s*=\s*([^\"]*)/;
						 if(testFlag.size()>0){
							 def matchKey1 = testFlag[0][1];
					   def matchKey2 = testFlag[0][2];
					   def matchKey3 = testFlag[0][3];
					   def matchKey4 = testFlag[0][4];
					   o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey1+"，框号为"+matchKey2+"，槽号为"+matchKey3+"，初步判断为"+matchKey4+"，请协助处理。";
					 }
				 }
			}else{
					 if(o_alarm_text.contains("端口号=")){
						 def testFlag =  o_alarm_text =~/定位信息\s*=\s*.*柜号=(\d+),\s*框号=(\d+),\s*槽号=(\d+),\s*端口号=(\S+),.*具体问题=([^\n]*)/;
						 if(testFlag.size()>0){
							 def matchKey1 = testFlag[0][1];
					   def matchKey2 = testFlag[0][2];
					   def matchKey3 = testFlag[0][3];
					   def matchKey4 = testFlag[0][4];
					   def matchKey5 = testFlag[0][5];
					   o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey1+"，框号为"+matchKey2+"，槽号为"+matchKey3+"，"+matchKey4+"，初步判断为"+matchKey5+"，请协助处理。";
				   }
			  }else{
						 def testFlag =  o_alarm_text =~/定位信息\s*=\s*.*柜号=(\d+),\s*框号=(\d+),\s*槽号=(\d+),.*具体问题=([^\n]*)/;
						 if(testFlag.size()>0){
							 def matchKey1 = testFlag[0][1];
					   def matchKey2 = testFlag[0][2];
					   def matchKey3 = testFlag[0][3];
					   def matchKey4 = testFlag[0][4];
					   o_extra_string2 = "经网管核查，故障定位信息为柜号为"+matchKey1+"，框号为"+matchKey2+"，槽号为"+matchKey3+"，初步判断为"+matchKey4+"，请协助处理。";
					 }
				 }
			}
			}
		}

		/**
		* 高铁属性
		*/
		private int checkGaoTiePropRthandler()
		{
			String key="scenetype_scene_area@"+o_int_id;
			String task="scenetype_scene_area.0";
			Object[] areas = util.getObject(CUSTOMCACHE, key,task);
			List areaList = areas==null?null:Arrays.asList(areas);
			if(areaList!=null&&!areaList.isEmpty())
			{
				def area_id = Util.getTempV(areaList, 1);
				log.info(o_fp0+"  checkGaoTieArea.area_id:"+area_id);
				return(1);
			}
			else
			{
				return(0);
			}
		}

		private void setGaoTiePropRthandler()
		{
			if(StringUtils.isBlank(o_rlocate_ne_name)){
				return;
			}
			String intid = o_int_id;
			if(o_object_class in ["8105","270"]){
				intid = o_eqp_int_id;
			}
			String key="rru@"+o_rlocate_ne_name+"@"+intid;
			String task="rru";
			Object[] rru = util.getObject(CUSTOMCACHE, key,task);
			List rruList = rru==null?null:Arrays.asList(rru);
			if(rruList!=null&&!rruList.isEmpty())
			{
				o_rlocate_ne_name = Util.getTempV(rruList, 0);
				o_rlocate_ne_type = Util.getTempV(rruList, 1);
				o_rlocate_ne_int_id= Util.getTempV(rruList, 4);
				log.info(o_fp0+" checkGaoTieArea:: o_rlocate_ne_int_id:"+o_rlocate_ne_int_id+" o_rlocate_ne_type:"+o_rlocate_ne_type);
			}
		}
		// 数通syslog和traplog告警 厂家告警类别转换 added by lgy@20180620 required by lishaoshuai@CMCC-GD-DRITXQ-20180518-010
		private void setVendorTypeRthandler()
		{
			if(o_omc_id=="6601"||o_omc_id=="6602"){
				if(o_vendor_type=="1"){
				o_vendor_type="Syslog";
					}else if (o_vendor_type=="2"){
				o_vendor_type="Trap";
					  }else if (o_vendor_type=="3"){
				  o_vendor_type="IPNET";
							}else if (o_vendor_type=="4"){
						o_vendor_type="OMC";
								}
					}
			//临时上报,lcy@20190226
			//if(o_title_text in ["LE健康检查告警","LR健康检查告警","主机CPU使用率过高","硬盘空间不足"]){
			//	o_send_jt_flag = "1";
			//}
		}



		/**
		 * 设置site_no的值
		 */
		private void setSiteNoRthandler()
		{
			if(StringUtils.isNotBlank(o_site_no))
			{
				return;
			}
			int professional_type;
			try{
				professional_type = Integer.parseInt(o_professional_type);
			}catch(Exception e)
			{
				professional_type=0;
			}
			String strIntId = o_int_id;
			String key = null;

			Object[] objects = null;
			List objectsList = null;
			// 话务网(1)&数据网(2)查询[objects]表;传输网(3)查询[objects_trans]表
			switch(professional_type)
			{
				case 1:
				case 2:
					key = "objects:" + strIntId;
					objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects");
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						o_site_no=Util.getTempV(objectsList, 20);	// 缓存第20个字段(从0开始)
					}
					break;
				case 3:		// 传输网
					// key = "objects_trans:" + strIntId;
					key = "objects_trans_fdn_id:" + strIntId;
					objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects_trans_fdn_id");
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						o_site_no=Util.getTempV(objectsList, 18);// 缓存第18个字段(从0开始)
					}
					break;
				default:
					key = "objects:" + strIntId;
					objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects");
					objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						o_site_no=Util.getTempV(objectsList, 20);	// 缓存第20个字段(从0开始)
					}
			}

			if(StringUtils.isBlank(o_site_no)&&o_professional_type=="4"&&o_severity_keycode in ["39"])
			{
				String locate_info = o_locate_info;
				key = "objects:machroom_id:" + locate_info;
				objects = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, key,"objects.machroom_id");
				objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					o_site_no=Util.getTempV(objectsList, 1);
				}
			}
		}

		/**
		 *  添加组信息，包敌电路组，传输网元组，动环网元组，集客业务和集客客户
		 *  并去掉重复。
		 * @param stdAlarm
		 * 增加组20131108
		 */
		public void alarmAddGroupInfoRthandler(CommonAlarm stdAlarm) {
			// 添加电路组
			this.addCircuitGroupRthandler(stdAlarm);
			// 添加业务组
			this.addGcssServiceGroupRthandler(stdAlarm);
			//添加传输网元组
			addTransNeGroupRthandler(stdAlarm);
			//添加动环网元组
			addPowerNeGroupRthandler(stdAlarm);
			// 添加客户组
			this.addGcssClientGroupRthandler(stdAlarm);
			// 添加标题网元组,added by	sunyuqiu@201509819
			addTitleGroupRthandler(stdAlarm);
			//交换、无线、数据,added by sunyuqiu@20160728
			addCoreNeGroupRthandler(stdAlarm);
			addWirelessNeGroupRthandler(stdAlarm);
			addDataNeGroupRthandler(stdAlarm);
			//增加集中化网元组
			addCentralNeGroupRthandler();
			// 去重
			this.deleteDupGroupIdRthandler(stdAlarm);
		}

		/**
		 * 通过MAP不能有重复值的方式去掉重复数据
		 * @param stdAlarm
		 */
		private void deleteDupGroupIdRthandler(CommonAlarm stdAlarm) {

			String group_id = "";
			Iterator it = deleteDupMap.keySet().iterator();
			while (it.hasNext()) {
				group_id = group_id + it.next().toString() + ",";
			}

			if(group_id.length()>1){
				group_id = group_id.substring(0, group_id.length() - 1);
			}
			o_group_id = group_id;
			//stdAlarm.setValue("group_id", group_id);
			// 通过group_id添加组名称group_name
		  this.addGroupName(o_group_id);

			deleteDupMap.clear();
		}
		  // 传输网集客告警处理时限逻辑调整 add by lgy@20180510 required by wangyingfeng 需求：CMCC-GD-DRITXQ-20180322-007
	   private void SetJiKeEffectServiceRthandler(){
				if(StringUtils.isNotBlank(i_pstr)){
		  if(o_object_class in ["10011","706"]){
			if(i_pstr.contains("4"))
			  o_effect_service = "42";//集客业务主用或备用路径中断
			   else if(i_pstr.contains("1")&& StringUtils.isNotBlank(o_group_id) && o_group_id.contains("1382381700"))
				o_effect_service = "39";//集客业务可能中断
			   else if(i_pstr.contains("2")|| i_pstr.contains("3"))
				o_effect_service = "42";//集客业务主用或备用路径中断
		  }else{
			if(i_pstr.contains("4"))
			  o_effect_service = "42";//集客业务主用或备用路径中断
			   else if((i_pstr.contains("1") || i_pstr.contains("2"))&& StringUtils.isNotBlank(o_group_id) && o_group_id.contains("1382381700"))
				o_effect_service = "39";//集客业务可能中断
			   else if(i_pstr.contains("3"))
				o_effect_service = "42";//集客业务主用或备用路径中断
		  }
			log.info(o_fp0+" circuit_port_info:port_type["+i_pstr+"],effect_service["+o_effect_service+"]");
		}
	  }
		/**
		 * 添加交换网元组
		 * @param stdAlarm
		 */
		private void addCoreNeGroupRthandler(CommonAlarm stdAlarm){
			String int_id = o_eqp_int_id;
			this.findCacheByKeyRthandler(int_id, "tai_core_negroup");
		}

		/**
		 * 添加无线网元组
		 * @param stdAlarm
		 */
		private void addWirelessNeGroupRthandler(CommonAlarm stdAlarm){
			String int_id = o_int_id;
			this.findCacheByKeyRthandler(int_id, "tai_wireless_negroup");
		}

		/**
		 * 添加数据网元组
		 * @param stdAlarm
		 */
		private void addDataNeGroupRthandler(CommonAlarm stdAlarm){
			String int_id = o_eqp_int_id;
			this.findCacheByKeyRthandler(int_id, "tai_data_negroup");
		}

		/**
		 * 添加标题网元信息
		 * @param stdAlarm
		 */
		private void addTitleGroupRthandler(CommonAlarm stdAlarm) {
			String circuit_id = this.joinKeyRthandler(o_vendor_id,o_eqp_object_class,o_title_text);
			circuit_id = Util.getCRC32(circuit_id);
			this.findCacheByKeyRthandler(circuit_id, "tai_titlegroup");
		}

		/**
		 * 添加电路组信息
		 * @param stdAlarm
		 */
		private void addCircuitGroupRthandler(CommonAlarm stdAlarm) {
			String circuit_id = o_circuit_id;
			this.findCacheByKeyRthandler(circuit_id, "tai_circuitgroup");

		}

		/**
		 * 添加集客业务组信息
		 * @param stdAlarm
		 */
		private void addGcssServiceGroupRthandler(CommonAlarm stdAlarm) {
			String circuit_id = o_gcss_service;
			findCacheByKeyRthandler(circuit_id,"tai_gcss_servicegroup");

		}


		/**
		 * 添加传输网元组信息
		 * @param stdAlarm
		 */
		private void addTransNeGroupRthandler(CommonAlarm stdAlarm){
			//String int_id = o_eqp_int_id;
			String int_id = Util.getCRC32(this.joinKeyRthandler(o_eqp_object_class,o_eqp_int_id));

			this.findCacheByKeyRthandler(int_id, "tai_trans_negroup");

			if(o_object_class == 2012){
				//ONU-VIP属性
				int_id = Util.getCRC32("2012:ONU-VIP:-291816403:"+o_eqp_label);
				this.findCacheByKeyRthandler(int_id, "tai_trans_negroup");
			}

			//增加传输网“所属片区”进行派单
			//if(o_professional_type == "3" && o_special_field6 == "广州花都")
			//{
			//	o_region_id = "609737586";
			//	deleteDupMap.put("-546216138", null);
			//}
		}

		/**
		 * 添加动环网元组
		 * @param stdAlarm
		 */
		private void addPowerNeGroupRthandler(CommonAlarm stdAlarm){
			String int_id = o_eqp_int_id;
			this.findCacheByKeyRthandler(int_id, "tai_power_negroup");
		}

		/**
		 * 添加集客客户组
		 * @param stdAlarm
		 */
		private void addGcssClientGroupRthandler(CommonAlarm stdAlarm) {
			String circuit_id = o_gcss_client;
			this.findCacheByKeyRthandler(circuit_id, "tai_gcss_clientgroup");

		}

		/**
		 * 添加集中化组
		 * @param stdAlarm
		 */
		private void addCentralNeGroupRthandler(){
			if(o_corr_str.contains("从化")||o_business_area.contains("从化")||o_corr_str.contains("花都")||o_business_area.contains("花都")||o_corr_str.contains("番禺")||o_business_area.contains("番禺")||o_corr_str.contains("增城")||o_business_area.contains("增城"))
			{
				//传输
				if(o_professional_type=="3"&&o_eqp_object_class in ["2001","2008","2034","2009","2011","2012"] && o_severity_keycode in["25","26","27"])
				{
					deleteDupMap.put("-546216138", null);
				}
				//AP,AC
				if(o_professional_type=="2"&&o_object_class in ["1001","1002"])
				{
					deleteDupMap.put("-546216138", null);
				}
				//直放站
				if(o_professional_type=="1"&&o_object_class in ["11004"])
				{
					deleteDupMap.put("-546216138", null);
				}
				//bts-cell,nodeb-utrancell
				if(o_professional_type=="1"&&o_object_class in ["201","300","9201","9300"])
				{
					deleteDupMap.put("-546216138", null);
				}
				//lte
				if(o_object_class in ["8104","8105","41011","270"])
				{
					deleteDupMap.put("-546216138", null);
				}
			}

			if(o_corr_str.contains("福田")||o_business_area.contains("福田")||o_corr_str.contains("大鹏")||o_business_area.contains("大鹏")||o_corr_str.contains("坪山")||o_business_area.contains("坪山")||o_corr_str.contains("龙岗")||o_business_area.contains("龙岗")||o_corr_str.contains("光明")||o_business_area.contains("光明"))
			{
				//传输
				if(o_professional_type=="3"&&o_eqp_object_class in ["2001","2008","2034","2009","2011","2012"] && o_severity_keycode in["25","26","27"])
				{
					deleteDupMap.put("-889451795", null);
				}
				//AP,AC
				if(o_professional_type=="2"&&o_object_class in ["1001","1002"])
				{
					deleteDupMap.put("-889451795", null);
				}
				//直放站
				if(o_professional_type=="1"&&o_object_class in ["11004"])
				{
					deleteDupMap.put("-889451795", null);
				}
				//bts-cell,nodeb-utrancell
				if(o_professional_type=="1"&&o_object_class in ["201","300","9201","9300"])
				{
					deleteDupMap.put("-889451795", null);
				}
				//lte
				if(o_object_class in ["8104","8105","41011","270"])
				{
					deleteDupMap.put("-889451795", null);
				}
			}
		}

		/**
		 * 分组信息查询缓存使用
		 * @param circuit_id
		 * @param keyPre
		 */
		private void findCacheByKeyRthandler(String circuit_id,String keyPre) {
			if (StringUtils.isBlank(circuit_id)) {
				return;
			}
			String[] ids = circuit_id.split(",");
			for (String id : ids) {
				String key = keyPre+":" + id;
				//List list = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key, keyPre);
				List list = (List) util.getObject(this.CUSTOMCACHEHour, key, keyPre);
				if (list != null&& list.size() >0) {
					for (int i = 0; i < list.size(); i++) {
						Object[] objs = (Object[]) list.get(i);
						if (objs.length>0) {
							deleteDupMap.put(objs[1], null);
						}
					}
				}
			}
		}


		/**
		 * 需要后处理的信息
		 */
		private void setPostProcessorRthandler()
		{
			this.processPrapareBySubAlarmTypeRthandler();
			//this.setJikeStandardRthandler();

			//暂未接入资源
			//字典表数据为:1-国际 2-跨省 3-跨地市 4-地市内,资源表数据为:0-地市 1-省内 2-跨省 3-国际
			//if(o_service_crossdomain_type=="0"){
			//		o_service_crossdomain_type="4";
			//}else if(o_service_crossdomain_type=="1"){
			//		o_service_crossdomain_type="3";
			//}else if(o_service_crossdomain_type=="2"){
			//		o_service_crossdomain_type="2";
			//}else if(o_service_crossdomain_type=="3"){
			//		o_service_crossdomain_type="1";
			//}
		}

		/**
		 * 集客拟标准化
		 */
		private void setJikeStandardRthandler()
		{
			//集客+传输
			//集客AZ端上联口及拓扑对端口关联,sunyuqiu@20160523
			//取消SLA二次标准化  altered by lgy@20180510 required by wangyingfeng 需求：CMCC-GD-DRITXQ-20180322-007
			/*
			if(StringUtils.isNotBlank(o_gcss_service)&&o_professional_type == "3" && o_effect_service!="40")
			{

				//专业+厂家+设备类型+告警解释辅助字段 (professional_type vendor_id eqp_object_class mapping_type alarm_unit)
				String key = this.joinKeyRthandler("tfm_alarm_stand_info",o_professional_type,o_vendor_id,o_eqp_object_class,"集客",o_standard_alarm_name+"+"+o_effect_service);
				log.info(o_fp0+" conSLA key="+key);
				Object[] stand = util.getObject(this.ALARMSTANDARDCACHE, key,"gd.alarmStandard.31")
				List olist = stand==null?null:Arrays.asList(stand);
				if (olist != null&&!olist.isEmpty()) {
					//o_org_severity=Util.getTempV(olist, 2);
					//o_send_jt_flag=Util.getTempV(olist, 3);
					//o_logic_alarm_type=Util.getTempV(olist, 5);
					//o_logic_sub_alarm_type=Util.getTempV(olist, 6);
					//o_standard_alarm_name=Util.getTempV(olist,7);
					//o_standard_alarm_id=Util.getTempV(olist, 8);
					o_effect_ne=Util.getTempV(olist, 9);
					//o_effect_service=Util.getTempV(olist, 10);
					//o_alarm_value=Util.getTempV(olist, 11);
					//o_preprocess_manner=Util.getTempV(olist, 12);
					//o_province_process_flag=Util.getTempV(olist, 13);
					//o_department_process_flag=Util.getTempV(olist, 14);
				}
			}
			*/
			//传输告警上报集团,added by liucaiyong@20150812
			//增加数据网上报集团,updated by liucaiyong@20151229
			if(o_professional_type in ["2","3"]&&StringUtils.isNotBlank(o_standard_alarm_id)){
			//if(o_professional_type == "3"&&StringUtils.isNotBlank(o_standard_alarm_id)){
				String key="common_subalarm_define@"+o_professional_type+"@"+o_vendor_id+"@"+o_eqp_object_class+"@"+o_standard_alarm_id;
				Object[] stand = util.getObject(this.CUSTOMCACHE,key,"common_subalarm_define.5");
				List olist = stand==null?null:Arrays.asList(stand);
				if (olist != null&&!olist.isEmpty()) {
					o_send_jt_flag = "1";
					log.info(o_fp0+" con JT-CS key="+key);
				}
			}
			//二干告警上报新增上报逻辑,added by liucaiyong,required by luocheng@20160118
			if(o_severity_keycode == "41" && o_eqp_object_class in ["2001","2009"] && o_org_severity == "2"){
				o_send_jt_flag = "1";
			}
			if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"] && o_org_severity == "1"){
				o_send_jt_flag = "1";
			}
			//集客跨省专线告警上报,sunyuqiu@20160118
			// if(StringUtils.isNotBlank(o_circuit_no)){
			// 跨省集客专线衍生告警（集团工作）的补充需求：集客告警标志=1（集客跨省专线的集客告警）
			// if(StringUtils.isNotBlank(o_circuit_no) && o_redefine_severity == "1"){
			// 省部接口跨省集客专线告警上报逻辑调整（CMCC-GD-DRITXQ-20210519-004）：告警的“网元组ID”（group_id）字段不包含“集客省部接口抑制业务组”（group_id=252809044）,则上报集团
			if(StringUtils.isNotBlank(o_circuit_no) && o_redefine_severity == "1" && !o_group_id.contains("252809044")){
			  String[] cnos = o_circuit_no.split(",");
			  for(String cno:cnos){
				String skey="gd:circuit:level:"+cno;
				  Object[] sObjects = util.getObject(this.CUSTOMCACHE,skey,"gdCircuitLevel");
				  List olist = sObjects==null?null:Arrays.asList(sObjects);
				  if (olist != null&&!olist.isEmpty()) {
					  String svalue = Util.getTempV(olist, 5);
					  if(StringUtils.isNotBlank(svalue)){
						  o_send_jt_flag = "1";
						  log.info(o_fp0+" circuitno["+skey+"] get-value:"+svalue);
						  break;
					  }
				  }
			  }
			}

			this.transJTRthandler();
		}

		private void transJTRthandler(){//传输告上报集团范围，sunyuqiu@20161020
				if(o_professional_type != "3")
						return;
				//if(o_send_jt_flag == "1")
				//		return;

				String tmp = "1";
				if(o_vendor_id == "8"){//一、华为
					if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"] && o_title_text == "MUT_LOS" && !o_ne_label.contains("OLA") &&(o_ne_label.contains("OAU") || o_ne_label.contains("OBU") ||o_ne_label.contains("OPU"))){
						//1.	省内二干波分单点中断。
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]华为省干OTN单点中断";
					}else if(o_severity_keycode in ["41","25","26"] && o_object_level == "70601"  && o_eqp_object_class == "2009" && o_title_text in ["ETH_LOS","R_LOS","物理端口DOWN","ETH_LINK_DOWN"] && !o_group_id.contains("-303091744") && (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
						//2.PTN二干/城域汇聚层及以上单点/两点中断
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]华为PTN城域汇聚层单点中断";
					}else if(o_severity_keycode in ["41","25","26"]  && o_eqp_object_class in ["2008","2034"] && o_title_text in ["HARD_BAD","BD_STATUS","OA_LOW_GAIN","HARD_ERR","COMMUN_FAIL"] && (o_ne_label.contains("OAU") || o_ne_label.contains("OBU") ||o_ne_label.contains("OPU"))){
						//3.	光放板的严重硬件类告警
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]华为OTN设备光放板上报严重硬件类故障";
					}else if(o_eqp_object_class == "2001" && o_title_text == "R_LOS" && o_object_level == "70601" && o_severity_keycode in ["41","25","26"] && (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
						//4. SDH二干/城域汇聚层及以上单点/两点中断
												o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]华为SDH城域汇聚层单点中断";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_object_level == "70601" &&o_severity_keycode in ["41","25","26"] && o_title_text in ["ETH_LOS","R_LOS","物理端口DOWN","ETH_LINK_DOWN"] ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 1.单点中断类
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]华为PTN城域汇聚层承载LTE业务的L3层网元NNI口线路单点中断";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["HARD_BAD","BD_STATUS"] ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 2.网元硬件类告警
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]华为PTN城域汇聚层承载LTE业务的L3层网元设备硬件告警";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["POWER_FAIL","NO_BD_POWER"] ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 3.电源类告警
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]华为PTN城域汇聚层承载LTE业务的L3层网元电源类告警";
					}
				}else if(o_vendor_id == "7"){//二、中兴
					if(o_object_level == "70601" && o_eqp_object_class == "2009" && o_severity_keycode in ["41","25","26"] && o_title_text in ["SDH 端口 信号丢失(LOS)","以太网物理接口(ETPI) 信号丢失(LOS)","以太网物理接口(ETPI) Ethernet端口未连接"]&& !o_group_id.contains("-303091744") && (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
						//1.	PTN二干/城域汇聚层及以上单点/两点中断
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]中兴PTN城域汇聚层单点中断";
					}else if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"] && o_title_text in ["单板不在位告警","输出强光告警","输出光功率过弱告警","输入无光告警","输入弱光告警","模块失效或模块通讯故障告警","输出无光告警"] && (o_ne_label.contains("SEOBA")||o_ne_label.contains("EOBAS")||o_ne_label.contains("EONAD")||o_ne_label.contains("SSDMR")||o_ne_label.contains("SDMR")||o_ne_label.contains("EONAS")) ){
						//2.  光放板的严重硬件类告警
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]中兴OTN/WDM设备光放板上报严重硬件类故障";
					}else if(o_object_level == "70601" && o_eqp_object_class == "2001" && o_severity_keycode in ["41","25","26"] && o_title_text in ["信号丢失(LOS)","STM1光物理接口 信号丢失(LOS)","STM4光物理接口 信号丢失(LOS)","STM16光物理接口 信号丢失(LOS)","STM64光物理接口 信号丢失(LOS)"]&& (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
						//3.        SDH二干/城域汇聚层及以上单点/两点中断。
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]中兴SDH城域汇聚层单点中断";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_object_level == "70601" &&o_severity_keycode in ["41","25","26"] && o_title_text in ["SDH 端口 信号丢失(LOS)","以太网物理接口(ETPI) 信号丢失(LOS)","以太网物理接口(ETPI) Ethernet端口未连接"] ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 1.单点中断类
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]中兴PTN城域汇聚层承载LTE业务的L3层网元NNI口线路单点中断";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["单板脱位","单板运行不正常","关键芯片器件 芯片错误","关键芯片器件 交换转发芯片异常"] ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 2.网元硬件类告警
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]中兴PTN城域汇聚层承载LTE业务的L3层网元设备硬件告警";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["单板 保护电源无输入","单板 电源故障","单板 电源失效","电源故障","电源掉电","电源输入过压","电源输入欠压","电源输入电压越限"] ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 3.电源类告警
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]中兴PTN城域汇聚层承载LTE业务的L3层网元电源类告警";
					}
				}else if(o_vendor_id == "202"){//三、烽火
					if(o_severity_keycode == "41" && o_eqp_object_class == "2034" && o_title_text == "ILS" && (o_ne_label.contains("PA") || o_ne_label.contains("OA"))){
						//1.	省内二干波分单点中断。---------- ILS
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]烽火省干OTN单点中断";
					}else if(o_severity_keycode in ["25","26"] && o_eqp_object_class =="2009" && o_object_level == "70601" && o_title_text in ["RLOS","LINK_LOS"] && !o_group_id.contains("-303091744")&& (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
						//2. PTN二干/城域汇聚层及以上单点/两点中断
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]烽火PTN城域汇聚层单点中断";
					}else if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"] && o_title_text in ["FAIL","COMFAIL","GAIL_LOW","POWERALM"] && (o_ne_label.contains("PA") || o_ne_label.contains("OA"))){
						//3.	光放板的严重硬件类告警。--------------- FAIL
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]烽火OTN设备光放板上报严重硬件类故障";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_object_level == "70601" &&o_severity_keycode in ["41","25","26"] && o_title_text in ["RLOS","LINK_LOS"] ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 1.单点中断类
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]烽火PTN城域汇聚层承载LTE业务的L3层网元NNI口线路单点中断";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["FAIL","CARD_ABSENT"] ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 2.网元硬件类告警
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]烽火PTN城域汇聚层承载LTE业务的L3层网元设备硬件告警";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text in ["POWERALM","POWERINTERRUPTION"] ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 3.电源类告警
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生关联]烽火PTN城域汇聚层承载LTE业务的L3层网元电源类告警";
					}
				}else if(o_vendor_id in ["0","12"]){//四 、贝尔、阿尔卡特
					if(o_severity_keycode in ["25","26"] && o_eqp_object_class == "2009" && o_object_level == "70601" && o_title_text == "Loss Of Signal" && !o_group_id.contains("-303091744")&& (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
						//1.	PTN/城域汇聚层及以上单点/两点中断
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]阿卡PTN城域汇聚层单点中断";
					}else if(o_object_level == "70601" && o_eqp_object_class == "2001" && o_severity_keycode in ["41","25","26"] && o_title_text == "Loss Of Signal" && (o_special_field15.contains("省内")|| o_special_field15.contains("本地骨干")||o_special_field15.contains("本地汇聚"))){
						//2.        SDH/城域汇聚层及以上单点/两点中断
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]阿卡SDH城域汇聚层单点中断";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_object_level == "70601" &&o_severity_keycode in ["25","26"] && o_title_text == "Loss Of Signal" ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 1.单点中断类
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]阿卡PTN城域汇聚层承载LTE业务的L3层网元NNI口线路单点中断";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text == "Hardware failure" ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 2.网元硬件类告警
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生告警]阿卡PTN城域汇聚层承载LTE业务的L3层网元设备硬件告警";
					}else if(o_group_id.contains("-303091744") && o_eqp_object_class == "2009" && o_title_text == "Power Failure" ){
						//五、承载LTE业务的L3层PTN网元的NNI口线路中断 -- 3.电源类告警
						o_send_jt_flag = tmp;
						//o_standard_alarm_name = "[衍生关联]阿卡PTN城域汇聚层承载LTE业务的L3层网元电源类告警";
					}
				}

				if(o_send_jt_flag == tmp)
					log.info(o_fp0+" transJTRthandler ");
			}

		/**
		 * 家客逻辑,by liucaiyong@20160426
		 */
		private void setJiaKeRthandler(){
			if(o_eqp_object_class in ["2011","2012"])//过滤掉非OLT, ONU
			{
				String task;
				String jkey;
				Object[] objects;
				List plist;

				String extrainfo="";

				if(o_object_class=="2012"){//onu
					task="onu";
					jkey=this.joinKeyRthandler(task,o_int_id);
					objects = util.getObject(CUSTOMCACHE,jkey,task);
					plist = objects==null?null:Arrays.asList(objects);
					log.info(o_fp0+" jiake-onu-key:"+jkey);
					if(plist!=null&&!plist.isEmpty())
					{
						o_home_client_num=Util.getTempV(plist,5);//related_client_num
						String business_scene	=	Util.getTempV(plist,4);//business_scene
						if(StringUtils.isBlank(business_scene)){
							business_scene = "1";
						}
						//0（FTTB）-----201200（FTTB）/1（FTTH）------201201（FTTH）
						o_ne_sub_type = "20120"+business_scene;
						o_object_level 	= Util.getTempV(plist, 6);//site_grade  1:vip,2:非vip
						log.debug("onu-fp0={}, object_level={}", o_fp0, o_object_level);
						if(StringUtils.isNotBlank(o_object_level) && o_object_level =="1"){
							o_object_level = "6";
						}else{
							o_object_level = "5";//5:(ONU)非VIP,6:(ONU)VIP
						}
						log.info(o_fp0+" jiake-onu,ne_sub_type["+o_ne_sub_type+"],home_client_num["+o_home_client_num+"]");
						if(o_eqp_object_class=="2012"){//onu
							extrainfo="承载家宽用户数："+o_home_client_num;
						}
					}

					if(StringUtils.isBlank(o_ne_sub_type)){
						o_ne_sub_type = "201201";
					}
					//ONU-VIP
					if(o_group_id.contains("-291816403")){
						o_object_level = "6";
					}
					else
						o_object_level = "5";
				}
				if(o_eqp_object_class == "2012"){
					task="pon_cover";//Pon_cover_relation
					jkey=this.joinKeyRthandler(task,o_int_id);
					objects = util.getObject(CUSTOMCACHE,jkey,task);
					plist = objects==null?null:Arrays.asList(objects);
					if(plist!=null&&!plist.isEmpty()){
						o_ne_alias = Util.getTempV(plist,1);
					}
				}

				if(o_object_class=="2011"){//olt
					task="olt";
					jkey=this.joinKeyRthandler(task,o_int_id);
					objects = util.getObject(CUSTOMCACHE,jkey,task);
					plist = objects==null?null:Arrays.asList(objects);
					log.info(o_fp0+" jiake-olt-key:"+jkey);

					if(plist!=null&&!plist.isEmpty())
					{
						o_link_onu_num = Util.getTempV(plist,4);//related_onu_ftth_num+related_onu_fttb_num
						o_home_client_num = Util.getTempV(plist,5);//related_client_num

						String tmp = Util.getTempV(plist,6);//是否为双上行链路：is_double_uplink(0:双上行链路;1:单上行链路)
						tmp = tmp=="0"?"双上行链路\n":"单上行链路\n";
						extrainfo = "是否为双上行链路："+tmp;

						tmp = Util.getTempV(plist,7);//PON口数量：port_num
						if(StringUtils.isBlank(tmp)){
							tmp = "0";
						}
						extrainfo+="PON口数量："+tmp+"\n";

						tmp = Util.getTempV(plist,8);//小区数：related_cell_num
						//extrainfo+="小区数："+tmp;
						extrainfo+="覆盖小区数："+tmp+"\n承载家宽用户数："+o_home_client_num+"\n下带ONU数："+o_link_onu_num+"\n";

						//??? 每个PON口下挂ONU数量及用户数量
						log.info(o_fp0+" jiake-olt,link_onu_num["+o_link_onu_num+"],home_client_num["+o_home_client_num+"],txt["+extrainfo+"]");
					}
				}
				if(o_eqp_object_class=="2011"&&o_object_class=="706"){
					o_int_id = Util.getCRC32(this.joinKeyRthandler(o_object_class,o_extra_string1,o_eqp_label,o_ne_label));//OLT端口及板卡int_id算法调整
					task="ptp_pon";
					jkey=this.joinKeyRthandler(task,o_int_id);
					objects = util.getObject(CUSTOMCACHE,jkey,task);
					plist = objects==null?null:Arrays.asList(objects);
					log.info(o_fp0+" jiake-olt-ptp-key:"+jkey);

					if(plist!=null&&!plist.isEmpty())
					{
						o_link_onu_num = Util.getTempV(plist,3);//related_onu_ftth_num+related_onu_fttb_num
						o_home_client_num = Util.getTempV(plist,4);//related_client_num
						String tmp = Util.getTempV(plist,5);//related_cell_num
						//extrainfo+="小区数："+tmp;
						extrainfo+="覆盖小区数："+tmp+"\n承载家宽用户数："+o_home_client_num+"\n下带ONU数："+o_link_onu_num+"\n";
					}

				}else if(o_eqp_object_class=="2011"&&o_object_class=="10011"){
					o_int_id = Util.getCRC32(this.joinKeyRthandler(o_object_class,o_extra_string1,o_eqp_label,o_ne_label));//OLT端口及板卡int_id算法调整
					task="board_config_pon";
					jkey=this.joinKeyRthandler(task,o_int_id);
					objects = util.getObject(CUSTOMCACHE,jkey,task);
					plist = objects==null?null:Arrays.asList(objects);
					log.info(o_fp0+" jiake-olt-board-key:"+jkey);

					if(plist!=null&&!plist.isEmpty())
					{
						o_link_onu_num = Util.getTempV(plist,3);//related_onu_ftth_num+related_onu_fttb_num
						o_home_client_num = Util.getTempV(plist,4);//related_client_num
						String tmp = Util.getTempV(plist,5);//related_cell_num
						//extrainfo+="小区数："+tmp;
						extrainfo+="覆盖小区数："+tmp+"\n承载家宽用户数："+o_home_client_num+"\n下带ONU数："+o_link_onu_num+"\n";
					}
				}

				if(StringUtils.isNotBlank(o_gcss_client)){
					o_redefine_severity = "1";
					o_network_type_top = "6";
				}else if(StringUtils.isNotBlank(o_home_client_num)&&o_home_client_num!="0"){
					o_redefine_severity = "3";
					o_network_type_top = "6";
				}
				else{
					o_redefine_severity = "2";
					o_network_type_top = "4";
				}

				if(o_redefine_severity in ["1","3"]){
					extrainfo=o_eqp_object_class == "2011"?"\n设备类型：OLT\n"+extrainfo:"\n设备类型：ONU\n"+extrainfo;
					o_alarm_text+="\n"+extrainfo;
				}else if(StringUtils.isNotBlank(extrainfo)){
					o_alarm_text+="\n"+extrainfo;
				}

				//ONU增加物业小区代维
				if(o_eqp_object_class=="2012" && o_redefine_severity != "1"){
					objects = util.getObject(CUSTOMCACHE,"pon_cover:"+o_eqp_int_id,"pon_cover");
					plist = objects==null?null:Arrays.asList(objects);
					String dw;
					if(plist!=null&&!plist.isEmpty()){
						dw = Util.getTempV(plist,2);
						if(StringUtils.isNotBlank(dw)){
							if(StringUtils.isBlank(o_special_field18)){
								o_special_field18 =  "设备:"+dw+";";
							}else if(o_special_field18.startsWith("设备:")){
								o_special_field18 = "设备:"+dw+o_special_field18.substring(o_special_field18.indexOf(";"));
							}else{
								o_special_field18 = "设备:"+dw+ ";" + o_special_field18;
							}
						}
					}

					//小区名为空或小区名找不到则小区维护单位置空,luocheng@20160809
					if(StringUtils.isBlank(o_ne_alias)||StringUtils.isBlank(dw)){
						int pos = o_special_field18.indexOf("设备:");
						if(pos>=0){
							o_special_field18 = o_special_field18.replace(o_special_field18.substring(pos,o_special_field18.indexOf(";", pos)+1), "");
						}
					}
					log.info(o_fp0+" pon_cover-dw-18:"+o_special_field18);
				}
			}
		}

		/**
		 * 商宽业务标识和商宽用户数统计
		 */
		private void broadbandRthandler(){
		  // CMCC-GD-DRITXQ-20200612-006：关于新增获取ONU是否为“企宽”字段并根据该字段在OLT脱管告警信息中新增影响企宽用户数等功能需求
		  // OLT脱管告警：object_class=2011、sub_alarm_type=90、alarm_title_text not like '%[衍生告警]%'，因衍生告警是jfm之后的环节，暂未增加该条件
		  String tmp_ne_sub_type = "";
		  if (o_object_class == "2011" && o_sub_alarm_type == "90" && StringUtils.isNotBlank(o_idn)) {
			// String key = "olt:" + o_idn;
			// redis缓存外挂
			String extrainfo = "";
			// Object[] objects = (Object[]) rutil.getObject("olt:" + o_idn);
			Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "olt:" + o_idn, "olt_fdn");
			List objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				String tmp_num_commercial_user = Util.getTempV(objectsList, 14);
				String tmp_num_individual_user = Util.getTempV(objectsList, 15);
				extrainfo += "企宽用户数：" + tmp_num_commercial_user + "\n" + "个人宽带用户数：" + tmp_num_individual_user + "\n";
				o_alarm_text += extrainfo;

				if (tmp_num_commercial_user > "0") {
				  // ne_sub_type=21表示“商业宽带”
				  tmp_ne_sub_type = "21";
				}
				// log.info(o_fp0 + "，broadbandRthandler-num-user-info：" + extrainfo);
				}
		  }

			// PON LOS告警
		  if (o_eqp_object_class == "2011" && o_object_class == "706" && o_sub_alarm_type == "691" && StringUtils.isNotBlank(o_idn)) {
			// String key = "ptp_pon:" + o_idn;
			// redis缓存外挂
			String extrainfo = "";
			// Object[] objects = (Object[]) rutil.getObject("ptp_pon:" + o_idn);
			Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "ptp_pon:" + o_idn, "ptp_pon");
			List objectsList = objects == null ? null : Arrays.asList(objects);
			if(objectsList != null && !objectsList.isEmpty()) {
				String tmp_num_commercial_user = Util.getTempV(objectsList, 10);
				String tmp_num_individual_user = Util.getTempV(objectsList, 11);
				extrainfo += "企宽用户数：" + tmp_num_commercial_user + "\n" + "个人宽带用户数：" + tmp_num_individual_user + "\n";
				o_alarm_text += extrainfo;

				if (tmp_num_commercial_user > "0") {
				  // ne_sub_type=21表示“商业宽带”
				  tmp_ne_sub_type = "21";
				}
				// log.info(o_fp0 + "，broadbandRthandler-num-user-info：" + extrainfo);
				}
		  }
		  // tmp_ne_sub_type非空，即tmp_ne_sub_type判断为“商业宽带”赋值给ne_sub_type
		  if (StringUtils.isNotBlank(tmp_ne_sub_type)) {
			// 若告警同时为20：“和酒店”、21：“商业带宽”时，则标识告警为20：【和酒店】
			if (o_ne_sub_type == "20" && tmp_ne_sub_type == "21") {
			  o_ne_sub_type = "20";
			} else {
			  o_ne_sub_type = tmp_ne_sub_type;
			}
		  }
		}

	  /**
		 * 判断是否满足关联电路账号
		 */
		private boolean if_need_set_circuitRthandler()
		{
			boolean ret = false;
			if(o_object_class in ["201","300","9201","9300","8104","8105","41011","270"] && o_sub_alarm_type	==	"68"){
				ret=true;
			}else if(o_eqp_object_class in ["2011"]){
				ret=true;//OLT关联电路 by sunyuqiu edit by liucaiyong@20151222
			}else if(o_vendor_id in ["1","7","8","9"] && o_sub_alarm_type in ["973","975"] && o_object_class in ["8104","9201","41011"] ){
				ret=true;
			}else if(o_vendor_id=="4" && o_standard_alarm_name in ["iOMS与NodeB的连接中断","7650基站退服:S1接口连接失败"] && o_object_class in ["8104","41011"]){
				ret=true;
			}

			log.info(o_fp0+" if_need_set_circuitRthandler :"+ret+"/"+o_vendor_id+"/"+o_title_text+"/"+o_object_class);
			return(ret);
		}
		/**
		*产品号码
		*add by lgy@20180702 required by wangyingfeng
		*/
		private void setProductNoRthandler(){
			String task="";
			String tkey="";
			String tmp="";
			if(StringUtils.isNotBlank(o_gcss_client)&&StringUtils.isNotBlank(o_gcss_service)){
				String[] ServiceId=o_gcss_service.toString().split(",");
					for(String id:ServiceId){
							task= "nrmdb.service";
				tkey = "service:"+id;
				Object[] objects = util.getObject(CUSTOMCACHE, tkey,task);
							List list = objects==null?null:Arrays.asList(objects);
							if(list!=null&&!list.isEmpty())
							{
								tmp = Util.getTempV(list, 6);
								product_no = appendStrRthandler(product_no,tmp);
							}
					}
					log.info("fp0:"+o_fp0+" product_no:"+product_no);
				}
			}
		/**
		 * 其他业务处理
		 */
		private void otherRthandler()
		{
			this.setMoDuanRthandler();
		  //circuit_port_service();
		if(o_title_text == "VIP小区0流量告警" && o_org_severity=="2" ){
			//log.info(o_fp0+"  o_title_text["+o_title_text+"] o_alarm_text["+o_alarm_text+"]");
				def matcher_v0 = o_alarm_text=~/^(.*LTE流量. 小区流量损失值=)(\d+\.?\d*)(\D+.*$)/
				if(matcher_v0.size()>0){
					int text1 =Float.parseFloat(matcher_v0[0][2])*2
					o_alarm_text=matcher_v0[0][1] + text1+matcher_v0[0][3]
				}
				//log.info(o_fp0+" 处理后 o_title_text["+o_title_text+"] o_alarm_text["+o_alarm_text+"]");
			}
			//gsm/td/lte退服关联电路,sunyuqiu@20150401
			//OLT关联电路 by sunyuqiu edit by liucaiyong@20151222
			if(if_need_set_circuitRthandler())
			{
				String key;
				String task="circuit_ne_relation";
			if(o_object_class in ["201","9201","8104","41011"]){
				  key = joinKeyRthandler(task,(o_object_class == "41011" ? "8104" : o_object_class),o_int_id);
				}else if(o_object_class in ["300","9300","8105","270"]){
					//String eqpObj	=	o_eqp_object_class;
					String eqpObj	=	"8104";
					if(o_object_class == "300"){
						eqpObj = "201";
					}else if(o_object_class == "9300"){
						eqpObj = "9201";
					}
					key = joinKeyRthandler(task,eqpObj,o_ParentIntId);
				}else{//2011
					key = joinKeyRthandler(task,o_eqp_object_class,o_eqp_int_id);
				}

			//String circuitno="";//注意去重
				//int j=0;
				//String cids = "";
				// List results = util.getObject(this.CUSTOMCACHE,key,task);
				// if (results!=null && !results.isEmpty()) {
				// 	for (Object item : results) {
				// 		Object[] result = (Object[])item;
				// 		  if (result==null || result.length<1) {
				// 			  break;
				// 		  }
				// 		  List olist  =   Arrays.asList(result);
				// 		  String cid	=	Util.getTempV(olist,2);
				// 		  String cno	=	Util.getTempV(olist,3);
				// 		  String clev =   Util.getTempV(olist,4);

				List results = util.getObject(CUSTOMCACHE, key, task);
				int size = results==null?0:results.size();
				log.debug("fp0-{},key={},list.size={}",o_fp0,key,size);
				if (size>0) {
					String cid	=	Util.getTempV(results,2);
					String cno	=	Util.getTempV(results,3);
					String clev =   Util.getTempV(results,4);

						  //if(StringUtils.isNotBlank(cno)&&!circuitno.contains(cno)){//拼接电路编号
						  //    circuitno+=(j==0?"":",")+cno;
						  //     cids += (j==0?"":",")+cid;
						  //    j++;
						  //}
						  o_circuit_no  = appendStrRthandler(o_circuit_no,cno);
						  o_circuit_id  = appendStrRthandler(o_circuit_id,cid);

						  if(StringUtils.isNotBlank(clev)){
							  //int tlev=Integer.parseInt(clev);//比较电路级别
							  //if(level>tlev){
							  //	level=tlev;
								o_circuit_level = LevelCompareRthandler("circuit_level",clev,o_circuit_level);
								//}
							}

					//o_circuit_id = cids;
					//o_circuit_no	=	circuitno;
					//o_circuit_level	=	level==1000?"":level+"";
					log.info(o_fp0+" circuit---circuitno:"+o_circuit_no+" o_circuit_level:"+o_circuit_level);
				}
			}

			//增加传输网接入层下带高铁基站高铁小区的网元打上高铁标签（CMCC-GD-DRITXQ-20170302-012 ,sunyuqiu@20170414
			if(o_professional_type == "3" && o_severity_keycode == "27"&&o_eqp_object_class!="2011"&&o_eqp_object_class!="2012"){
			   String bnames="";
			   String tkey = "";
			   String task="circuit_area_relation";
				Circuit circuit = (Circuit) util.getObject(SimpleFindUtil.CIRCUIT_CACHE, new BigDecimal(o_eqp_int_id));
				String circuits = circuit==null?"":circuit.getCircuit_id();
				//log.info(o_fp0+" circuit-area_circuits:"+circuits);
				String[] cids = circuits.split(",");
				int k=0;
				for(String cid:cids){
					if(StringUtils.isBlank(cid))
						continue;
				   tkey =this.joinKeyRthandler(task,cid);
				   List results = util.getObject(this.CUSTOMCACHE,tkey,task);
							 if (results!=null && !results.isEmpty()) {
								for (Object item : results) {
									Object[] result = (Object[])item;
									if (result==null || result.length<1) {
										break;
									}
									List olist = Arrays.asList(result);
									String nid	=   Util.getTempV(olist,1);
									//log.info(o_fp0+" circuit-area_bid:"+nid);
									String bname = "";
									Map map = this.getObjectsValueWithMap(this.joinKeyRthandler("objects", nid), "objects");
									if(map.size()>0){
										bname = map.get("userlabel");
									}
									//log.info(o_fp0+" circuit-area_bname:"+bname);
									if(StringUtils.isNotBlank(bname) && !bnames.contains(bname)){
										if(k++>0)
											bnames+="、";
										bnames+=bname;
										log.info(o_fp0+" circuit-area:cricuit:"+cid+",int_id:"+nid+",bname:"+bname);
									}
								}
							}
				}
				if(StringUtils.isNotBlank(bnames)){
					o_ne_sub_type = "1";
					log.info(o_fp0+" circuit-area_relation:"+bnames);
				}
				o_alarm_text += "\n关联高铁基站:"+bnames;
			}

			//核心与传输跨专业关联 ,sunyuqiu@20170112
			if(o_sub_alarm_type in ["1000","1001","1002","1003"]){
				String task="port_circuit_core";
				//int j=0;
				List results = util.getObject(this.CUSTOMCACHE,this.joinKeyRthandler(task,o_int_id,o_object_class),task);
				//String circuitno="";//注意去重
				  if (results!=null && !results.isEmpty()) {
					  for (Object item : results) {
						  Object[] result = (Object[])item;
						  if (result==null || result.length<1) {
							  break;
						  }
						  List olist = Arrays.asList(result);
						  String cno	=   Util.getTempV(olist,0);
						  //if(StringUtils.isNotBlank(cno)&&!circuitno.contains(cno)){//拼接电路编号
						  //    if(circuitno.length()>254){
						  //        break;
						  //    }
						//
						  //    circuitno+=(j==0?"":",")+cno;
						  //    j++;
						  //}
						  o_circuit_no  = appendStrRthandler(o_circuit_no,cno);
					}
				}
				//if(circuitno.length()>254){
		//		    circuitno = circuitno.substring(0,254);
		//		}
		//		o_circuit_no	=	circuitno;
				//o_circuit_no = subStrLen(circuitno);
				log.info(o_fp0+" port_circuit_core["+o_circuit_no+"] by key "+this.joinKeyRthandler(task,o_int_id,o_object_class));
			}


			if(o_eqp_object_class == "2011"){//OLT告警与传输电路关联,sunyuqiu@20161011
				String ckey;
				String task="olt_res_ne";
				if(o_object_class == "706"){
					task="olt_res_port";
					ckey = this.joinKeyRthandler(task,o_int_id);
				}else
				  ckey = this.joinKeyRthandler(task,o_eqp_int_id);

			  //String circuitno="";//注意去重
				//int j=0;
				List results = util.getObject(this.CUSTOMCACHE,ckey,task);
				if (results!=null && !results.isEmpty()) {
					for (Object item : results) {
						Object[] result = (Object[])item;
				  if (result==null || result.length<1) {
					  break;
				  }
				  List olist = Arrays.asList(result);
				  String cno	=	Util.getTempV(olist,1);

				  //if(StringUtils.isNotBlank(cno)&&!circuitno.contains(cno)){//拼接电路编号
				  //    circuitno+=(j==0?"":",")+cno;
				  //    j++;
				  //}
				  o_circuit_no  = appendStrRthandler(o_circuit_no,cno);
					}
					//o_circuit_no = subStrLen(circuitno);
					log.info(o_fp0+" olt_res_relation:"+o_circuit_no+" by key "+ckey);
				}
			}

			//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
			//if ((o_object_class == "121" || o_object_class == "122"  ) && (o_omc_id == "121"))
			//{
			//	o_severity_keycode          =i_network_type;
			//}
			if ( (o_object_class == "2000") && (o_alarm_title == "0" ||  o_alarm_title == "-2" ))
			{
				o_standard_flag = "1";
			}
			//传输告警的预处理方式全部改成不需要预处理20131212 add by luocheng
			 if(o_professional_type=="3")
			{
				o_preprocess_manner = "4";
			}

			//BTS、NODEB告警工单增加“设备类型”
			if(o_object_class in ["201","9201"])
			{
				String myKey="";
				String strEqpType="";
				List myList;
				Object [] result;
				if(o_object_class == "201"){
					myKey = "myWixianBtssitemanager:"+o_int_id;
					result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationThree");
				}
				else if(o_object_class == "9201"){
					myKey = "myWixianNodeb:"+o_int_id;
					result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationFour");
				}

				if(result != null && result.length>0){
					  myList = result==null?null:Arrays.asList(result);
					  strEqpType = Util.getTempV(myList,3);
						//log.info(o_fp0+" bts's eqp_type ------int_id:"+o_int_id+",equ_type:"+strEqpType);
					  if(StringUtils.isNotBlank(strEqpType)){
						  strEqpType = "设备型号:"+strEqpType;
					  }
				  }
			 if(StringUtils.isNotBlank(strEqpType)){
					  o_alarm_text = o_alarm_text + "\n"+ strEqpType;
				  }
			  }

			//动环工程告警不上报 added by liucaiyong@20140228
			if(o_professional_type=="4" && o_send_jt_flag=="3")
			{
				log.debug(o_fp0+" send_jt_flag:"+o_send_jt_flag+",alarm_ne_status:"+o_alarm_ne_status+",alarm_resource_status:"+o_alarm_resource_status);
				if(o_alarm_ne_status in ["0","1"] || o_alarm_resource_status in ["0","1"])
				{
					log.debug(o_fp0+" send_jt_flag:"+o_send_jt_flag+",alarm_ne_status:"+o_alarm_ne_status+",alarm_resource_status:"+o_alarm_resource_status);
				}
				else
				{
					o_send_jt_flag="0";
				}
			}

			//退服告警不上报集团 added by liucaiyong@20140814
			//if(o_sub_alarm_type=="68" && o_send_jt_flag == "1")
			//{
			//	o_send_jt_flag="0";
			//}
			//退服告警上报判断标识为send_jt_flag=1;动环告警上报判断标识为send_jt_flag=1,added by liucaiyong@20150428
			if(o_send_jt_flag == "3"	||	o_sub_alarm_type=="68"){
				o_send_jt_flag = "1";
			}
			//电路编码后缀为"ZBZG"的电路上报，20170504
			if(o_circuit_no.contains("ZBZG")){
				o_send_jt_flag = "1";
			}

			//if(o_object_class=="11004")
			//{
			//	o_corr_str=o_business_area;
			//}

			//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
			//MIQ网络类型调整,updated by shichao@2014051618
			//if(o_sub_alarm_type=="970")
			//{
				//同一调整为“信令系统”,updated by shichao@20140606
			//	o_severity_keycode = "5290";
			//}

			//话音网告警存机房 added by shanchunlan@20140516
			setSiteTypeRthandler();

			//阿尔卡特告警网元归属站点信息获取 added by sunyuqiu@20140520
			//传送网机房名称与局站名称获取 altered by lgy@20180517 required by wangyingfeng 需求：CMCC-GD-DRITXQ-20180112-008
			if(o_professional_type=="3")
			{
				String intKey="";
				String roomId="";
				Object[] objects;
				String t_building="";

				if(o_eqp_object_class=="2012")//onu
				{
						intKey = "onu:"+o_eqp_int_id;
					  objects = (Object[])util.getObject(SimpleFindUtil.CUSTOM_CACHE,intKey,"onu");
					  if(objects != null){
						  roomId=objects[3];
					  }
				}
				else
				{
						// intKey = "objects_trans:" + o_eqp_int_id;
						intKey = "objects_trans_fdn_id:" + o_eqp_int_id;
						// objects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, intKey,"objects_trans");
						objects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, intKey,"objects_trans_fdn_id");
						if(objects != null){
						  roomId=objects[18];
					  }
				}


				if(StringUtils.isNotBlank(roomId))
				{
					intKey=joinKeyRthandler("machinery_room", roomId);
					 objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, intKey,"machinery_room");
							if(objects != null){
								o_special_field22=objects[1];
							t_building=objects[5];
							}
				}
				if(t_building!=null&&!t_building.isEmpty()){
					intKey=joinKeyRthandler("building", t_building);
			  Object[] building = util.getObject(CUSTOMCACHE, intKey,"building");
			  List buildinglist = building==null?null:Arrays.asList(building);
			  if(buildinglist!=null&&!buildinglist.isEmpty()){
				  o_special_field19 = Util.getTempV(buildinglist,1);
				  }
					}
				log.debug(o_fp0+" 局站名称:"+o_special_field19+" 机房名称:"+o_special_field22);
			}


			if( o_professional_type =="3" && o_special_field15 != "" && o_object_class in ["706"]){
			 if(o_special_field15 == "对端网络类型=本地骨干;"){
				 o_type_keycode="25";
			 }else if(o_special_field15 == "对端网络类型=本地汇聚;"){
				 o_type_keycode="26";
			 }else if(o_special_field15 == "对端网络类型=本地接入;"){
				 o_type_keycode="27";
			 }else if(o_special_field15 == "对端网络类型=省内;"){
				 o_type_keycode="41";
			 }else if(o_special_field15 == ""){
				 o_type_keycode="0";
			 }
		}

		//lgy@20181213,传输未标准化告警不上报集团

			if(o_severity_keycode=="41"&&o_professional_type =="3"&&o_standard_flag!="2"){
					o_send_jt_flag = "0";
					o_org_severity = "4";
			}

		//OLT告警，告警细分类型为脱管，OLT脱管场景一 by yjb@20190214
		if (o_object_class == "2011" && o_sub_alarm_type == "90") {
			String task = "olt";
			String oltKey = this.joinKeyRthandler(task, o_int_id);

			Object[] objects = util.getObject(CUSTOMCACHE, oltKey, task);
			List oltList = objects == null ? null : Arrays.asList(objects);
			if (oltList != null && !oltList.isEmpty()) {
				o_hotel_flag = Util.getTempV(oltList, 10);
				log.info("OLT脱管，o_object_class=" + o_object_class + " o_sub_alarm_type=" + o_sub_alarm_type + " o_fp0=" + o_fp0 + " o_hotel_flag=" + o_hotel_flag);
				//o_hotel_flag == "1"，存储OLT脱管场景一
				if (o_hotel_flag == "1") {
					o_ne_sub_type = "20";
					log.info("OLT脱管，o_object_class=" + o_object_class + " o_sub_alarm_type=" + o_sub_alarm_type + " o_fp0=" + o_fp0 + " o_ne_sub_type=" + o_ne_sub_type);
				}
			}
		}

			// 路由器、端口、交换机告警赋值物理设备类型ne_sub_type
			if (o_object_class in ["900", "905"] || (o_object_class == "706" && o_eqp_object_class == "900")) {
			  if (o_object_class in ["900", "905"]) {
				// redis缓存外挂
				// Object[] objects = (Object[]) rutil.getObject("router_lpad_ne_sub_type:" + o_int_id);
				Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "router_lpad_ne_sub_type:" + o_int_id, "router_lpad_ne_sub_type");
				List objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					o_ne_sub_type = Util.getTempV(objectsList, 1); // lpad_ne_sub_type
					// log.info("o_fp0=" + o_fp0 + " o_ne_sub_type=" + o_ne_sub_type);
					}
			  } else if (o_object_class == "706" && o_eqp_object_class == "900") {
				// redis缓存外挂
				// Object[] objects = (Object[]) rutil.getObject("router_lpad_ne_sub_type:" + o_eqp_int_id);
				Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "router_lpad_ne_sub_type:" + o_eqp_int_id, "router_lpad_ne_sub_type");
				List objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					o_ne_sub_type = Util.getTempV(objectsList, 1); // lpad_ne_sub_type
					// log.info("o_fp0=" + o_fp0 + " o_ne_sub_type=" + o_ne_sub_type);
					}
			  }
			}

			// CMCC-GD-DRITXQ-20210122-004_家集客综合运维支撑系统需求调整实时告警接口的过滤规则
			if (o_network_type == "2002") {
				String key = "objects_it_related_system:" + o_int_id;
				// redis缓存外挂
				// Object[] objects = (Object[]) rutil.getObject(key);
				Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "objects_it_related_system");
				List objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
						o_business_type = Util.getTempV(objectsList, 1);
						}
			}

			if (o_network_type == "500") {
			  // 动环告警网元状态字段映射逻辑优化（CMCC-GD-DRITXQ-20210408-010）：动力机房special_field11带有TEST或test或者设备编码special_field13带有TEST或test
			  if (o_special_field11.contains("TEST") || o_special_field11.contains("test")) {
				def matcher = o_special_field11 =~ /^(.*)TEST|test$/;
				if(matcher.size()>0){
				  // redis缓存外挂
				  // Object[] objects = (Object[]) rutil.getObject("machinery_room_power_name:" + matcher[0][1]);
				  Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "machinery_room_power_name:" + matcher[0][1], "machinery_room_power_name");
				  List objectsList = objects == null ? null : Arrays.asList(objects);
				  if(objectsList != null && !objectsList.isEmpty()) {
					  o_resource_status = Util.getTempV(objectsList, 1); // confirmed
					  o_ne_status       = Util.getTempV(objectsList, 1); // confirmed
					  log.info("machinery_room_power_name-fp0{}, resource_status={}, ne_status={}, power_name={}", o_fp0, o_resource_status ,o_ne_status, matcher[0][1]);
					  } else {
						  // 动环告警切换到统一采集后，因模型和128、129模型不同，设置默认值3：工程实施状态(无业务)
						  o_resource_status = "3";
						  o_ne_status       = "3";
						}
				}
			  } else if (o_special_field13.contains("TEST") || o_special_field13.contains("test")) {
				// redis缓存外挂
				// Object[] objects = (Object[]) rutil.getObject("machinery_room_power_name:" + o_special_field11);
				Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "machinery_room_power_name:" + o_special_field11, "machinery_room_power_name");
				List objectsList = objects == null ? null : Arrays.asList(objects);
				if(objectsList != null && !objectsList.isEmpty()) {
					o_resource_status = Util.getTempV(objectsList, 1); // confirmed
					o_ne_status       = Util.getTempV(objectsList, 1); // confirmed
					log.info("machinery_room_power_name-fp0{}, resource_status={}, ne_status={}, power_name={}", o_fp0, o_resource_status ,o_ne_status, o_special_field11);
					} else {
					  // 动环告警切换到统一采集后，因模型和128、129模型不同，设置默认值3：工程实施状态(无业务)
					  o_resource_status = "3";
					  o_ne_status       = "3";
					}
			  } else {
				  // 动环告警切换到统一采集后，因模型和128、129模型不同，设置默认值1：现网状态(有业务)
				  o_resource_status = "1";
				  o_ne_status       = "1";
				}
			}

		//if(o_org_type =="2" && o_title_text in ["重点业务TCP建立连接成功率低（5分钟）","重点业务HTTP请求响应成功率低（5分钟）"]
		//                && o_vendor_id == "150" ){
		//    o_ne_label = o_locate_info;
		//    log.info(o_fp0+" set o_ne_label->"+o_ne_label);
		//}

			this.findImportandNodeRthandler();
			this.brasRthandler();
			this.endRthandler();
		}

		private void setSiteTypeRthandler(){
			Object[] objects;
			//if(o_professional_type!="1")
			if(o_professional_type in ["3","4"])
			  return;

			//话音网告警存机房 added by shanchunlan@20140516
			if(o_sub_alarm_type in ["531","532"] && (o_object_class in ["201","9201","8104","41011"]|| o_vendor_id == "1038")){
			  if( o_sub_alarm_type =="531"){
				o_special_field9="市电告警时间为 "+o_event_time+",未获取到电池续航时长,请检查资源配置。"
			  }else{
				o_special_field9="低压告警时间为 "+o_event_time+",未获取到电池续航时长,请检查资源配置。"
			  }
			}

		String roomid;
		String intKey=joinKeyRthandler("objects", o_int_id);
		Map map = this.getObjectsValueWithMapRthandler(intKey,"objects");

		roomid=map.get("machroom_id");
		// CMCC-GD-DRITXQ-20171115-002  OLT停电隐患衍生告警，liucaiyong@20171228
		if(o_vendor_id=="1038"){//铁塔告警
		  roomid = o_site_no;
		  intKey=joinKeyRthandler("building_to_olt_count", o_int_id);
		  objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,intKey,"building_to_olt_count");
		  if(objects != null){
			  o_site_info ="1";
		  }
		  else{
			o_site_info ="2";
		  }
		  log.info(o_fp0+" site_info:"+o_site_info);
		}
		if(StringUtils.isBlank(roomid)){
		  return;
		}

		String buildingid="";
		intKey=joinKeyRthandler("machinery_room", roomid);
		objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,intKey,"machinery_room");
		if(objects != null){
		  o_special_field22=objects[1];
		  buildingid=objects[5];
			 // log.info(o_fp0+" buildingid:"+buildingid);
		  if(o_sub_alarm_type in ["531","532"] && (o_object_class in ["201","9201","8104","41011"]||o_vendor_id == "1038")){
			//市电告警预处理增加电池续航时间,added by sunyuqiu@20141217,依赖nrmdb.machinery_room->battery_life
			//低压告警预处理增加电池续航时间,added by shanchunlan@20150420
			//o_special_field9  =  objects[6]+"";
			if(objects[6] != "" && objects[6] != null){
			  //double i_life = objects[6];
			  String s_o6=objects[6];
			  float i_life = Float.parseFloat(s_o6);
			  int p_hours = i_life*1000;
			  Date evt = new Date();
			  long evt_t=getDateRthandler(o_event_time).getTime()+60*60*p_hours;
			  evt.setTime(evt_t);
			  //log.info(o_fp0+" s_o6 "+getStrfromDateRthandler(evt))
			  if( o_sub_alarm_type =="531"){
				o_special_field9="市电告警时间为 "+o_event_time+",电池续航能力为"+i_life+"小时,预计断电时间为 "+getStrfromDateRthandler(evt)+"。"
			  }else{
				evt_t=getDateRthandler(o_event_time).getTime()+60*60*p_hours/6;
				evt.setTime(evt_t);
				o_special_field9="低压告警时间为 "+o_event_time+",电池续航能力为"+i_life+"小时,预计断电时间为 "+getStrfromDateRthandler(evt)+"。"
			  }
			  //log.info(o_fp0+" s_o6 "+getStrfromDateRthandler(evt)+" 9:"+ o_special_field9)
			 }
			 //关于实现对基站市电告警特殊处理需求，added by shanchunlan@20160318
			//if(o_sub_alarm_type  ==  "531"){
			//OLT停电隐患告警变动，altered by lgy@20180403
			//增加低压类告警的共站机房属性赋值， altered by  lgy@20180831
					if((o_sub_alarm_type  ==  "531" || o_sub_alarm_type  ==  "532") && o_vendor_id != "1038"){
			  o_site_info =  objects[7]+"";
			  if(o_site_info=="1"){
				String i_olt = getColmnStrgFromCacheRthandler(roomid);
				if(i_olt !=""){
					o_special_field9 +="共站的OLT名称:"+i_olt;
				}
			  }
			}
			else if(o_vendor_id == "1038"&&(o_sub_alarm_type  ==  "531" || o_sub_alarm_type  ==  "532" )){
			  if(o_site_info=="1"){
				String i_olt = getColmnStrgFromCacheRthandler(roomid);
				if(i_olt !=""){
					o_special_field9 +="共站的OLT名称:"+i_olt;
					log.info(o_fp0+" get o_site_info:"+o_site_info+",special_field9:"+o_special_field9);
							}
						}
				   }
				}
			}


		//基站告警站点产权单位标识 20150722 shanchulan
		//获取局站名称范围调整为话音网 altered by lgy@20180517 required by wangyingfeng 需求：CMCC-GD-DRITXQ-20180112-008
		intKey=joinKeyRthandler("building", buildingid);
		Object[] building = util.getObject(CUSTOMCACHE, intKey,"building");
		List buildinglist = building==null?null:Arrays.asList(building);
		if(buildinglist!=null&&!buildinglist.isEmpty()){
				o_special_field19 = Util.getTempV(buildinglist,1);
				if(o_object_class in ["201","300","9201","9300","8104","8105","41011","270"]|| o_vendor_id == "1038"){
			  //无线告警关联站点并推送EOMS，by liaoxia@20170821
					o_site_type=Util.getTempV(buildinglist,5);
				}
				if(o_object_class in ["201","8104","41011"]){//关于干扰场景下受扰区域的特征批量告警开发的需求,required by sunyuqiu,lcy@20190322
					o_township = Util.getTempV(buildinglist,6);
					log.info(o_fp0+" township:"+o_township);
				}
			}
			log.info(o_fp0+" get o_site_type:"+o_site_type+",special_field19:"+o_special_field19);
	  }

		//BRAS（BNG）告警增加下带OLT、ONU、家客用户数等信息，wangguanheng@20170419
		//增加板卡关联，liucaiyong@20170621 ,asyned by wangyingfeng
	  private void brasRthandler(){
			if(o_professional_type  !=  "2"){
				return;
			}
			if(!(o_eqp_object_class  in ["900","66003","66029"])){
				return;
			}
			if(!o_eqp_label.contains("BRAS")&& !o_eqp_label.contains("BNG")){
				return;
			}
			//log.info(o_fp0+" res-begin:eqp:"+o_eqp_object_class+":"+o_eqp_int_id+",obj--"+o_object_class+":"+o_int_id);

			Map oltmap = new HashMap();
			String[] ids;
			String task = "res_olt";
			String tkey;
			if(o_object_class == "706"){
				 ids = [o_int_id];
			}else if(o_object_class == "10011"){
				if(StringUtils.isBlank(o_special_field5)){
					return;
				}
				ids = o_special_field5.split(",");
			}else{
			   ids = [o_eqp_int_id];
			}

		   List results;
		   for(String sid:ids){
				tkey = this.joinKeyRthandler(task,sid);
				results  = util.getObject(this.CUSTOMCACHE,tkey,task);
					if (results!=null && !results.isEmpty()) { //直连OLT
					  for (Object item : results) {
						  Object[] result = (Object[])item;
						  if (result==null || result.length<1) {
							  break;
						  }
						  List olist = Arrays.asList(result);
						  String olt	=   Util.getTempV(olist,1);
						 oltmap.put(olt,1);
						 //log.info(o_fp0+" res_olt["+tkey+"] get olt:"+olt);
					  }
					}
					if(oltmap.size()==0){//SW-OLT
					task = "res_sw_olt";
					tkey = this.joinKeyRthandler(task,sid);
				Map swmap = new HashMap();
			   results = util.getObject(this.CUSTOMCACHE,tkey,task);
					if (results!=null && !results.isEmpty()) {
					  for (Object item : results) {
						  Object[] result = (Object[])item;
						  if (result==null || result.length<1) {
							  break;
						  }
						  List olist = Arrays.asList(result);
						  String olt	=   Util.getTempV(olist,1);
						  swmap.put(olt,1);
						  //log.info(o_fp0+" res_olt["+tkey+"] get sw:"+olt);
					  }
					}
					Iterator itw = swmap.keySet().iterator();
					task = "res_sw_olt";
					while(itw.hasNext())
					{
					   String swd = itw.next();
					   tkey = this.joinKeyRthandler(task,swd);
					   results = util.getObject(this.CUSTOMCACHE,tkey,task);
						if (results!=null && !results.isEmpty()) {
						  for (Object item : results) {
							  Object[] result = (Object[])item;
							  if (result==null || result.length<1) {
								  break;
							  }
							  List olist = Arrays.asList(result);
							  String olt	=   Util.getTempV(olist,1);
							  oltmap.put(olt,1);
							  //log.info(o_fp0+" res_sw["+tkey+"] get olt:"+olt);
						  }
						}
					}
					swmap.clear();
				}
		 }

				int olts=0;
				int onus=0;
				int homes=0;

				String info="";
				String tmp="";
				int itmp=0;
				Iterator itt = oltmap.keySet().iterator();
				while(itt.hasNext())
				{
				   String oltid = itt.next();

				   // Object[]  objects  = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler("objects_trans",oltid),"objects_trans");
				   Object[]  objects  = (Object[]) util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler("objects_trans_fdn_id",oltid),"objects_trans_fdn_id");
				   List  olist= objects == null ? null : Arrays.asList(objects);
					if (olist != null && !olist.isEmpty()) {
						tmp = Util.getTempV(olist,5);
						//log.info(o_fp0+" res_olt-label["+joinKeyRthandler("objects_trans",oltid)+"] get olt:"+tmp);
					}
					if(StringUtils.isBlank(tmp)){
							continue;
					 }
				   String strolt = tmp + "：";

					objects  = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE, joinKeyRthandler("olt",oltid),"olt");
					olist = objects == null ? null : Arrays.asList(objects);
					if (olist != null && !olist.isEmpty()) {
						tmp = Util.getTempV(olist,4);//related_onu_ftth_num+related_onu_fttb_num
						if(StringUtils.isNotBlank(tmp)){
							itmp = Integer.parseInt(tmp);
							onus+=itmp;
						}
						strolt+="   "+itmp+"个";
						  tmp = Util.getTempV(olist,5);//related_client_num
						  if(StringUtils.isNotBlank(tmp)){
							itmp = Integer.parseInt(tmp);
							homes+=itmp;
						}
						strolt+="    ||  "+itmp+"户；";
					}else{
						strolt+="   0个    ||   0户；";
					}

					//log.info(o_fp0+" res_olt-info["+oltid+"] get olt-info:"+strolt);
					if(olts++<10){
						info += "\n" + olts + "、" +strolt;
					}
				}
				oltmap.clear();
				info =   "下带OLT "+olts+"个，ONU "+onus+"个，家客用户"+homes+"户，具体信息如下：\nOLT名称：    下带ONU数   ||  承载家客用户数" +info;
				if(o_object_class == "706"){
					 info = "\n\n端口"+info;
				}else if(o_object_class == "10011"){
					 info = "\n\n板卡"+info;
				}else{
					info = "\n\n设备"+info;
				}

				if(olts>10){
					info+="\n....";
				}

				//log.info(o_fp0+" res-info:"+info);
				o_link_onu_num = onus+"";
				o_home_client_num = homes+"";
				o_alarm_text += info;
		}


		/**
		 * 需要最后处理的逻辑
		 */
		private void endRthandler()
		{
			//lgy@20190116,解决彩铃告警的corr_str字段过长
		if(o_eqp_object_class=="140"){
				o_corr_str="";
		}
		  //电路级别
		if(StringUtils.isNotBlank(o_circuit_no)){
		  String[] circuits = o_circuit_no.split(",");
		  for (String circuit : circuits){
			String queryKey = circuit.trim();
			if(StringUtils.isBlank(queryKey))
				continue;

				queryKey = "gd:circuit:level:" + queryKey;
			Object[] result = util.getObject(this.CUSTOMCACHE,queryKey,"gdCircuitLevel");
			if (result!=null && result.length>0) {
			  o_circuit_level = LevelCompareRthandler("circuit_level",Util.getTempV(Arrays.asList(result), 0),o_circuit_level);
			}
		  }
		  }

		  //集客告警上报,暂时用电路级别填充跨域,added by liucaiyong@20150721
		  if(StringUtils.isNotBlank(o_gcss_client)&&StringUtils.isNotBlank(o_circuit_level)){
			  o_service_crossdomain_type = o_circuit_level;
		  }

		  //集客告警上报(省级),added by liucaiyong@20150721
		  // 跨省集客专线衍生告警（集团工作）的补充需求：集客告警标志=1（集客跨省专线的集客告警）
		  // if(o_service_crossdomain_type in ["1","2"]){
			// if(o_service_crossdomain_type in ["1","2"] && o_redefine_severity == "1"){
			// 省部接口跨省集客专线告警上报逻辑调整（CMCC-GD-DRITXQ-20210519-004）：告警的“网元组ID”（group_id）字段不包含“集客省部接口抑制业务组”（group_id=252809044）,则上报集团
			if(o_service_crossdomain_type in ["1","2"] && o_redefine_severity == "1" && !o_group_id.contains("252809044")){
			  o_send_jt_flag = "1";
		  }

			this.processWNMSRealRthandler();

			//爱立信外告修改涉及的规则（CMCC-GD-DRITXQ-20170911-006）,20171020 by sunyuqiu
			if(o_vendor_id == "1" && o_title_text == "RADIO X-CEIVER ADMINISTRATION BTS EXTERNAL FAULT" && o_alarm_text.contains("AC ABNORMAL")){
			  o_probable_cause = "1";
			}
			//爱立信外告修改涉及的规则（CMCC-GD-DRITXQ-20171027-001）,20171220 by wangyingfeng
			if(o_vendor_id == "1" && o_title_text == "RADIO X-CEIVER ADMINISTRATION BTS EXTERNAL FAULT"){
			  if(o_alarm_text.contains("OUTPUT VOLTS LOW")){
				o_extra_id1 = "1";
			  }else{
				o_extra_id1 = "0";
			  }
			}

			if(o_sub_alarm_type=="967" || o_alarm_title in ["28864770","28864769"]){//解决地市关注事件影响标准化率,liucaiyong@20170315
				o_standard_flag = "2";
				if(StringUtils.isBlank(o_standard_alarm_name)){
					o_standard_alarm_name = o_title_text;
				}
			}

			//MIQ性能告警调整厂家
			//if(o_sub_alarm_type=="970")
			//{
			//	o_vendor_id = "956";
			//	o_vendor_name = "MIQ系统";
			//}

			//网络类型调整（仅保留传输及动环） shanchunlan,liu
			//if (o_object_class=='121' || o_object_class=='122' ||o_object_class=='909' || o_object_class=='124' ) //909已经退网
			//if(StringUtils.isBlank(o_severity_keycode)&&(o_object_class=='121' || o_object_class=='122' || o_object_class=='124'))
			//{
			//	o_severity_keycode ='13';
			//}
			//
			////LTE数据网 网络类型调整 (shanchunlan@20140314)
			//if(StringUtils.isBlank(o_severity_keycode)&&o_object_class in ["8101","8102","8103","8106","8108"])
			//{
			//	o_severity_keycode ='5273';
			//}
			//
			//if(o_object_class in ["124"])
			//{
			//	//124 判断LTE-CG
			//	String cgKey=joinKeyRthandler("objects", o_int_id);
			//	Map map = this.getObjectsValueWithMap(cgKey,"objects");
			//	if(map.size()>0)
			//	{
			//		String cgNetwork=map.get("network_type");
			//		if(cgNetwork == "7")
			//		{
			//			o_severity_keycode ='5273';
			//		}
			//	}
			//}

			//add by linzongji at 2011-11-07
				//def sqlStr;
			String ykey = "prealarmproject@"+o_ne_label;

			Object[] ppro = util.getObject(CUSTOMCACHE, ykey,"nrmdb.Prealarmproject");
			List plist = ppro==null?null:Arrays.asList(ppro);
			if(plist!=null&&!plist.isEmpty())
			{
				o_special_field14=Util.getTempV(plist,0);
			}
			else
			{
				o_special_field14="";
			}
			if (o_vendor_severity != null && o_vendor_severity!="0" && o_vendor_severity!="")
			{
				//sql = "select id from tia_alarm_dict  where type=101016 and  txt= '" + o_vendor_severity+"'";
				//list = Util.queryByHSql(sql);
				//String key = this.joinKeyRthandler("tia_alarm_dict", "101016",o_vendor_severity);
				String key = "tia_alarm_dict@101016@"+o_vendor_severity;
				Object[] dict = util.getObject(CUSTOMCACHE, key,"tia_alarm_dict.0");
				if(dict!=null)
				{
					o_extra_string3 = dict[0];
				}
			}
			else {
				o_extra_string3 = '1';
			}

			if(o_org_type != "2" && o_vendor_id=="1" && o_object_class =="122" && o_omc_id=="121" && o_probable_cause_txt!="" && o_probable_cause_txt!=null){
				o_title_text = o_probable_cause_txt;
			}
			if(o_vendor_id == "9014"){//shichao@20161219,安全事件
				o_gcss_client_level = o_special_field10;
			}
			o_special_field10="";
			if(o_object_class =="200" ||o_object_class =="9200"||o_object_class =="130"||o_object_class =="131"){
					String relKey = this.joinKeyRthandler("objects_relation", o_int_id, o_object_class);
					Object[] relation = util.getObject(CUSTOMCACHE, relKey,"objects_relation");
					//String relKey = this.joinKeyRthandler("cm_objects_relation", o_int_id);
					//Object[] relation = util.getObject(CUSTOMCACHE, relKey,"cm_objects_relation");
					List relList = relation==null?null:Arrays.asList(relation);
					if(relList!=null&&!relList.isEmpty())
					{
						Object[] result = (Object[]) relList.get(0);
						List olist = Arrays.asList(result);
						//o_special_field10=Util.getTempV(relList,0);
						o_special_field10=Util.getTempV(olist,4);
					}
			}
			 //MME的告警增加归属POOL信息 fw add @20160518
			if(o_object_class in ["8101"] && o_eqp_object_class in ["8101"] && StringUtils.isNotBlank(o_eqp_int_id) ){
				String queryKey  = "objects_relation:"+o_eqp_int_id+":8101";
				List results = (List)util.getObject(this.CUSTOMCACHE,queryKey,"objects_relation");
				if (results!=null && !results.isEmpty()) {
					for (Object item : results) {
					Object[] result = (Object[])item;
					List olist = Arrays.asList(result);
					o_special_field10  = Util.getTempV(olist, 4);
					}
				}
			}
			if(o_object_class =="121" ||o_object_class =="122"){
				o_extra_id3="14";
			}

			//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
			/*客户侧设备网络类型默认为客户侧设备*/
			//if(o_professional_type == "99")
			//{
			//	o_severity_keycode="5272";
			//}

			/*GZUMG02和GZIMGW101的工单判重逻辑：告警标准名+网元名+告警对象。告警对象采用关联集客的关键信息*/
			if(o_ne_label == "GZUMG02" || o_ne_label=="GZIMGW101")
			{
				o_alarm_unit = o_special_field20;
			}

			//GPON集客增加光路信息
			String asstype="";
			String optinfo="";//光路信息
			if(StringUtils.isNotBlank(o_gcss_service)&&( o_object_class=="2012" || o_object_class=="2011"))
			{
				int iopt=0;//光路统计
				String[] services = o_gcss_service.split(",");
			for(int i = 0; i < services.length; i++) {
				String serviceid=services[i];
				String relkey = this.joinKeyRthandler("service", serviceid);
					Object[] relation = util.getObject(CUSTOMCACHE, relkey,"nrmdb.service");
					List relList = relation==null?null:Arrays.asList(relation);
					if(relList!=null&&!relList.isEmpty())
					{
						String tmp=Util.getTempV(relList,4);
						if(StringUtils.isNotBlank(tmp))
						{
							optinfo="光路名称="+tmp;
							iopt++;
						}
						tmp=Util.getTempV(relList,5);
						if(StringUtils.isNotBlank(tmp))
						{
							asstype=tmp;
						}
					}
			}
			if(services.length>0)
			{
				if(StringUtils.isNotBlank(asstype))
				{
					o_attachment = asstype;
				}
				optinfo+="\n总共"+services.length+"条专线,关联光路"+iopt+"条";
			}
			else
			{
				optinfo="未关联到专线";
			}
			if(StringUtils.isNotBlank(optinfo))
				o_alarm_text+="\n"+optinfo;
			}


			//special_field9 追加到告警正文,update by liucaiyong ,required by luocheng @20140711
			if(o_professional_type == "3"&&!o_title_text.contains("关注事件"))
			{
				if(StringUtils.isNotBlank(o_special_field9))
				{
					o_alarm_text+="\n"+o_special_field9;
				}

				//传输设备型号解析,added by liucaiyong ,required by sunyuqiu @20141020
				String modelKey="";
				String modelTask="";
				if(o_eqp_object_class == "2009") {
					modelKey = "transElementPtn:"+o_eqp_int_id;
					modelTask = "chuanshuInfoPTN";
				}
				else if(o_eqp_object_class == "2001") {
					modelKey = "transElementSdh:"+o_eqp_int_id;
					modelTask = "chuanshuInfomation";
				}
				else if(o_eqp_object_class in ["2008","2034"]) {
					modelKey = "transElementWdm:"+o_eqp_int_id;
					modelTask = "chuanshuInfomationOne";
				}
				else if(o_eqp_object_class == "2011") {
					modelKey = "olt:"+o_eqp_int_id;
					modelTask = "olt";
				}
				else if(o_eqp_object_class == "2033") {
					modelKey = "myOlp:"+o_eqp_int_id;
					modelTask = "chuanshuInfomationFive";
				}

				if(StringUtils.isNotBlank(modelKey)&&!o_title_text.contains("关注事件")){
					Object[] modelObject = util.getObject(CUSTOMCACHE, modelKey,modelTask);
					List modelList = modelObject==null?null:Arrays.asList(modelObject);
					String model = "";
					if(modelList!=null&&!modelList.isEmpty()){
						model = Util.getTempV(modelList,3);
					}
					int pos = o_alarm_text.indexOf('网元名称');
					if(pos>0){
						pos = o_alarm_text.substring(pos).indexOf('\n')+pos;
						o_alarm_text = o_alarm_text.substring(0,pos) + "\n网元型号= "+ model + o_alarm_text.substring(pos);
					}
					else{
						o_alarm_text +="\n网元型号="+model;
					}
				}
			}

			//取消二干波分与集客的关联,added by liucaiyong@20170214,by sunyuqiu
			if(o_severity_keycode == "41" && o_eqp_object_class in ["2008","2034"] && StringUtils.isNotBlank(o_gcss_client)){
				o_gcss_client="";
				o_gcss_client_num="";
				o_gcss_client_name="";
				o_gcss_client_level="";
				o_gcss_client_grade="";
				o_gcss_client_grade_mgt = "";
				o_gcss_service="";
				o_gcss_service_num="";
				o_gcss_service_type="";
				o_gcss_service_level="";
				o_gcss_service_sub_type="";
			}

		if(o_omc_id in ["6601","6602"]&& StringUtils.isNotBlank(o_special_field6) && o_special_field6.startsWith("10011:")){
				  //东信  防火墙板卡-epc,20171111
				  o_object_class = "10011";
				  o_board_type = o_special_field6.replace("10011:", "");
				  if (StringUtils.isBlank(o_board_type)){
					o_board_type = "-1000";
				  }
				  o_special_field6 = "";
			}
			if(o_omc_id == "6102" && o_special_field5 == "上报集团"){
			  //亿阳动环网管上报集团，同步告警 适用的厂家版本号 = '上报集团'
			  o_send_jt_flag = "1";
			}
			this.setProductNoRthandler();
			this.setDefaultValueRthandler();
		}

		/**
		 * 默认值的特殊处理
		 */
		private void setDefaultValueRthandler()
		{
			//CMCC-GD-DRITXQ-20160707-001
			if(o_eqp_object_class == "2012"){
				o_resource_status = "1";
				o_ne_status = "1";
				o_severity_keycode = "27";
			}
			if (StringUtils.isBlank(o_alarm_ne_status))
			{
				o_alarm_ne_status = "1";
			}
			//防止alarm_resource_status为空，updated by liucaiyong@20160606
			if(o_object_class in ["102","121","122","124","6109","8101","8102","8106","8108","8109","81091"] && StringUtils.isBlank(o_alarm_resource_status)){
				o_alarm_resource_status = o_alarm_ne_status;
			}
			if (StringUtils.isBlank(o_alarm_resource_status))
			{
				o_alarm_resource_status = "1";
			}
			if(StringUtils.isBlank(o_resource_status))
			{
				o_resource_status="1";
			}
			//ne_status默认值  by liucaiyong@20191010, shanchunlan
		if(StringUtils.isBlank(o_ne_status))
		{
			o_ne_status="0";
		}
			if(StringUtils.isBlank(o_standard_flag))
			{
				o_standard_flag="2";
			}
			if(StringUtils.isBlank(o_send_jt_flag)||StringUtils.isBlank(o_object_class)||o_object_class in ["0","-1"]||o_eqp_object_class=="100")
			{
				o_send_jt_flag="0";
			}
			//20190112,无线专业的，限制已标准化的告警才上报集团
			if(o_object_class in ["201","300","9201","9300","8104","8105","41011","270","3300","3201"]){
				if(o_standard_flag == "2" && o_send_jt_flag == "1"){
					o_send_jt_flag = "1";
				}else{
					o_send_jt_flag = "0";
				}
			}
			//20190920,频次为2及以上的性能告警，调整为不上报集团。
		if(o_org_type == "2" && StringUtils.isNotBlank(o_alarm_act_count) && o_send_jt_flag == "1"){
			int actcount = Integer.parseInt(o_alarm_act_count);
			if(actcount > 1){
				o_send_jt_flag = "0";
			}
		}

			o_alarm_origin = "0";
			//10.20支掉，什么时候增加吴剑决定
			//o_remote_object_class=o_special_field17;

			//网络类型调整（仅保留传输及动环） shanchunlan,liucaiyong@20191028
			//if(o_omc_id=="1502")
			//{
			//	o_severity_keycode="150";
			//}

			//add by wujian at 20130802
			if (o_correlate_alarm_flag==null || o_correlate_alarm_flag=="")
			{
				o_correlate_alarm_flag = "1";
			}

			if(StringUtils.isNotBlank(o_remote_eqp_alias)){
				o_remote_eqp_alias = subStrLenRthandler(o_remote_eqp_alias,60,"");
			}
			if(StringUtils.isBlank(o_sub_alarm_type)){
					  o_sub_alarm_type = "0";
		}
		}

	  /**
		 * 小区 VIP id文本映射
		 * @param key
		 * @return
		 */
		private String vipCellMapingRthandler(String key)
		{
			if(StringUtils.isBlank(key))
			{
			  return "";
			}
			try{
				int i = Integer.parseInt(key);
				switch(i)
				{
					case 0:
						return "非VIP";
					case 6:
						return "VVIP类型";
					case 7:
						return "一级VIP";
					case 8:
						return "二级VIP";
					case 9:
						return "三级VIP";
					case 10:
						return "超级VIP";
					default:
						return "";
				}
			}catch(Exception e)
			{
				return "";

			}
		}

			/**
		 * 基站 VIP id文本映射
		 * @param key
		 * @return
		 */
		private String vipSiteMapingRthandler(String key)
		{
			if(StringUtils.isBlank(key))
			{
			  return "";
			}
			try{
				int i = Integer.parseInt(key);
				switch(i)
				{
					case 0:
						return "非VIP";
					case 1:
						return "VIP";
					case 2:
						return "VVIP类型";
					case 3:
						return "超级VIP基站";
					case 4:
						return "一级VIP";
					case 5:
						return "二级VIP";
					case 6:
						return "三级VIP";
					case 7:
						return "非基站机房";
					default:
						return "";
				}
			}catch(Exception e)
			{
				return "";

			}
		}

		  /**
		 * 基站 VIP object_level映射
		 * @param key
		 * @return
		 */
		private String vipSiteLevelMapingRthandler(String key)
		{
			if(StringUtils.isBlank(key))
			{
			  return "";
			}
			try{
				int i = Integer.parseInt(key);
				switch(i)
				{
					case 0:
						return "0";
					case 7:
						return "0";
			case 2:
						return "1";
					case 3:
						return "1";
					case 4:
						return "1";
					case 5:
						return "1";
					case 6:
						return "1";
					default:
						return "";
				}
			}catch(Exception e)
			{
				return "";

			}
		}

		/**
		 * 小区 VIP object_level映射
		 * @param key
		 * @return
		 */
		private String vipCellLevelMapingRthandler(String key)
		{
			if(StringUtils.isBlank(key))
			{
			  return "";
			}
			try{
				int i = Integer.parseInt(key);
				switch(i)
				{
					case 0:
						return "10";
					case 7:
						return "11";
					case 8:
						return "12";
					case 9:
						return "13";
					case 6:
						return "14";
					case 10:
						return "15";
					default:
						return "";
				}
			}catch(Exception e)
			{
				return "";

			}
		}
			private String getStrfromDateRthandler(Date d)
			{
				String str="";
				SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				try{
					str = sdf.format(d);
				}catch(ParseException e){return str; }
				 return str;
			}


			private String getTransObjectsValRthandler(String int_id,int ValNo)
			{
				String str="";
			   // String intKey = "objects_trans:" + int_id;
			   String intKey = "objects_trans_fdn_id:" + int_id;
				// Object[] objects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, intKey,"objects_trans");
				Object[] objects = (Object[])util.getObject(SimpleFindUtil.RESOURCE_CACHE, intKey,"objects_trans_fdn_id");
				if(objects != null){
					str=objects[ValNo];
				}
				return str;
			}

			private String getColmnStrgFromCacheRthandler(String machromm_id)
			{
				String task="olts_of_machroom";
				String key = task+":"+machromm_id;

				String retString="";
				int k=0;
				List results = (List)util.getObject(this.CUSTOMCACHE,key,task);
				if (results!=null && !results.isEmpty()) {
					for (Object item : results) {
						Object[] result = (Object[])item;
						List olist = Arrays.asList(result);
						String i_val	=	Util.getTempV(olist,1);

						if(StringUtils.isNotBlank(i_val)&&!retString.contains(i_val)){//防止重复数据
							if((retString+i_val).length()>254){
								break;
							}
							retString+=(k==0?"":";")+getTransObjectsValRthandler(i_val,5);
							k++;
						}
					}
				}
				log.info(o_fp0+" getColmnStrgFromCacheRthandler"+" 【"+retString+"】");
				return retString ;
			}
			/**
		 *根据spc_hex查询对端设备信息并填写
		 */
		private void setRemoteInfoBySpcHexRthandler(){
				try{
					String task="t_ne_spc";
					Object[] remotes = util.getObject(CUSTOMCACHE, task+":"+o_remote_eqp_alias ,task);
					List remotelist = remotes==null?null:Arrays.asList(remotes);
					if(remotelist!=null&&!remotelist.isEmpty()){
						o_remote_int_id	=	Util.getTempV(remotelist, 0);
						o_remote_eqp_label = Util.getTempV(remotelist, 1);
						o_remote_resource_status =Util.getTempV(remotelist, 2);
						o_remote_eqp_alias	=	o_remote_eqp_label;
						log.info(o_fp0+" setRemoteInfoBySpcHexRthandler:: get remote_int_id="+o_remote_int_id+" remote_eqp_label="+o_remote_eqp_label+" remote_resource_status="+o_remote_resource_status);
					}
				}catch(Exception e){
					log.info(o_fp0+" setRemoteInfoBySpcHexRthandler:: get remote-error :"+e.getMessage());
				}
		}



		/**
		 *根据对端别明光查询对端设备信息并填写,适用HSS
		 */
		private void setHSSRemoteInfoByAliasRthandler(){
				String task="remote-hss";
				String ikey = task+":"+o_remote_eqp_alias;

				List	list = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, ikey, task);
				if (list != null&& list.size() >0) {
					for (int i = 0; i < list.size(); i++) {
						Object[] objs = (Object[]) list.get(i);
						if (objs.length>0) {
							o_remote_int_id 			= objs[0]+"";
							if(StringUtils.isNotBlank(o_remote_int_id)){
								o_remote_eqp_label	    =	objs[1]+"";
								o_remote_resource_status=	objs[2]+"";
								break;
							}
						}
					}
				}
				log.info(o_fp0+" setHSSRemoteInfoByAliasRthandler:: get remote_int_id="+o_remote_int_id+" remote_eqp_label="+o_remote_eqp_label+" remote_resource_status="+o_remote_resource_status);
		}

		/**
		 * 本端工程状态映射
		 * @param key
		 * @return
		 */
		private String projectMapingRthandler(String key)
		{
			if(StringUtils.isBlank(key))
			{
			  return "";
			}
			try{
				int i = Integer.parseInt(key);
				switch(i)
				{
					case 1:
						return "3";
					case 2:
						return "4";
					case 3:
						return "5";
					case 4:
						return "8";
					case 5:
						return "9";
					case 6:
						return "10";
					case 12:
						return "12";
					case 13:
						return "13";
					case 14:
						return "14";
					case 15:
						return "38";
			case 45:
			  return "45";
					default:
						return "1";
				}
			}catch(Exception e)
			{
				return "1";

			}
		}

		/**
		 * 根据对端工程映射
		 * @param local_project
		 * @param remote
		 * @param remote_project
		 * @return
		 */
		private String projectRemoteMapingRthandler(String local_project,String remote,String remote_project)
		{
			if(StringUtils.isBlank(remote) || remote=="99")
			{
				return this.projectMapingRthandler(local_project) ;
			}
			if(local_project!="0")
			{
				return this.projectMapingRthandler(local_project);
			}
			int re = Integer.parseInt(remote);
			try{
				switch(re)
				{
					case 0:
						return "6";
					case 1:
							try{
								int i = Integer.parseInt(remote_project);
								switch(i)
								{
									case 1:
										return "27";
									case 2:
										return "28";
									case 3:
										return "29";
									case 4:
										return "30";
									case 5:
										return "31";
									case 6:
										return "32";
									case 12:
										return "33";
									case 13:
										return "36";
									case 14:
										return "37";
									case 15:
										return "39";
									default:
										return "1";
								}
							}catch(Exception e)
							{
								return "1";

							}
					case 2:
						return "15";
					case 3:
					case 6:
						return "17";
					case 4:
						return "6";
					case 5:
						return "18";
					case 7:
						return "7";
					case 8:
						return "16";
					case 9:
						return "40";
					case 10:
						return "41";
					case 11:
						return "42";
					case 12:
						return "43";
					case 13:
						return "44";
					default:
						return this.projectMapingRthandler(local_project);
				}
				}catch(Exception e){

					return this.projectMapingRthandler(local_project);
				}
		}

		/**
		 * MSC[object_class=130]业务地市信息查询 --[add][20130609][wujian][]
		 */
		private void redefineCityFromYWRthandler()
		{
			if (o_object_class=="130" && o_standard_alarm_name=="BSC（RNC）与MSC的位置区（小区或服务区）配置不一致") {
				String rkey = "gd:mscserverCityRedefine:"+o_int_id;
				Object[] result = util.getObject(this.CUSTOMCACHE,rkey,"mscserverCityRedefine");
				if (result!=null && result.length>0) {
					o_extra_string1= Util.getTempV(Arrays.asList(result),0);
				}
				//log.debug(o_fp0+" jredefineCityFromYW(city="+o_extra_string1+") "+rkey);
			}
		}


		/**
		add by daixueyue on 2013 09 10
		增加代维信息
		*/
		public void handlerAddAFieldRthandler(){
			  String dbFildOne = "";
			  String dbFildTwo = "";
			  String dbFildThree="";
			  List myList ;
			  Object [] result;
			  String myKey;

			  //传输网 跟集客
			  if(o_eqp_object_class in ["2033","2001","2008","2009","2011","2012","161","163","6118","900","901","2007","2034"]){
				  if(o_eqp_object_class == "2033"){
							  myKey = "myOlp:"+o_eqp_int_id;
							  result = util.getObject(this.CUSTOMCACHE,myKey,"chuanshuInfomationFive");
				  }
				  if(o_eqp_object_class == "2001"){
							  myKey = "transElementSdh:"+o_eqp_int_id;
							  result = util.getObject(this.CUSTOMCACHE,myKey,"chuanshuInfomation");
				  }
				  if(o_eqp_object_class == "2008"|| o_eqp_object_class == "2034"){
						  myKey = "transElementWdm:"+o_eqp_int_id;
						  result = util.getObject(this.CUSTOMCACHE,myKey,"chuanshuInfomationOne");
				  }
				  if(o_eqp_object_class == "2009"){
				   myKey = "transElementPtn:"+o_eqp_int_id;
				   result = util.getObject(this.CUSTOMCACHE,myKey,"chuanshuInfoPTN");
					 }
				  if(o_eqp_object_class == "2011"){
						myKey = "olt:"+o_eqp_int_id;
						result = util.getObject(this.CUSTOMCACHE,myKey,"olt");
				  }
				  if(o_eqp_object_class == "2012"){
						myKey = "onu:"+o_eqp_int_id;
						result = util.getObject(this.CUSTOMCACHE,myKey,"onu");
				  }
				  if(o_eqp_object_class == "161"){
					  myKey = "myJikePbx:"+o_eqp_int_id;
					  result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationOne");
				  }
				  if(o_eqp_object_class == "163"){
					  myKey = "myJikeConverter:"+o_eqp_int_id;
					  result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationTwo");
				  }
				  if(o_eqp_object_class == "6118"){
					  myKey = "myJikeIad:"+o_eqp_int_id;
					  result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationThree");
				  }
				  if(o_eqp_object_class == "900"){
					  myKey = "myJikeRouter:"+o_eqp_int_id;
					  result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationFour");
				  }
				  if(o_eqp_object_class == "901"){
					  myKey = "myJikeFirewall:"+o_eqp_int_id;
					  result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationFive");
				  }
				  if(o_eqp_object_class == "2007"){
					  myKey = "myJikeMsap:"+o_eqp_int_id;
					  result = util.getObject(this.CUSTOMCACHE,myKey,"jikeInfomationSix");
				  }

					// 集客拉远开通业务口派单对象调整（CMCC-GD-DRITXQ-20210421-035）
					String representation = ""; // 客户端维护单位epresentation
					// if (o_network_type in ["401", "402", "403", "404", "406", "409"] && o_object_class == "706" && o_severity_keycode in ["25", "26", "27"]) {
					if (o_professional_type == "3" && o_object_class == "706" && o_severity_keycode in ["25", "26", "27"]) {
						String pstr = ""; // port_type
						List results;
						// redis缓存外挂
						// results = rutil.getObject("circuit_port_service_port:" + o_int_id);
						results = util.getObject(CUSTOMCACHE, "circuit_port_service_port:" + o_int_id, "circuit_port_service_port");
						if (results!=null && !results.isEmpty()) {
							for (Object items : results) {
								Object[] item = (Object[])items;
								if (item == null || item.length < 1) {
									break;
									}
									List olist = Arrays.asList(item);
									String ptype = Util.getTempV(olist,1);
									pstr = appendStr(pstr,ptype);
							}
						}

						if(StringUtils.isNotBlank(pstr)){
							// port_type=1表示告警对象端口为对应产品的业务口
							if(pstr.contains("1")){
								// redis缓存外挂
								// List resultsall = rutil.getObject("circuit_port_service_port:" + o_int_id);
								List resultsall = util.getObject(CUSTOMCACHE, "circuit_port_service_port:" + o_int_id, "circuit_port_service_port");
								results = resultsall.get(0); // 只取第一条数据，缓存sql使用order by升序业务级别service_level，使最高级别的资源排序到第一条，相同级别随机取，集客业务级别（GCSS_SERVICE_LEVEL）:（-1：AAA+>0：AAA>1：AA>2：A>3：普通>：4：未知）
								if (results!=null && !results.isEmpty()) {
									String service_id	=	Util.getTempV(results,3); // service_id
									log.debug("fp0-{}, int_id={}, eqp_int_id={}, gcss_service_type={}, service_level_results={}, service_id={}", o_fp0, o_int_id, o_eqp_int_id, o_gcss_service_type, results, service_id);
									if (StringUtils.isBlank(representation) && o_gcss_service_type.contains("40001")) {
										// 传输专线
										// redis缓存外挂
										// 传输专线a端
										// results = rutil.getObject("ip_specialline_service_representation_a:" + service_id + ":" + o_eqp_int_id);
										results = util.getObject(CUSTOMCACHE, "ip_specialline_service_representation_a:" + service_id + ":" + o_eqp_int_id, "ip_specialline_service_representation_a");
										if (results!=null && !results.isEmpty()) {
											representation =	Util.getTempV(results,2); // 客户端维护单位representation_a
											log.debug("fp0-{}, gcss_service_type={}, ip_specialline_service_representation_a={}", o_fp0, o_gcss_service_type, representation);
											}

										if (StringUtils.isBlank(representation)) {
												// 传输专线a端获取不到客户端维护单位representation_a，接着查询传输专线z端
												// results = rutil.getObject("ip_specialline_service_representation_z:" + service_id + ":" + o_eqp_int_id);
												results = util.getObject(CUSTOMCACHE, "ip_specialline_service_representation_z:" + service_id + ":" + o_eqp_int_id, "ip_specialline_service_representation_z");
												if (results!=null && !results.isEmpty()) {
													representation =	Util.getTempV(results,2); // 客户端维护单位representation_b
													log.debug("fp0-{}, gcss_service_type={}, ip_specialline_service_representation_z={}", o_fp0, o_gcss_service_type, representation);
													}
										}
									}

									if (StringUtils.isBlank(representation) && o_gcss_service_type.contains("40004")) {
										// 互联网专线
										// redis缓存外挂
										// results = rutil.getObject("internet_line_service_representation:" + service_id + ":" + o_eqp_int_id);
										results = util.getObject(CUSTOMCACHE, "internet_line_service_representation:" + service_id + ":" + o_eqp_int_id, "internet_line_service_representation");
										if (results!=null && !results.isEmpty()) {
											representation =	Util.getTempV(results,2); // 客户端维护单位representation
											log.debug("fp0-{}, gcss_service_type={}, internet_line_service_representation={}", o_fp0, o_gcss_service_type, representation);
											}
									}

									if (StringUtils.isBlank(representation) && o_gcss_service_type.contains("40003")) {
										// 语音专线
										// redis缓存外挂
										// results = rutil.getObject("ip_voice_service_representation:" + service_id + ":" + o_eqp_int_id);
										results = util.getObject(CUSTOMCACHE, "ip_voice_service_representation:" + service_id + ":" + o_eqp_int_id, "ip_voice_service_representation");
										if (results!=null && !results.isEmpty()) {
											representation =	Util.getTempV(results,2); // 客户端维护单位representation
											log.debug("fp0-{}, gcss_service_type={}, ip_voice_service_representation={}", o_fp0, o_gcss_service_type, representation);
											}
									}

									if (StringUtils.isBlank(representation) && o_gcss_service_type.contains("40008")) {
										// IPVPN专线
										// redis缓存外挂
										// results = rutil.getObject("vpn_service_representation:" + service_id + ":" + o_eqp_int_id);
										results = util.getObject(CUSTOMCACHE, "vpn_service_representation:" + service_id + ":" + o_eqp_int_id, "vpn_service_representation");
										if (results!=null && !results.isEmpty()) {
											representation =	Util.getTempV(results,2); // 客户端维护单位representation
											log.debug("fp0-{}, gcss_service_type={}, vpn_service_representation={}", o_fp0, o_gcss_service_type, representation);
											}
									}

									if (StringUtils.isBlank(representation) && o_gcss_service_type.contains("40012")) {
										// 集团WLAN专线
										// redis缓存外挂
										// results = rutil.getObject("wlan_service_representation:" + service_id + ":" + o_eqp_int_id);
										results = util.getObject(CUSTOMCACHE, "wlan_service_representation:" + service_id + ":" + o_eqp_int_id, "wlan_service_representation");
										if (results!=null && !results.isEmpty()) {
											representation =	Util.getTempV(results,2); // 客户端维护单位representation
											log.debug("fp0-{}, gcss_service_type={}, wlan_service_representation={}", o_fp0, o_gcss_service_type, representation);
											}
									}
									// log.debug("fp0-{}, gcss_service_type={}, representation={}", o_fp0, o_gcss_service_type, representation);
									}
							}
						}
					}

				  if(result != null && result.length>0){
						  myList = result==null?null:Arrays.asList(result);
						  dbFildOne = Util.getTempV(myList,1);
						  dbFildTwo = Util.getTempV(myList,2);
						  o_special_field18 ="";
							// 如果从资源中获取到客户端维护单位representation，则更新到“设备:”
							if(StringUtils.isNotBlank(representation)){
									o_special_field18 += "设备:"+representation+";";
							}
							if(StringUtils.isNotBlank(dbFildOne) && StringUtils.isBlank(representation)){
							  o_special_field18 += "设备:"+dbFildOne+";";
						  }
						  if(StringUtils.isNotBlank(dbFildTwo)){
							  o_special_field18 += "线路:"+dbFildTwo;
						  }
				  }
				  log.info(o_fp0+" dw-specialFild18="+o_special_field18+",key="+myKey);
				 }
				//无线专业
				if(o_eqp_object_class in ["1001","1002","11004"] || o_object_class in ["201","9201","8104","8105","300","9300","41011","270"]){
					if(o_eqp_object_class == "1002" ){
						//它是属于WLAN-AP 类型??,需要特殊处理
						if(o_city_id in ["1641999133","98385249","838185425","1022477377","-40145851","-274261379","1756771793","1050163130","1628882058","-1414777210","1528115507","229360282","1515153790","852452198","-649370270","1703003042","104629030","-2007780382","-1674715417","-863153540","-2107737273"]){
								  myKey = "myWixianAp:"+o_eqp_int_id;
								  result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationOne");
							}
					}
					if(o_eqp_object_class == "1001")
					{
					//WLAN-AC ,update by liucaiyong@2013102117
						if(o_city_id in ["1641999133","98385249","838185425","1022477377","-40145851","-274261379","1756771793","1050163130","1628882058","-1414777210","1528115507","229360282","1515153790","852452198","-649370270","1703003042","104629030","-2007780382","-1674715417","-863153540","-2107737273"]){
							myKey = "myWixianAc:"+o_eqp_int_id;
							result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationNight");
						}
					}
					if(o_eqp_object_class == "11004"){
						//它是属于直放站的
						if(o_city_id in ["1641999133","98385249","838185425","1022477377","-40145851","-274261379","1756771793","1050163130","1628882058","-1414777210","1528115507","229360282","1515153790","852452198","-649370270","1703003042","104629030","-2007780382","-1674715417","-863153540","-2107737273"]){
							myKey = "myWixianRepeater:"+o_eqp_int_id;
							result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationTwo");
						}
					}

					if(o_object_class == "201"||(o_eqp_object_class == "200" && o_vendor_id == "7")){
							myKey = "myWixianBtssitemanager:"+o_int_id;
							result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationThree");
					}
					if(o_object_class == "9201"){
							myKey = "myWixianNodeb:"+o_int_id;
							result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationFour");
					}
					if(o_object_class in ["8104","41011"]){
						  myKey = "myWixianEnodeb:"+o_int_id;
						  result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationFive");
					}
					if(o_object_class == "300"){
						myKey = "myWixianBtssitemanager:"+o_ParentIntId;
						result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationThree");
					}
					if(o_object_class == "9300"){
						myKey = "myWixianNodeb:"+o_ParentIntId;
						result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationFour");
					}
					if(o_object_class in ["8105","270"]){
						myKey = "myWixianEnodeb:"+o_ParentIntId;
						result = util.getObject(this.CUSTOMCACHE,myKey,"wuxianInfomationFive");
					}
				  if(result != null && result.length>0){
					  myList = result==null?null:Arrays.asList(result);
					  dbFildOne = Util.getTempV(myList,1);
					  if(StringUtils.isNotBlank(dbFildOne)){
						  o_special_field18 = "设备:"+dbFildOne;
					  }
					}
					log.info(o_fp0+" dw-specialFild18="+o_special_field18+",key="+myKey);
			  }
			//2G基站与OLT共址和低压告警 特殊处理  ---added by lgy@20180403 工单：CMCC-GD-DRITXQ-20180323-007
			//lgy@20190116,增加4G基站，需求单号：CMCC-GD-DRITXQ-20181121-003
			if(o_sub_alarm_type in ["531","532"]&&o_site_info=="1"&&o_object_class in ["201","8104","41011"]){
				String task = "olts_of_machroom";
				List oList = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, joinKeyRthandler(task,o_site_no), task);
				if (oList != null && !oList.isEmpty()){
					Object[] objs = (Object[]) oList.get(0);//只取一条记录
					String intKey=objs[1];
					myKey = "olt:"+intKey;
					result = util.getObject(this.CUSTOMCACHE,myKey,"olt");
					if(result != null && result.length>0){
					  myList = Arrays.asList(result);
					  dbFildOne = Util.getTempV(myList,1);
				dbFildOne =StringUtils.isBlank(dbFildOne) ?"自维":dbFildOne;  //代维为空，赋默认值：自维
					  String userlabel=Util.getTempV(myList,1);
					  if(StringUtils.isNotBlank(dbFildOne)){
									o_special_field18 = StringUtils.isBlank(o_special_field18) ? "跨专业:"+dbFildOne : o_special_field18+ ";跨专业:"+dbFildOne;
					  }
				  }
				  //遍历将OLT信息赋值到告警正文中
				Object[]	myKey1;
				  String myKey2="";
				  String userlabel="";
				  String port_num="";
				  String related_cell_num="";
				  String related_client_num="";
				  String link_onu_num="";
							// task = "objects_trans";
							task = "objects_trans_fdn_id";
							log.info(o_fp0+" 队列大小："+oList.size());
					  for(int i=0;i<oList.size();i++){
						  objs = (Object[]) oList.get(i);
						  intKey=objs[1];
				myKey1 = util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKeyRthandler(task,intKey),task);
							if(myKey1 == null || myKey1.length==0){
								continue;
							}
							myList = myKey1==null?null:Arrays.asList(myKey1);
							userlabel= Util.getTempV(myList, 5);
				//log.info(o_fp0+" OLT名称："+userlabel);
						  myKey2 = "olt:"+intKey;
						result = util.getObject(this.CUSTOMCACHE,myKey2,"olt");
						myList = result==null?null:Arrays.asList(result);
						port_num=Util.getTempV(myList,7);
					  related_cell_num=Util.getTempV(myList,8);
					  related_client_num=Util.getTempV(myList,5);
					  link_onu_num=Util.getTempV(myList,4);
					 o_alarm_text = o_alarm_text + "\nOLT名称"+(i+1)+"："+userlabel+"\nPON口数量："+port_num+"\n覆盖小区数："+related_cell_num+"\n承载家宽用户数："+related_client_num+"\n下带ONU数："+link_onu_num+"\n"
					  }
					}
				}
			//动环专业
			if(o_professional_type=="4")
			{
				myKey="vw_machinery_room_dh:"+o_special_field11;
				result = util.getObject(this.CUSTOMCACHE,myKey,"nrmdb.vw_machinery_room_dh");
				if(result != null && result.length>0){
					myList = result==null?null:Arrays.asList(result);
					dbFildOne = Util.getTempV(myList,3);
					dbFildTwo = Util.getTempV(myList,4);
					dbFildThree = Util.getTempV(myList,5);
				}

				//if(StringUtils.isNotBlank(dbFildOne) && o_eqp_object_class in ["30004","30005","30006","30008","30012","30013","30014","30020","30022","30023","30024","30025","30205","30245","61079","61080"])
				if(StringUtils.isNotBlank(dbFildOne) && o_eqp_object_class in ["30033","30218","30205","30244","30201","51001","30245","30004","30006","30008","30013","30014","30020","30022","30023","30024","30205","30245","30021"])
				{
					//动力代维
					o_special_field18 = "设备:"+dbFildOne;
				}
				//else if(StringUtils.isNotBlank(dbFildTwo) && o_eqp_object_class in ["30007","30015","30016","30017","30018","30223","30241"])
				else if(StringUtils.isNotBlank(dbFildTwo) && o_eqp_object_class in ["30223","30241","30007","30015","30018","30223","30241"])
				{
					//空调代维
					o_special_field18 = "设备:"+dbFildTwo;
				}

				//if(StringUtils.isNotBlank(dbFildThree) &&o_sub_alarm_type == "703")
				if(StringUtils.isNotBlank(dbFildThree))
				{
					//市电告警-发电代维
					if(StringUtils.isNotBlank(o_special_field18))
					{
						o_special_field18=o_special_field18+";";
					}
					o_special_field18 = o_special_field18+"线路:"+dbFildThree;
				}

			}

			//需要用到代维信息，从otherRthandler()函数移动过来
			//required by luocheng @20131120 ,edited by liucaiyong @2013112117
			//增加“集客”过滤,updated by liucaiyong@2014022817
			//非集客告警
			o_redefine_severity = "2";
			if(StringUtils.isNotBlank(o_gcss_client))
			{
				//集客告警标记-仅根据集客判断,updated by liucaiyong@20150413
				o_redefine_severity="1";
				log.debug(o_fp0+" mark-jike-alais o_redefine_severity:"+o_redefine_severity+",o_gcss_client:"+o_gcss_client+",o_special_field18:"+o_special_field18);
			}

			this.setJiaKeRthandler();
			// 商宽业务标识和商宽用户数统计
			this.broadbandRthandler();
			this.JikeFilterRthandler();
			//lgy@20190117,关于单个PON故障和FTTB ONU故障工单直派装维线路班
			//单个PON口告警
			//lcy@20190513 细分类型691
			// 细分类型693：PON LOS预警告警【CMCC-GD-DRITXQ-20200820-004 关于互感pon口类预警派单装维线路班组的需求】
			// if(o_object_class == "706" && o_eqp_object_class == "2011" && o_sub_alarm_type in ["691", "693"] && o_redefine_severity != "1"){
			// 【优化需求】关于对PON LOS告警相关规则优化调整（CMCC-GD-DRITXQ-20210610-001）
			if(o_object_class == "706" && o_eqp_object_class == "2011" && o_redefine_severity != "1" && (o_sub_alarm_type in ["691", "693"] || (o_vendor_id == "8" && o_alarm_title in ["2290466","9673360","12298548","9925954"]))){
				String Addr="";
				if(StringUtils.isNotBlank(o_corr_str)){
					String corr_strId=Util.getCRC32(o_corr_str);
					myKey 	= this.joinKey("addr_line_relation123",corr_strId);
					String task 	= "addr_line_relation123";
					Object[] objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,myKey,task);
					List objectsList = objects == null ? null : Arrays.asList(objects);
					if(objectsList != null && !objectsList.isEmpty()) {
						Addr	=	Util.getTempV(objectsList, 2);
					}else{
						myKey 	= this.joinKey("addr_line_relation13",corr_strId);
						task 	= "addr_line_relation13";
						objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,myKey,task);
						objectsList = objects == null ? null : Arrays.asList(objects);
						if(objectsList != null && !objectsList.isEmpty()) {
							Addr	=	Util.getTempV(objectsList, 2);
						}else{
							myKey 	= this.joinKey("addr_line_relation12",corr_strId);
							task 	= "addr_line_relation12";
							objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,myKey,task);
							objectsList = objects == null ? null : Arrays.asList(objects);
							if(objectsList != null && !objectsList.isEmpty()) {
								Addr	=	Util.getTempV(objectsList, 2);
							}else{
								myKey 	= this.joinKey("addr_line_relation23",corr_strId);
								task 	= "addr_line_relation23";
								objects = (Object[]) util.getObject(SimpleFindUtil.CUSTOM_CACHE,myKey,task);
								objectsList = objects == null ? null : Arrays.asList(objects);
								if(objectsList != null && !objectsList.isEmpty()) {
									Addr	=	Util.getTempV(objectsList, 2);
								}
							}
						}
					}
					if(StringUtils.isNotBlank(Addr)){
						o_special_field18="设备:"+Addr+";线路:";
					}else{
						o_special_field18="设备:自维客响;线路:";
					}
				}else{
					o_special_field18="设备:自维客响;线路:";
				}
				log.info(o_fp0+"   单个PON口告警代维单位="+o_special_field18);
			}
			//FTTB ONU告警
			if(o_eqp_object_class=="2012"&&o_object_class=="2012"&&o_ne_sub_type=="201200"&&o_redefine_severity!="1"){
				// String task="pon_cover";//Pon_cover_relation
				// myKey=this.joinKey(task,o_int_id);
				// Object[] objects = util.getObject(PORTCACHE,myKey,task);
				String key = "pon_cover:" + o_int_id;
				// redis缓存外挂
				// Object[] objects = (Object[]) rutil.getObject(key);
				Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "pon_cover");
				List objectsList = objects == null ? null : Arrays.asList(objects);
				String Rangename = "";
				if(objectsList!=null&&!objectsList.isEmpty()){
					String Addr_1 = Util.getTempV(objectsList,3);
					String Addr_2 = Util.getTempV(objectsList,4);
					String Addr_3 = Util.getTempV(objectsList,5);
					if(!(StringUtils.isBlank(Addr_1)&&StringUtils.isBlank(Addr_2)&&StringUtils.isBlank(Addr_3))){
						String Addr_123ID = Util.getCRC32(Addr_1+Addr_2+Addr_3);
						String task="addr_line_relation123";
						myKey=this.joinKey(task,Addr_123ID);
						objects = util.getObject(SimpleFindUtil.CUSTOM_CACHE,myKey,task);
						objectsList = objects==null?null:Arrays.asList(objects);
						if(objectsList!=null&&!objectsList.isEmpty()){
							Rangename = Util.getTempV(objectsList, 2);
						}
					}
				}
				if(StringUtils.isNotBlank(Rangename)){
					o_special_field18="设备:"+Rangename+";线路:";
				}else{
					o_special_field18="设备:自维;线路:";
				}
				log.info(o_fp0+"   FTTB ONU告警代维单位="+o_special_field18);
			}
			//小型PTN,物理设备类型、集客业务字段字段赋值 added by lgy@20180619 required by sunyuqiu@CMCC-GD-DRITXQ-20180511-007
			if(o_vendor_id in ["1010","9010"]&&o_eqp_object_class=="2009"){
				o_ne_sub_type="10";
				o_gcss_service_level="4";
				o_redefine_severity="1";
				o_network_type_top="6";
				}
			//add by lgy@20180620 required by wangyingfeng
		if(o_redefine_severity=="1"){
		o_alarm_text+="\n产品号码: "+product_no;
		  }
		  //lgy@20190108,传输家、集客的一、二级专业赋值
		  if(o_professional_type=="3"){
			  if(o_redefine_severity=="1"){
				  o_network_type_top="11";
				  o_network_type="1100";
			}else if(o_redefine_severity=="3"){
				  o_network_type_top="12";
				  o_network_type="1201";
			  }
			}
		}
		//针对probable_cause做特殊处理 added by lgy@20180615
		 private void SubProbableCauseRthandler(){
					 //liuciayong@20190929,放在 二次标准 化之后
				this.setJikeStandardRthandler();

		 //虚拟机中的probable_cause包含有非数字字符，影响入库，故做置空处理
		if(o_network_type_top=="20"){
				o_probable_cause="";
			}
		if(o_omc_id=="6601"||o_omc_id=="6602"||o_omc_id=="6603"||(o_eqp_object_class == "111"&&o_vendor_id=="1")){
			o_nms_alarm_id=o_probable_cause;
			o_probable_cause="";
		}
		   if(o_probable_cause.length()>10){
			o_nms_alarm_id=o_probable_cause;
			o_probable_cause=o_probable_cause.substring(0,10);
		}

		  //关于集团要求八大区传输动环告警上报工作的分析，liucaiyong@191220
		if(o_professional_type=="3"){
			//o_eqp_label, o_eqp_alias
			if(StringUtils.isNotBlank(o_circuit_no) && o_circuit_no.contains("/八大区")){
					o_send_jt_flag = "1";
					o_eqp_alias = o_eqp_label + "（八大区）";
					o_ne_sub_type = "100";
				}
		}else if(o_professional_type=="4"){
				if(StringUtils.isNotBlank(o_eqp_label) && o_eqp_label.contains("八大区") && o_ne_status in ["1","3","7"]){
					o_send_jt_flag = "1";
					o_ne_sub_type = "101";
				}
		}

		//全专业告警(集客除外)，已标准化的才上报，其他不上报,liucaiyong@20190117
			if(o_redefine_severity != "1" ){
				if(o_standard_flag == "2" && o_send_jt_flag == "1"){
				  o_send_jt_flag = "1";
		  }else{
				  o_send_jt_flag = "0";
		  }
			}
			//集团检查调整:规避告警级别、告警标题 有空的可能 , liucaiyong@20190411
			if(StringUtils.isBlank(o_title_text) || StringUtils.isBlank(o_org_severity))
		{
			o_send_jt_flag = "0";
		}
		//集团检查调整:基站、小区告警要求改为仅上报现网有业务的告警, liucaiyong@20190411
		if(o_object_class in ["201","300","9201","9300","8104","8105","41011","270","3300","3201"] && o_send_jt_flag == "1"){
			if(o_ne_status != "1"){
				o_send_jt_flag = "0";
			}
		}
		//集团检查调整:对于RRU退服（sub_alarm_type=681）告警，当物理设备类型（ne_sub_type）为空，或 告警远端对象类型（rlocate_ne_type）为空时，修改为不上报集团。 liucaiyong@20190925
		//if(o_send_jt_flag == "1" && o_sub_alarm_type == "681" && (StringUtils.isBlank(o_ne_sub_type) || StringUtils.isBlank(o_rlocate_ne_type)))
		//{
		//    o_send_jt_flag = "0";
		//}
		//高铁RRU退服告警的上报不再使用过滤器条件，通过“上报集团标志”体现，序号S21修改为：对于RRU退服（sub_alarm_type=681）告警，当物理设备类型（ne_sub_type）为高铁相关，且 告警远端对象类型（rlocate_ne_type）为RRU时，才上报集团.liucaiiyong@2019118
			if(o_sub_alarm_type == "681"){
				if(o_ne_sub_type in ["20101","30001","810401","810501"] && o_rlocate_ne_type in ["711","8111"]){
					o_send_jt_flag = "1";
				}else{
					o_send_jt_flag = "0";
				}
			}

	  }

		private void JikeFilterRthandler()
		{
			//过滤集客
			if(StringUtils.isBlank(o_gcss_client)){
				return;
			}
			if(StringUtils.isBlank(o_group_id)){
			o_group_id='';
			}

			boolean filter = false;//不在  指定标题组中，则取消集客关联
			if(!o_group_id.contains("1454304217") && o_professional_type =="3"){
				filter = true;//不在 标题组[关联集客告警-传送网]
				log.info(o_fp0 + " jieke filter from group[1454304217]");
			}

		//数据网专业的告警不关联集客，o_group_id不包含：标题组[关联集客告警-数据网]，by yjb@20190214
		if (!o_group_id.contains("167110101") && o_professional_type == "2") {
			filter = true;
			log.info(o_fp0 + "jike filter from group[167110101]");
		}

		// IT网告警根据标题组关联集客业务（CMCC-GD-DRITXQ-20210421-036）：IT网专业告警（network_type_top=9）的“网元组ID”（group_id）字段不包含“关联集客告警-IT网”组（group_id=615144481），则取消集客关联
		if (!o_group_id.contains("615144481") && o_network_type_top == "9") {
		    filter = true; // 不在标题组[关联集客告警-IT网]
		    log.info(o_fp0 + "jike filter from group[615144481]");
		}

			if(!filter){
				return;
			}

			//集客字段置空
			o_gcss_client="";
			o_gcss_client_num="";
			o_gcss_client_name="";
			o_gcss_client_level="";
			o_gcss_client_grade="";
			o_gcss_client_grade_mgt = "";
			o_gcss_service="";
			o_gcss_service_num="";
			o_gcss_service_type="";
			o_gcss_service_level="";
			o_gcss_service_sub_type="";

		//集客标志字段判断
		if(StringUtils.isNotBlank(o_home_client_num)&&o_home_client_num!="0"){
			o_redefine_severity = "3";//家客
			o_network_type_top = "12";
		} else if (o_professional_type == "2") {  //数据网专业的告警不关联集客，o_group_id不包含：标题组[关联集客告警-数据网]，by yjb@20190214
			o_redefine_severity = "2";//非家客集客
			log.info(o_fp0 + "jike filter from group[167110101] o_redefine_severity=" + o_redefine_severity);
		} else {
			o_redefine_severity = "2";//非家客集客
			o_network_type_top = "4";
		}

		}
		//lgy@20190117,PTN伪线、隧道告警关联集客
		private void JikePwTunnelRthandler(){
			if(o_group_id.contains("940157255")){
				//集客字段置空
				o_gcss_client="";
				o_gcss_client_num="";
				o_gcss_client_name="";
				o_gcss_client_level="";
				o_gcss_client_grade="";
				o_gcss_client_grade_mgt = "";
				o_gcss_service="";
				o_gcss_service_num="";
				o_gcss_service_type="";
				o_gcss_service_level="";
				o_gcss_service_sub_type="";
				String task="ptn_PwTunnel";//Pon_cover_relation
				String key=this.joinKeyRthandler(task,o_fm_int_id);
				List results = (List) util.getObject(SimpleFindUtil.CUSTOM_CACHE, key, task);
				if (results!=null && !results.isEmpty()) {
					for (Object item : results) {
				Object[] result = (Object[])item;
			  if (result==null || result.length<1) {
				  break;
			   }
			  List objectsList = result==null?null:Arrays.asList(result);
						if(objectsList!=null&&!objectsList.isEmpty()){
							String circuit_id = Util.getTempV(objectsList,1);
							if(StringUtils.isNotBlank(circuit_id)){
								setGcss("610",circuit_id);
							}
						}
					}
				}
			}
		}

		private Date getDateRthandler(String str)
		{
			Date date = getDateRthandler(str,"yyyy-MM-dd HH:mm:ss");
			return date;
		}
		private Date getDateRthandler(String str,String pattern)
		{
			SimpleDateFormat sdf =new SimpleDateFormat(pattern);
			Date date=null;
			try{
				date = sdf.parse(str);
			}
			catch(ParseException e){
				return date;
			}
			return date;
		}
		 //get substr of len
			private String subStrLenRthandler(String str){
				return subStrLenRthandler(str,254);
			}
			private String subStrLenRthandler(String str,int len){
				return subStrLenRthandler(str,len,",");
			}
			private String subStrLenRthandler(String str,int len,String sep){
				if(StringUtils.isBlank(str) ||str.length()<len){
					return str;
				}

				str = str.substring(0,len);
				return str.substring(0,len - str.reverse().indexOf(sep) -1);
			}
	  private String appendStrRthandler(String str,String substr,String sep){
		  if(StringUtils.isBlank(substr)){
			return str;
		  }
		  if(StringUtils.isBlank(str) || substr.equals(str)){
			return substr;
		  }
		  if(substr.contains(sep)){
			String[] strsubs = substr.split(sep);
			  for(String strsub:strsubs){
				 str = appendStrRthandler(str,strsub,sep);
			  }
			  return str;
		  }
		  if(str.startsWith(substr+sep) || str.endsWith(sep+substr) || str.contains(sep+substr+sep)){
			return str;
		  }
		  return str+sep+substr;
		}
		private String appendStrRthandler(String str,String substr){
		  return appendStrRthandler(str,substr,",");
		}

	  //此函数可能导致内存泄露
		private String subStrLenLenRthandler(String str,int len,String sep){
			if(StringUtils.isBlank(str)){
				return str;
			}
			byte[] strArr = str.getBytes();
			if(strArr.length<=len)
				return str;

			strArr = Arrays.copyOfRange(strArr, 0, len);
			if(StringUtils.isNotBlank(sep)){
				byte[] sepArr = sep.getBytes();
				int sepInx=-1;
				for(int i=0;i<strArr.length-sepArr.length;i++){
					boolean posed = true;
							for(int j=0;j<sepArr.length;j++){
									if(strArr[i+j] != sepArr[j]){
									posed = false;
									break;
									}
							}
							if(posed){
					  sepInx = i;
							}
				}
				if(sepInx>0){
					strArr = Arrays.copyOfRange(strArr, 0, sepInx);
				}
			}
			return new String(strArr);
		}

		 /**
		 * 场景监控字段设置
		 * @param dest
		 */
	   private void setScenecAlarmRthandler(){
		   if((o_object_class.equals("2011")&&o_sub_alarm_type.equals("684"))
				   ||(o_object_class in ["201","300","8105","8104","41011","270"] && o_sub_alarm_type in ["68","973"])){
			   log.debug("scence-{},退服场景SRS 符合,object_class={},sub_alarm_type={}",o_fp0,o_object_class,o_sub_alarm_type);

			   o_alarm_reason = "0";
			   o_scence_type = "0";
			   o_site_poweroff = "0";

			   String key = "scene_srs@10003@"+o_region_id;
			   List list = (List)util.getObject(SimpleFindUtil.RESOURCE_CACHE,key,"scene_srs");

			   Date now = new Date();
			   int type = getSceneTypeRthandler(list,now);
			   log.debug("scence-{},退服场景SRS 1,key={},list={},type={}",o_fp0,key,list==null?0:list.size(),type);
			   if(type!=4){
				   o_scence_type = String.valueOf(type);
				   return ;
			   }
			   key = "scene_srs@10004@"+o_city_id;
			   list = (List)util.getObject(SimpleFindUtil.RESOURCE_CACHE,key,"scene_srs");
			   type = getSceneTypeRthandler(list,now);
			   log.debug("scence-{},退服场景SRS 2,key={},list={},type={}",o_fp0,key,list==null?0:list.size(),type);
			   if(type!=4){
				   o_scence_type = String.valueOf(type);
				   return ;
			   }

			   key = "scene_srs_ne@57@"+o_int_id;
			   list = (List)util.getObject(SimpleFindUtil.RESOURCE_CACHE,key,"scene_srs_ne");
			   type = getSceneTypeRthandler(list,now);
			   log.debug("scence-{},退服场景SRS 3,key={},list={},type={}",o_fp0,key,list==null?0:list.size(),type);
			   if(type!=4){
				   o_scence_type = String.valueOf(type);
				   return ;
			   }

		   }else{
			   log.debug("scence-{},退服场景SRS 不符合,object_class={},sub_alarm_type={}",o_fp0,o_object_class,o_sub_alarm_type);
		   }

			 // CMCC-GD-DRITXQ-20201120-006：无线故障监控增加覆盖场景字段
			 // 4G小区、5G小区资源接入覆盖场景、覆盖场景细化、二级覆盖场景及二级覆盖场景细化
			 // 随机取基站下挂【覆盖场景】有值的小区的覆盖场景，若下挂小区覆盖场景均为空，则基站的覆盖场景也留空即可
			 if (o_object_class in ["8104", "8105", "3201", "3300"] && StringUtils.isNotBlank(o_int_id)) {
				 // 覆盖场景
				 String cover_area = "";
				 // 覆盖场景细化
				 String cover_area_info = "";
				 // 二级覆盖场景
				 String cover_sec_area = "";
				 // 二级覆盖场景细化
				 String cover_sec_area_info = "";
				 // 告警正文额外新增信息
				 String extrainfo = "";
				 if (o_object_class == "8105") {
					 // redis缓存外挂
					 // Object[] objects = (Object[]) rutil.getObject("eutrancell:" + o_int_id);
					 Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "eutrancell:" + o_int_id, "eutrancell");
					 List objectsList = objects == null ? null : Arrays.asList(objects);
					 if(objectsList != null && !objectsList.isEmpty()) {
							 cover_area          = Util.getTempV(objectsList, 1);
							 cover_area_info     = Util.getTempV(objectsList, 2);
							 cover_sec_area      = Util.getTempV(objectsList, 3);
							 cover_sec_area_info = Util.getTempV(objectsList, 4);
							 }
				 } else if (o_object_class == "3300") {
					 // redis缓存外挂
					 // Object[] objects = (Object[]) rutil.getObject("nrcell:" + o_int_id);
					 Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "nrcell:" + o_int_id, "nrcell");
					 List objectsList = objects == null ? null : Arrays.asList(objects);
					 if(objectsList != null && !objectsList.isEmpty()) {
							 cover_area          = Util.getTempV(objectsList, 1);
							 cover_area_info     = Util.getTempV(objectsList, 2);
							 cover_sec_area      = Util.getTempV(objectsList, 3);
							 cover_sec_area_info = Util.getTempV(objectsList, 4);
							 }
				 } else if (o_object_class == "8104") {
					 // redis缓存外挂
					 // Object[] objects = (Object[]) rutil.getObject("enodeb:" + o_int_id);
					 Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "enodeb:" + o_int_id, "enodeb");
					 List objectsList = objects == null ? null : Arrays.asList(objects);
					 if(objectsList != null && !objectsList.isEmpty()) {
							 cover_area          = Util.getTempV(objectsList, 1);
							 cover_area_info     = Util.getTempV(objectsList, 2);
							 cover_sec_area      = Util.getTempV(objectsList, 3);
							 cover_sec_area_info = Util.getTempV(objectsList, 4);
							 }
				 } else if (o_object_class == "3201") {
					 // redis缓存外挂
					 // Object[] objects = (Object[]) rutil.getObject("gnodeb:" + o_int_id);
					 Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, "gnodeb_cover_area:" + o_int_id, "gnodeb_cover_area");
					 List objectsList = objects == null ? null : Arrays.asList(objects);
					 if(objectsList != null && !objectsList.isEmpty()) {
							 cover_area          = Util.getTempV(objectsList, 1);
							 cover_area_info     = Util.getTempV(objectsList, 2);
							 cover_sec_area      = Util.getTempV(objectsList, 3);
							 cover_sec_area_info = Util.getTempV(objectsList, 4);
							 }
				 }
				 extrainfo += "\n" + "覆盖场景：" + "【" + cover_area + "】" + "-" + "【" + cover_area_info + "】" + "-" + "【" + cover_sec_area + "】" + "-" + "【" + cover_sec_area_info + "】";
				 o_alarm_text += extrainfo;
				 // log.info(o_fp0 + "，cover_area-info：" + extrainfo);
			 }
	   }

	   /**
		* 获取最小的type
		* @param list
		* @param now
		* @return
		*/
	   private int getSceneTypeRthandler(List list,Date now){
		   int result=4;
		   if(list==null||list.size()<=0){
			   return result;
		   }
		   for(Object item:list){
			   Object[] array = (Object[])item;
			   int type = ParseUtil.parseInt(array[0]);
			   Date start_time = ParseUtil.parseDate(array[3]);
			   Date stop_time = ParseUtil.parseDate(array[4]);
			   if(start_time.before(now)&&stop_time.after(now)&&type>=1&&type<result){
				   if((result=type)==1){
					   break;
				   }
			   }
		   }
		   return result;
	   }

	   private boolean executeRthandler(Command command, CommonAlarm src, CommonAlarm dest) {
		   context.put(StaticData.LOGGER,     log);
		   context.put(StaticData.ALARM_120,  src);
		   context.put(StaticData.ALARM_1406, dest);
		   return command.execute(context);
	   }

	  private String TranNetworkTypeRthandler(String extra_id3){
		   if(NetworkTypeMap.size()==0){
				   NetworkTypeMap.put("7","302");
					NetworkTypeMap.put("11","600");
					NetworkTypeMap.put("12","302");
					NetworkTypeMap.put("14","223");
					NetworkTypeMap.put("18","301");
					NetworkTypeMap.put("20","301");
					NetworkTypeMap.put("28","801");
					NetworkTypeMap.put("30","801");
					NetworkTypeMap.put("31","801");
					NetworkTypeMap.put("32","801");
					NetworkTypeMap.put("33","801");
					NetworkTypeMap.put("34","801");
					NetworkTypeMap.put("35","801");
					NetworkTypeMap.put("36","801");
					NetworkTypeMap.put("37","801");
					NetworkTypeMap.put("38","801");
					NetworkTypeMap.put("39","801");
					NetworkTypeMap.put("40","801");
					NetworkTypeMap.put("57","302");
					NetworkTypeMap.put("59","801");
					NetworkTypeMap.put("60","801");
					NetworkTypeMap.put("63","801");
					NetworkTypeMap.put("64","801");
					NetworkTypeMap.put("65","801");
					NetworkTypeMap.put("66","801");
					NetworkTypeMap.put("67","801");
					NetworkTypeMap.put("68","801");
					NetworkTypeMap.put("69","801");
					NetworkTypeMap.put("71","801");
					NetworkTypeMap.put("72","801");
					NetworkTypeMap.put("73","801");
					NetworkTypeMap.put("74","801");
					NetworkTypeMap.put("75","801");
					NetworkTypeMap.put("76","801");
					NetworkTypeMap.put("77","801");
					NetworkTypeMap.put("78","801");
					NetworkTypeMap.put("79","801");
					NetworkTypeMap.put("84","801");
					NetworkTypeMap.put("91","1202");
					NetworkTypeMap.put("95","801");
					NetworkTypeMap.put("96","801");
					NetworkTypeMap.put("99","801");
					NetworkTypeMap.put("100","801");
					NetworkTypeMap.put("101","801");
					NetworkTypeMap.put("105","302");
					NetworkTypeMap.put("106","801");
					NetworkTypeMap.put("107","801");
					NetworkTypeMap.put("108","302");
					NetworkTypeMap.put("109","801");
					NetworkTypeMap.put("110","801");
					NetworkTypeMap.put("112","801");
					NetworkTypeMap.put("113","801");
					NetworkTypeMap.put("114","801");
					NetworkTypeMap.put("115","801");
					NetworkTypeMap.put("116","801");
					NetworkTypeMap.put("117","801");
					NetworkTypeMap.put("118","801");
					NetworkTypeMap.put("120","801");
					NetworkTypeMap.put("125","301");
					NetworkTypeMap.put("126","901");
					NetworkTypeMap.put("128","801");
					NetworkTypeMap.put("130","801");
					NetworkTypeMap.put("131","801");
					NetworkTypeMap.put("135","801");
					NetworkTypeMap.put("137","801");
					NetworkTypeMap.put("146","302");
					NetworkTypeMap.put("148","801");
					NetworkTypeMap.put("150","301");
					NetworkTypeMap.put("154","301");
					NetworkTypeMap.put("163","302");
					NetworkTypeMap.put("172","801");
					NetworkTypeMap.put("179","801");
					NetworkTypeMap.put("198","801");
					NetworkTypeMap.put("200","801");
					NetworkTypeMap.put("201","801");
					NetworkTypeMap.put("202","801");
					NetworkTypeMap.put("209","1202");
					NetworkTypeMap.put("211","903");
					NetworkTypeMap.put("215","801");
					NetworkTypeMap.put("219","801");
					NetworkTypeMap.put("220","801");
					NetworkTypeMap.put("225","302");
					NetworkTypeMap.put("265","1202");
					NetworkTypeMap.put("266","801");
					NetworkTypeMap.put("267","801");
					NetworkTypeMap.put("271","302");
					NetworkTypeMap.put("272","901");
					NetworkTypeMap.put("273","302");
					NetworkTypeMap.put("274","211");
					NetworkTypeMap.put("275","302");
					NetworkTypeMap.put("276","902");
					// NetworkTypeMap.put("277","302");
					// OTT省中心节点=277（一级专业：家宽=12、二级专业：数据侧=1202）
					NetworkTypeMap.put("277","1202");
					NetworkTypeMap.put("278","1202");
					NetworkTypeMap.put("285","1202");
					NetworkTypeMap.put("287","902");
					NetworkTypeMap.put("288","902");
					NetworkTypeMap.put("289","600");
					NetworkTypeMap.put("290","600");
					NetworkTypeMap.put("293","1202");
					NetworkTypeMap.put("294","1202");
					NetworkTypeMap.put("295","901");
					NetworkTypeMap.put("296","801");
					NetworkTypeMap.put("300","801");
					NetworkTypeMap.put("301","801");
					NetworkTypeMap.put("302","801");
					NetworkTypeMap.put("303","801");
					NetworkTypeMap.put("304","221");
					NetworkTypeMap.put("305","302");
					NetworkTypeMap.put("312","801");
					NetworkTypeMap.put("313","801");
					NetworkTypeMap.put("314","801");
					//20181228 by liucaiyong
					NetworkTypeMap.put("321","801");
					NetworkTypeMap.put("322","801");
					NetworkTypeMap.put("323","801");
			NetworkTypeMap.put("324","903");
					NetworkTypeMap.put("325","903");
					NetworkTypeMap.put("286","1001");
					//20190114 by liucaiyong
					NetworkTypeMap.put("203","801");
					NetworkTypeMap.put("326","2001");
					NetworkTypeMap.put("327","230");

					NetworkTypeMap.put("328","903");
					NetworkTypeMap.put("329","500");

					NetworkTypeMap.put("330","303");
					NetworkTypeMap.put("331","303");
					NetworkTypeMap.put("299","1201");

					NetworkTypeMap.put("279","302");
					NetworkTypeMap.put("332","1001");

					//20191226 by mozhidong
					NetworkTypeMap.put("333","901");
					NetworkTypeMap.put("334","901");
					NetworkTypeMap.put("335","901");
					NetworkTypeMap.put("336","901");
					NetworkTypeMap.put("337","901");
					NetworkTypeMap.put("338","901");

					NetworkTypeMap.put("339","223");
					NetworkTypeMap.put("340","223");

					NetworkTypeMap.put("341","901");
					NetworkTypeMap.put("342","901");
					NetworkTypeMap.put("343","901");
					NetworkTypeMap.put("344","901");
					NetworkTypeMap.put("345","901");
					NetworkTypeMap.put("346","901");
					NetworkTypeMap.put("347","901");
					NetworkTypeMap.put("348","303");
					// 东信数据网IMS数通=349（一级专业：核心网=2、二级专业：PS域-GPRS=223）
					NetworkTypeMap.put("349","223");
					// 知识城省管设备=350（一级专业：IT网=9、二级专业：网管网=901）
					NetworkTypeMap.put("350","901");
					// OTT业管平台=351（一级专业：家宽=12、二级专业：数据侧=1202）
					NetworkTypeMap.put("351","1202");
					// OTT_CDN=352（一级专业：家宽=12、二级专业：数据侧=1202）
					NetworkTypeMap.put("352","1202");
					// 网络线4A=353（一级专业：IT网=9、二级专业：网管网=901）
					NetworkTypeMap.put("353","901");
					// 银河播控平台=354（一级专业：家宽=12、二级专业：数据侧=1202）
					NetworkTypeMap.put("354","1202");
					// 溯源中心=405（一级专业：内容网=7、二级专业：公共=701
					NetworkTypeMap.put("405","701");
					// 内容中心=406（一级专业：内容网=7、二级专业：公共=701
					NetworkTypeMap.put("406","701");
					// 边缘中心节点=407（一级专业：内容网=7、二级专业：公共=701
					NetworkTypeMap.put("407","701");
					// 边缘下沉节点=408（一级专业：内容网=7、二级专业：公共=701
					NetworkTypeMap.put("408","701");
				}

			 if(NetworkTypeMap.containsKey(extra_id3)){
						return NetworkTypeMap.get(extra_id3);
			}else{
						return "0";
			}
	   }
	   private String TranEqpObjectClassRthandler(String eqp_object_class){
			if(eqpObjectClassMap.size()==0){
				//eqpObjectClassMap.put("124","269");
				//eqpObjectClassMap.put("8102","8109");
			   eqpObjectClassMap.put("66003","900");
			   eqpObjectClassMap.put("3004","905");
			 }
			if(eqpObjectClassMap.containsKey(eqp_object_class)){
						return eqpObjectClassMap.get(eqp_object_class);
			}else{
						return eqp_object_class;
			}
	   }
	   /**
		* 最新标准化处理
		* @param src
		* @param dest
		*/
	   private void setNewAlarmStandardRthandler(CommonAlarm src, CommonAlarm dest){
			//new change 对传输、东信侧 阿尔卡特做临时转化成上海贝尔
		 if(o_vendor_id=="0" && (o_omc_id in ["6601","6602","6603","6607","6608"] || o_professional_type == "3")){
				o_vendor_id="12";
				o_vendor_name = "上海贝尔";
			}
			//对本地与集团不同的设备类型ID 做变换
		   //o_eqp_object_class=TranEqpObjectClassRthandler(o_eqp_object_class);
		   //o_object_class=TranEqpObjectClassRthandler(o_object_class);
		   //关于实现告警设备 类型统一,lcy@20190619,required by wangyingfneg
				if(o_eqp_object_class in ["6111","6103","6102"]){
					o_eqp_object_class = "6123";
				}else if(o_eqp_object_class == "8103"){
					o_eqp_object_class = "8102";
				}else if(o_eqp_object_class == "8108"){
					o_eqp_object_class = "8106";
				}else if(o_object_class in ["81091","8109"]){
					o_eqp_object_class = "81093";
				}

		   dest.setValue("standard_flag", o_standard_flag);
		   dest.setValue("org_type", o_org_type);
		   dest.setValue("org_severity", o_org_severity);
		   dest.setValue("professional_type", o_professional_type);
		   dest.setValue("eqp_object_class", o_eqp_object_class);
		   dest.setValue("vendor_id", o_vendor_id);
		   dest.setValue("title_text", o_title_text);
		   dest.setValue("object_class", o_object_class);
		   dest.setValue("probable_cause", o_probable_cause);
		   dest.setValue("locate_name", o_locate_name);
		   dest.setValue("eqp_version", o_eqp_version);
		   dest.setValue("vendor_severity", o_vendor_severity);
		   dest.setValue("alarm_explanation", o_alarm_explanation);
		   dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
		   dest.setValue("alarm_check", o_alarm_check);
		   dest.setValue("layer_rate", o_layer_rate);
		   dest.setValue("board_type", o_board_type);

			  String srcVendorId = o_vendor_id;
		   if(o_professional_type == "4") {	// 动环告警vendor_id使用50000
			   o_vendor_id = "50000";
			   dest.setValue("vendor_id", o_vendor_id);
		   }
		   //lgy@20181221,直放站厂家ID统一用14去查key组合
		   if(o_eqp_object_class=="11004"){
				dest.setValue("vendor_id", "14");
		   }

		   log.info("new stand-{} begin,prof={}, title_text={}, alarm_explanation_addition={}, locate_name={}, network_type={}, vendor_id={}, eqp_object_class={}, org_type={}", o_fp0, o_professional_type, o_title_text, o_alarm_explanation_addition, o_locate_name, o_network_type, o_vendor_id, o_eqp_object_class, o_org_type);

			 this.executeRthandler(alarmStandCommand, src, dest);

		   if(o_professional_type == "4") {	// 还原告警vendor_id
			   o_vendor_id = srcVendorId;
			   this.executeRthandler(powerStandardIdCommand, src, dest);	// 动环网管告警ID处理
		   }


		   if(dest.getString("standard_flag") == "3") {
			   dest.setValue("standard_alarm_id", "0000-000-000-00-000000");
		   }
		   log.info("new stand-{} finish,flag={},standard_alarm_id={},vendor={}", o_fp0, dest.getString("standard_flag"), dest.getString("standard_alarm_id"), o_vendor_id);

				o_standard_flag = dest.getString("standard_flag");
				o_org_type = dest.getString("org_type");
			  o_org_severity = dest.getString("org_severity");
			  o_logic_alarm_type = dest.getString("logic_alarm_type");
			  //o_logic_sub_alarm_txt = dest.getString("logic_sub_alarm_txt");
			  o_standard_alarm_name = dest.getString("standard_alarm_name");
			  o_standard_alarm_id = dest.getString("standard_alarm_id");
			  o_effect_ne = dest.getString("effect_ne");
			  o_effect_service = dest.getString("effect_service");
			  o_alarm_value = dest.getString("alarm_value");
			  o_business_type = dest.getString("business_type");
			  //o_business_system = dest.getString("business_system");
			  //o_remote_ne_flag = dest.getString("remote_ne_flag");
			  o_send_jt_flag = dest.getString("send_jt_flag");
				//new change 对传输、东信侧上海贝尔替换回阿尔卡特
				// omc_id=9001时钟同步网告警不参与上海贝尔转换为阿尔卡特的特殊处理
		  if(o_vendor_id=="12" && o_omc_id != "9001" && (o_omc_id in ["6601","6602","6603","6607","6608"] || o_professional_type == "3")){
			  o_vendor_id="0";
			  o_vendor_name = "阿尔卡特";
				}
			  //lgy@20181213,department_process_flag,province_process_flag特殊处理
				o_department_process_flag="3";
				o_province_process_flag="1";
				if(o_standard_flag=="2"){
				//IT网管告警解释赋值 added by lgy@20180717  required by shanchunlan
			  if((o_omc_id == "6601" || o_omc_id == "6602"|| o_omc_id == "6603")&&o_professional_type == "5" )
				 {
				  o_special_field20 = dest.getString("alarm_explanation");
				 }
		  }else if(o_standard_flag=="3"&&o_omc_id=="6601"||o_omc_id=="6602"){
					o_org_severity="2";
					o_redefine_type=o_org_type;
				}else if(o_standard_flag=="3"){
					o_org_severity="1";
					o_send_jt_flag="0";
					o_redefine_type=o_org_type;
				}
				o_redefine_severity = o_org_severity;
				//NFV告警network_type取自120消息  added by lgy@20180725  required by wangyingfeng
		 if(o_network_type_top=="20"){
			  //o_severity_keycode=i_network_type;
			}
		 //if(o_omc_id == "6101"||o_omc_id == "6601" || o_omc_id == "6602")//动环增加OMC，131107
			 if(o_omc_id == "6601" || o_omc_id == "6602"||o_professional_type=="4")
			 {
					o_severity_keycode = i_network_type;
				}
				//标准化后还原, liucaiyong@20190116
				if(o_omc_id in ["6601","6602","6603","6607","6608"]){
					o_probable_cause = o_alarm_fp;
				}
	   }

	   /**
		* 最新一级专业/二级专业处理
		* <pre>
		* 1.查询tia_eqpobject2networktype表
		* select professional_type network_type_top,network_type network_type from tia_eqpobject2networktype where object_class=$eqp_object_classs
		* $network_type_top=professional_type
		* $network_type=network_type
		*
		* 2.查询资源表
		* 如果1中处理查不到数据，则查询资源表
		* 1)network_type
		* select network_type from objects where int_id/fm_rdn=$int_id/$rdn
		* $network_type=network_type
		* 2)network_type_top
		* 根据network_type,去掉后两位作为network_type_top
		* $network_type_top=$network_type去掉后两位
		* </pre>
		* @param dest
		*/
		private void setNetworkTypeRthandler(CommonAlarm dest) {
			log.info("setNetworkTypeRthandler_new network-{},by eqp,network={}/{}", o_fp0, dest.getString("network_type"), dest.getString("network_type_top"));
				if(StringUtils.isNotBlank(o_network_type) && o_network_type != "0"){
						dest.setValue("network_type", o_network_type);

						if(StringUtils.isBlank(o_network_type_top)){
							o_network_type_top = o_network_type.substring(0, o_network_type.length() - 2);
						}
				dest.setValue("network_type_top", o_network_type_top);
						return;
				}
				String eqpObjectClass = dest.getString("eqp_object_class");
			String key = "network_type:" + eqpObjectClass;
			 List<?> list = Util.getCache(util, "resourceCache", key, "network_type");
			//List<?> list = Util.getObject("resourceCache", key, "network_type");
			int size = (list==null?0:list.size());
			if(size > 0) {
				dest.setValue("network_type",     Util.getTempV(list, 1));	// 1 - network_type
				dest.setValue("network_type_top", Util.getTempV(list, 2));	// 2 - professional_type
			}
			log.info("new network-{},by eqp,network={}/{},key={},size={}", o_fp0, dest.getString("network_type"), dest.getString("network_type_top"), key, size);

			if(size == 0) {
				key = "objects:" + dest.getString("eqp_int_id");
				list = Util.getCache(util, "resourceCache", key, "objects");
				//list = Util.getObject("resourceCache", key, "objects");
				size = (list==null?0:list.size());
				String networkType = null;
				if(size > 0) {
					networkType = Util.getTempV(list, 2);	// objects.network_type - 2
				}
				if(networkType != null && networkType != "") {
					dest.setValue("network_type", networkType);
					String networkTypeTop = null;
					/*
								   if(networkType.length() > 2) {	// network_type去掉后两位
									   networkTypeTop = networkType.substring(0, networkType.length() - 2);
								   }
								   if(networkTypeTop != null) {
									   dest.setValue("network_type_top", networkTypeTop);
								   }
								   */
				}
				log.info("new network-{},by res,network={}/{},key={},size={}", o_fp0, dest.getString("network_type"), dest.getString("network_type_top"), key, size);
			}
			o_network_type     = dest.getString("network_type");
			o_network_type_top = dest.getString("network_type_top");
			if(o_omc_id=="6601"||o_omc_id=="6602"||o_omc_id=="6603"){
				String networkTypeTop = null;
				o_network_type=TranNetworkTypeRthandler(o_extra_id3);
				if(o_network_type!="0"){
					dest.setValue("network_type", o_network_type);
				}else{
					o_network_type=dest.getString("network_type");
				}
				if(o_network_type.length() > 2) {	// network_type去掉后两位
					networkTypeTop = o_network_type.substring(0, o_network_type.length() - 2);
				}
				if(networkTypeTop != null) {
					dest.setValue("network_type_top", networkTypeTop);
				}
				log.info("tran fp0-{},network={}", o_fp0, dest.getString("network_type"));
			}
		}
	   private void setNewNetworkTypeRthandler(CommonAlarm dest) {
		   //lgy@20181225,解决传输OMC告警问题
		   if(o_professional_type=="3"&&o_eqp_object_class=="100"){
				   o_eqp_object_class="2100";
			   }
		   dest.setValue("eqp_object_class", o_eqp_object_class);
		   dest.setValue("eqp_int_id",       o_eqp_int_id);

		   setNetworkTypeRthandler(dest);

		   o_network_type     = dest.getString("network_type");
		   o_network_type_top = dest.getString("network_type_top");
		   //lgy@20181213,告警业务子类映射二级专业
		   if(o_professional_type!="7"&&o_professional_type!="5"&&(o_omc_id=="6601"||o_omc_id=="6602"||o_omc_id=="6603")){
			   String networkTypeTop = null;
				o_network_type=TranNetworkTypeRthandler(o_extra_id3);
			   if(o_network_type!="0"){
				   dest.setValue("network_type", o_network_type);
			   }else{
				   o_network_type=dest.getString("network_type");
			   }
				if(o_network_type.length() > 2) {	// network_type去掉后两位
					networkTypeTop = o_network_type.substring(0, o_network_type.length() - 2);
				}
				if(networkTypeTop != null) {
					o_network_type_top=networkTypeTop;
					dest.setValue("network_type_top", networkTypeTop);
				}
			   log.info("tran fp0-{},network={}", o_fp0, dest.getString("network_type"));
		   }
		   //lgy@20181213,自监控告警一、二级专业特殊处理
		   if((o_professional_type=="5"||o_professional_type=="7")&&(o_omc_id=="6601"||o_omc_id=="6602"||o_omc_id=="6603")){
			   if(o_professional_type=="5"){
				   o_network_type="901";
				   o_network_type_top="9";
			   }else if(o_eqp_object_class in ["905","900","901"]&&o_professional_type=="7"){
				   o_network_type="701";
				   o_network_type_top="7";
				   }
			   dest.setValue("network_type", o_network_type);
			dest.setValue("network_type_top", o_network_type_top);
		   }
		   //lgy@20181226,彩铃的专业特殊处理
		   if(o_eqp_object_class=="140"){
			   o_network_type="801";
			   o_network_type_top="8";
			   dest.setValue("network_type", o_network_type);
			dest.setValue("network_type_top", o_network_type_top);
			   }
			   //lgy@20181218,NFV 一、二级专业特殊处理
		 if(o_professional_type=="20"){
				 o_network_type="2001";
				   o_network_type_top="20";
				   dest.setValue("network_type", o_network_type);
				   dest.setValue("network_type_top", o_network_type_top);
			 }
			 //lgy@20190124,处理4G-OMC告警的专业
		 if(o_alarm_source=="统一采集"&&o_object_class=="100"&&StringUtils.isNotBlank(i_network_type)&&o_professional_type!= "3"){
				 o_network_type=i_network_type;
				 if(o_network_type.length() > 2) {	// network_type去掉后两位
						o_network_type_top = o_network_type.substring(0, o_network_type.length() - 2);
					}
				 dest.setValue("network_type", o_network_type);
				   dest.setValue("network_type_top", o_network_type_top);
			 }
			//liucaiyong@20181208,解决爱立信  告警辅助字段
		   if(o_vendor_id  == "1"){
			   if(StringUtils.isBlank(o_locate_name)){
				   o_locate_name = "无";
			   }
			   o_alarm_explanation_addition = o_locate_name;
			   dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
		   }
		   //liucaiyong@20181210,解决中兴4G 告警辅助字段
		   //if(o_vendor_id  == "7" && o_eqp_object_class == "8104"){
		   if(o_vendor_id  == "7" && o_eqp_object_class in ["8104","100","41011"]){
			   if(StringUtils.isBlank(o_locate_name)){
				   o_locate_name = "无";
			   }
			   o_alarm_explanation_addition = o_locate_name;
			   dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
		   }
		   //liucaiyong@20191112,解决华为 告警辅助字段
		   if(o_vendor_id  == "8" && (o_network_type == "1002" || o_network_type_top == "1")){
			   if(StringUtils.isBlank(o_locate_name)){
				   o_locate_name = "无";
			   }
			   o_alarm_explanation_addition = o_locate_name;
			   dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
		   }

			 // 解决诺基亚告警辅助字段
			 if(o_vendor_id  == "4"){
				 if(StringUtils.isBlank(o_locate_name)){
					 o_locate_name = "无";
				 }
				 o_alarm_explanation_addition = o_locate_name;
				 dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
			 }

		   //liucaiyong@20181208,解决部分告警无告警类别
		   //liucaiyong@20190819,部分类型不赋值1
			   if(StringUtils.isBlank(o_org_type) || (o_alarm_source!="JZXN"&&o_alarm_source!="BOCO_WNMS"&&!(o_omc_id in ["6601","6602","6603","6607","6608","6609"])&&!(o_org_type in ["13","14","15","16","18"]))){
				   o_org_type = "1";
				   dest.setValue("org_type", o_org_type);
			   }
			   //lgy@20190118,传输网管告警，层速率为空赋默认值：速率无关
			   if(o_alarm_source=="传输网管"&&StringUtils.isBlank(o_layer_rate)){
				   o_layer_rate="22";
			   }
			   //new change 东兴推送数据网告警probable_cause取自probable_cause_txt add lgy@20181210
				if(o_omc_id == "6601" || o_omc_id == "6602" || o_omc_id == "6603"){
					o_probable_cause=o_probable_cause_txt;
				}
			//爱立信SCP的probable_cause特殊处理，从正文中截取"对象标识"的值 added by lgy@20181211
		  if (o_eqp_object_class == "111"&&o_vendor_id=="1") {
				 def matcher =  o_alarm_text =~/\n对象标识\s+=\s+(\S+)\s*\n/;
			if (matcher.size()>0) {
				   o_probable_cause = matcher[0][1] ;
			  }
		  }
				//liucaiyong@20181211，为标准化（动环赋值逻辑提前）
				//20121120 增加处理动环专业机房重要级别信息
				//if (o_omc_id=="6101")  //动环增加OMC，131107
				//动环获取区县,shanchunlan@2014070317
				if (o_professional_type=="4")
				{
					if(StringUtils.isNotBlank(o_special_field11)){
						String roomkey="vw_machinery_room_dh:"+o_special_field11;
						Object[] room = util.getObject(CUSTOMCACHE, roomkey,"nrmdb.vw_machinery_room_dh");
						List roomList = room==null?null:Arrays.asList(room);
						//动环 将机房名称（SPECIAL_FIELD22）修改为综资机房名称 added  by lgy@20180510 required by wangyingfeng 需求:CMCC-GD-DRITXQ-20180112-008
						if(roomList!=null&&!roomList.isEmpty()){
							o_special_field21 = Util.getTempV(roomList, 0);
							o_special_field22 = Util.getTempV(roomList,9);
							o_special_field1	= Util.getTempV(roomList,2);
							o_corr_str = Util.getTempV(roomList, 6);
							o_type_keycode = Util.getTempV(roomList,7);
							o_object_level = Util.getTempV(roomList,8);
							log.info(o_fp0+"  o_object_level :"+o_object_level);
						}
						else{
							o_special_field1="";
							o_corr_str="";
						}
					}
					else
					{
						o_special_field1="";
						o_corr_str="";
					}
					////liucaiyong@20181211,动环对象级别映射告警辅助字段
					//if(o_object_level in ["47","48","49","50","51"]){
					//	o_alarm_explanation_addition = "通信基站";
					//}else if(o_object_level in ["41","42"]){
					//	o_alarm_explanation_addition = "通信机楼";
					//}else if(o_object_level in ["43","44","45","46"]){
					//	o_alarm_explanation_addition = "传输节点";
					//}else{
					//	o_alarm_explanation_addition = "传输节点";
					//}
					//dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
				}

				// CMCC-GD-DRITXQ-20210322-044_关于动环告警解析、标准化及上报集团需求
				if (o_network_type == "500") {
					// 若o_object_level != 52，则赋值o_locate_name为传输节点
					if(o_object_level != "52") {
						o_locate_name = "传输节点";
						o_alarm_explanation_addition = o_locate_name;
						dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
							} else if(o_object_level == "52") {
								String key = "tai_central_building:" + o_special_field19;
								// redis缓存外挂
								// Object[] objects = (Object[]) rutil.getObject(key);
								Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "tai_central_building");
								List objectsList = objects == null ? null : Arrays.asList(objects);
								// 若o_object_level = 52且o_special_field19存在于tai_central_building，则赋值o_locate_name为数据中心
								// 若o_object_level = 52且o_special_field19不存在于tai_central_building，则赋值o_locate_name为通信机楼
								if(objectsList != null && !objectsList.isEmpty()) {
									o_locate_name = "数据中心";
								} else {
									o_locate_name = "通信机楼";
								}
								o_alarm_explanation_addition = o_locate_name;
								dest.setValue("alarm_explanation_addition", o_alarm_explanation_addition);
							}
				}

				// CMCC-GD-DRITXQ-20210322-044_关于动环告警解析、标准化及上报集团需求
				if (o_network_type == "500" && StringUtils.isNotBlank(o_object_class) && StringUtils.isNotBlank(o_title_text)) {
				  String key = "tai_dh_alarmid:" + o_object_class + ":" + o_title_text;
				  // redis缓存外挂
				  // Object[] objects = (Object[]) rutil.getObject(key);
				  Object[] objects = (Object[]) util.getObject(CUSTOMCACHE, key, "tai_dh_alarmid");
				  List objectsList = objects == null ? null : Arrays.asList(objects);
				  if(objectsList != null && !objectsList.isEmpty()) {
					  o_probable_cause = Util.getTempV(objectsList, 3); // omc_alarm_id
					  }
				}

				//lgy@20190118,传输网管告警，层速率为空赋默认值：速率无关
		   if(o_alarm_source=="传输网管"&&StringUtils.isBlank(o_layer_rate)){
			   o_layer_rate="22";
			   }
		   //lgy@20190115,物联网专业赋值
		   if((o_vendor_id=="1"&&o_eqp_object_class=="8101"&&o_title_text in ["epsEnodeBUnreachable","nwcEnodeBPlmnMismatch","sctpAssocReestablishInitiated","iwsIpAddressCouldNotBeDerived",
		   "nwcMmeEnodebUpdateIncomplete","nwcEnodeBTaiMismatch"])||(o_vendor_id=="8"&&o_eqp_object_class=="8101"&&o_title_text=="MME和eNodeB配置的TAI不一致")){
				   if(StringUtils.isNotBlank(o_remote_eqp_label)){
					   String tkey = "enodeb_NB:"+o_remote_eqp_label;
				Object[] results = util.getObject(CUSTOMCACHE, tkey,"enodeb_NB");
				List resultlist = results==null?null:Arrays.asList(results);
				if(resultlist!=null&&!resultlist.isEmpty()){
					o_remote_eqp_label = Util.getTempV(resultlist,1);
				  o_remote_int_id = Util.getTempV(resultlist,2);
				  o_remote_resource_status = Util.getTempV(resultlist,4);
				  String upd_flag = Util.getTempV(resultlist,3);
				  if(upd_flag=="9"){
					  o_network_type="1001";
							   o_network_type_top="10";
							   dest.setValue("network_type", o_network_type);
							   dest.setValue("network_type_top", o_network_type_top);
					  }
						   }
					   }
			   }
		   if((o_vendor_id=="8"&&o_eqp_object_class=="8102"&&o_title_text in ["LNS无响应","LNS组无响应"])||(o_vendor_id=="8"&&o_eqp_object_class=="8102"&&o_title_text in ["L2TP LNS Failure","L2TP","L2TP LNS Connection Failure"])){
				   o_network_type="1001";
				   o_network_type_top="10";
				   dest.setValue("network_type", o_network_type);
				   dest.setValue("network_type_top", o_network_type_top);
			   }

			//关于综合监控后台新增告警白名单调整告警类别需求 sunyuqiu,add by liucaiyong@20190814
			List<?> list = Util.getCache(util, CUSTOMCACHE, joinKeyRthandler("title_white",o_title_text), "title_white");
			// List<?> list = Util.getObject(CUSTOMCACHE, joinKeyRthandler("title_white",o_title_text), "title_white");
			if(list!=null &&  list.size()> 0) {
				o_org_type = Util.getTempV(list, 1);
				log.info(o_fp0 + " reset ort_type:" + o_org_type);
			}
			//无告警上报检测， liucaiyong@20190905
			if(o_sub_alarm_type == "966"){
					o_network_type="901";
				   o_network_type_top="9";
				   dest.setValue("network_type", o_network_type);
				   dest.setValue("network_type_top", o_network_type_top);
			}
			//PGW性能告警2条标题需处理为物联网专业（对应需求CMCC-GD-DRITXQ-20190801-010	关于部署性能告警接入需求（请协助分派统一采集） -企业APN告警解析）,liucaiyong@20190920
			if(o_org_type == "2" && o_title_text in ["企业APN-GI下行流量同比低于一级门限","企业APN-GI上行流量同比低于一级门限"]){
					o_network_type="1001";
				   o_network_type_top="10";
				   dest.setValue("network_type", o_network_type);
				   dest.setValue("network_type_top", o_network_type_top);
			}

		//WNMS-REAL and WNMS-SYNC
		String wnmsReal = "WNMS-REAL:";
		String wnmsSync = "WNMS-SYNC:";

			//亿阳侧网管检测告警标准化调整 - SC, sunyuqiu by liucaiyong@20190920
			if(o_title_text.startsWith(wnmsReal) ||o_title_text.startsWith(wnmsSync)||o_alarm_title in ["99","98","26441660","26445340"]){
				o_professional_type="5";
				o_vendor_id = "150";
				o_vendor_name = "亿阳";
				o_network_type="901";
			  o_network_type_top="9";

			  dest.setValue("network_type", o_network_type);
			  dest.setValue("network_type_top", o_network_type_top);

			  log.info(o_fp0+"  o_network_type :"+o_network_type);
			}
	   }

		 // 将nrmdb.region_city_local的数据调整到代码逻辑中，而不是从缓存读取，防止缓存加载不到地市信息
		 private void getCityInfoWithMap(String city){
		   switch(city)
		   {
		     case "672480913":
		     case "潮阳市":
		                  cityMap = ["city_id":"672480913","province_name":"广东省","province_id":"-1489894494","region_name":"汕头","region_id":"1954403854","city_name":"潮阳市"];
		                  break;

		     case "-2107737273":
		     case "潮州市":
		                  cityMap = ["city_id":"-2107737273","province_name":"广东省","province_id":"-1489894494","region_name":"潮州","region_id":"617791944","city_name":"潮州市"];
		                  break;

		     case "-493814734":
		     case "从化市":
		                  cityMap = ["city_id":"-493814734","province_name":"广东省","province_id":"-1489894494","region_name":"广州","region_id":"609737586","city_name":"从化市"];
		                  break;

		     case "1641999133":
		     case "东莞市":
		                  cityMap = ["city_id":"1641999133","province_name":"广东省","province_id":"-1489894494","region_name":"东莞","region_id":"-594453696","city_name":"东莞市"];
		                  break;

		     case "936889176":
		     case "番禺市":
		                  cityMap = ["city_id":"936889176","province_name":"广东省","province_id":"-1489894494","region_name":"广州","region_id":"609737586","city_name":"番禺市"];
		                  break;

		     case "1022477377":
		     case "佛山市":
		                  cityMap = ["city_id":"1022477377","province_name":"广东省","province_id":"-1489894494","region_name":"佛山","region_id":"1510006446","city_name":"佛山市"];
		                  break;

		     case "1628882058":
		     case "广州市":
		                  cityMap = ["city_id":"1628882058","province_name":"广东省","province_id":"-1489894494","region_name":"广州","region_id":"609737586","city_name":"广州市"];
		                  break;

		     case "-1414777210":
		     case "河源市":
		                  cityMap = ["city_id":"-1414777210","province_name":"广东省","province_id":"-1489894494","region_name":"河源","region_id":"349252210","city_name":"河源市"];
		                  break;

		     case "1909349069":
		     case "花都市":
		                  cityMap = ["city_id":"1909349069","province_name":"广东省","province_id":"-1489894494","region_name":"广州","region_id":"609737586","city_name":"花都市"];
		                  break;

		     case "852452198":
		     case "惠州市":
		                  cityMap = ["city_id":"852452198","province_name":"广东省","province_id":"-1489894494","region_name":"惠州","region_id":"-1599349917","city_name":"惠州市"];
		                  break;

		     case "1756771793":
		     case "江门市":
		                  cityMap = ["city_id":"1756771793","province_name":"广东省","province_id":"-1489894494","region_name":"江门","region_id":"-169307475","city_name":"江门市"];
		                  break;

		     case "-863153540":
		     case "揭阳市":
		                  cityMap = ["city_id":"-863153540","province_name":"广东省","province_id":"-1489894494","region_name":"揭阳","region_id":"-2089824983","city_name":"揭阳市"];
		                  break;

		     case "229360282":
		     case "茂名市":
		                  cityMap = ["city_id":"229360282","province_name":"广东省","province_id":"-1489894494","region_name":"茂名","region_id":"-1125282617","city_name":"茂名市"];
		                  break;

		     case "104629030":
		     case "梅州市":
		                  cityMap = ["city_id":"104629030","province_name":"广东省","province_id":"-1489894494","region_name":"梅州","region_id":"1264590310","city_name":"梅州市"];
		                  break;

		     case "-50064015":
		     case "南海市":
		                  cityMap = ["city_id":"-50064015","province_name":"广东省","province_id":"-1489894494","region_name":"佛山","region_id":"1510006446","city_name":"南海市"];
		                  break;

		     case "838185425":
		     case "清远市":
		                  cityMap = ["city_id":"838185425","province_name":"广东省","province_id":"-1489894494","region_name":"清远","region_id":"1131194941","city_name":"清远市"];
		                  break;

		     case "-1674715417":
		     case "汕头市":
		                  cityMap = ["city_id":"-1674715417","province_name":"广东省","province_id":"-1489894494","region_name":"汕头","region_id":"1954403854","city_name":"汕头市"];
		                  break;

		     case "-2007780382":
		     case "汕尾市":
		                  cityMap = ["city_id":"-2007780382","province_name":"广东省","province_id":"-1489894494","region_name":"汕尾","region_id":"792359234","city_name":"汕尾市"];
		                  break;

		     case "-649370270":
		     case "韶关市":
		                  cityMap = ["city_id":"-649370270","province_name":"广东省","province_id":"-1489894494","region_name":"韶关","region_id":"-178654600","city_name":"韶关市"];
		                  break;

		     case "1703003042":
		     case "深圳市":
		                  cityMap = ["city_id":"1703003042","province_name":"广东省","province_id":"-1489894494","region_name":"深圳","region_id":"1819935571","city_name":"深圳市"];
		                  break;

		     case "554048299":
		     case "顺德市":
		                  cityMap = ["city_id":"554048299","province_name":"广东省","province_id":"-1489894494","region_name":"佛山","region_id":"1510006446","city_name":"顺德市"];
		                  break;

		     case "-274261379":
		     case "阳江市":
		                  cityMap = ["city_id":"-274261379","province_name":"广东省","province_id":"-1489894494","region_name":"阳江","region_id":"362836539","city_name":"阳江市"];
		                  break;

		     case "1515153790":
		     case "云浮市":
		                  cityMap = ["city_id":"1515153790","province_name":"广东省","province_id":"-1489894494","region_name":"云浮","region_id":"1901071257","city_name":"云浮市"];
		                  break;

		     case "1614143851":
		     case "增城市":
		                  cityMap = ["city_id":"1614143851","province_name":"广东省","province_id":"-1489894494","region_name":"广州","region_id":"609737586","city_name":"增城市"];
		                  break;

		     case "1528115507":
		     case "湛江市":
		                  cityMap = ["city_id":"1528115507","province_name":"广东省","province_id":"-1489894494","region_name":"湛江","region_id":"-435321011","city_name":"湛江市"];
		                  break;

		     case "98385249":
		     case "肇庆市":
		                  cityMap = ["city_id":"98385249","province_name":"广东省","province_id":"-1489894494","region_name":"肇庆","region_id":"2141108882","city_name":"肇庆市"];
		                  break;

		     case "1050163130":
		     case "中山市":
		                  cityMap = ["city_id":"1050163130","province_name":"广东省","province_id":"-1489894494","region_name":"中山","region_id":"-506001368","city_name":"中山市"];
		                  break;

		     case "-40145851":
		     case "珠海市":
		                  cityMap = ["city_id":"-40145851","province_name":"广东省","province_id":"-1489894494","region_name":"珠海","region_id":"879804769","city_name":"珠海市"];
		                  break;

		     default:
		            // nrmdb.region_city_local的数据除以上地市外。默认保持原有信息
		            cityMap = ["city_id":o_city_id,"province_name":o_province_name,"province_id":o_province_id,"region_name":o_region_name,"region_id":o_region_id,"city_name":o_city_name];
		            break;
		   }
		 }

		 private void setGcssInfo(String object_class,String int_id,String eqp_object_class,String eqp_int_id){
		   // 使用crc32算法计算int_id会有一定概率重复，导致关联错集客业务信息，底层资源采集逻辑修改暂时无法实现，折中方案：判断object_class、int_id和eqp_object_class、eqp_int_id都能查询到集客信息，才需关联集客业务信息
		     boolean gcss_check_flag = false;
		     String tmp;
		     String tmp_check;
		     //set client
		     String task = "gcss_client";
		     List results = util.getObject(SimpleFindUtil.RESOURCE_CACHE,joinKey(task, object_class,int_id),task);
		     if (results!=null && !results.isEmpty()) {
		         for (Object item : results) {
		             Object[] result = (Object[])item;
		             if (result==null || result.length<1) {
		                 break;
		             }
		             List olist = Arrays.asList(result);
		             tmp	=	Util.getTempV(olist,2);//client_id

		             // 折中方案：判断object_class、int_id和eqp_object_class、eqp_int_id都能查询到集客信息，才需关联集客业务信息
		             List results_check = util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKey(task, eqp_object_class, eqp_int_id), task);
		             if (results_check != null && !results_check.isEmpty()) {
		                 for (Object item_check : results_check) {
		                     Object[] result_check = (Object[])item_check;
		                     if (result_check == null || result_check.length<1) {
		                       break;
		                       }
		                       List olist_check = Arrays.asList(result_check);
		                       tmp_check	=	Util.getTempV(olist_check, 2); // client_id
		                       if (tmp_check == tmp) {
		                         gcss_check_flag = true;
		                         }
		                 }
		             }

		             if (gcss_check_flag == false) {
		               // [gcss_check_flag = false]则表示eqp_object_class、eqp_int_id查询不到集客信息，不需要关联集客业务信息
		               log.debug("setGcssInfo, gcss_client-fp0={}, gcss_check_flag={}, object_class={}, int_id={}, eqp_object_class={}, eqp_int_id={}", o_fp0, gcss_check_flag, object_class, int_id, eqp_object_class, eqp_int_id);
		               continue;
		               }
		             // 折中方案：判断object_class、int_id和eqp_object_class、eqp_int_id都能查询到集客信息，才需关联集客业务信息

		             o_gcss_client  = appendStr(o_gcss_client,tmp);
		             tmp	=	Util.getTempV(olist,3);//client_name
		             o_gcss_client_name  = appendStr(o_gcss_client_name,tmp);
		             tmp	=	Util.getTempV(olist,4);//client_level
		             o_gcss_client_level = LevelCompare("reverse", tmp, o_gcss_client_level);
		             tmp	=	Util.getTempV(olist,5);//gcss_client_grade
		             o_gcss_client_grade = LevelCompare("gcss_client_grade", tmp, o_gcss_client_grade);
		             tmp	=	Util.getTempV(olist,6);//gcss_client_grade_mgt
		             o_gcss_client_grade_mgt = LevelCompare("gcss_client_grade_mgt", tmp, o_gcss_client_grade_mgt);
		         }
		         o_gcss_client_num=this.distinceNum(o_gcss_client);
		         log.info(o_fp0+" "+task+":int_id["+int_id+"],o_gcss_client["+o_gcss_client+"],o_gcss_client_numm,["+o_gcss_client_num+"],o_gcss_client_name["+o_gcss_client_name+"],o_gcss_client_level["+o_gcss_client_level+"],o_gcss_client_grade["+o_gcss_client_grade+"],o_gcss_client_grade_mgt["+o_gcss_client_grade_mgt+"]");
		     }
		     //set service
		     task = "gcss_service";
		     results = util.getObject(SimpleFindUtil.RESOURCE_CACHE,joinKey(task, object_class,int_id),task);
		     if (results!=null && !results.isEmpty()) {
		         for (Object item : results) {
		             Object[] result = (Object[])item;
		             if (result==null || result.length<1) {
		                 break;
		             }
		             List olist = Arrays.asList(result);
		             tmp	=	Util.getTempV(olist,2);//service_id

		             // 折中方案：判断object_class、int_id和eqp_object_class、eqp_int_id都能查询到集客信息，才需关联集客业务信息
		             List results_check = util.getObject(SimpleFindUtil.RESOURCE_CACHE, joinKey(task, eqp_object_class, eqp_int_id), task);
		             if (results_check != null && !results_check.isEmpty()) {
		                 for (Object item_check : results_check) {
		                     Object[] result_check = (Object[])item_check;
		                     if (result_check == null || result_check.length<1) {
		                       break;
		                       }
		                       List olist_check = Arrays.asList(result_check);
		                       tmp_check	=	Util.getTempV(olist_check, 2); // service_id
		                       if (tmp_check == tmp) {
		                         gcss_check_flag = true;
		                         }
		                 }
		             }

		             if (gcss_check_flag == false) {
		               // [gcss_check_flag = false]则表示eqp_object_class、eqp_int_id查询不到集客信息，不需要关联集客业务信息
		               log.debug("setGcssInfo, gcss_service-fp0={}, gcss_check_flag={}, object_class={}, int_id={}, eqp_object_class={}, eqp_int_id={}", o_fp0, gcss_check_flag, object_class, int_id, eqp_object_class, eqp_int_id);
		               continue;
		               }
		             // 折中方案：判断object_class、int_id和eqp_object_class、eqp_int_id都能查询到集客信息，才需关联集客业务信息

		             o_gcss_service  = appendStr(o_gcss_service,tmp);
		             tmp	=	Util.getTempV(olist,3);//service_type
		             o_gcss_service_type  = appendStr(o_gcss_service_type,tmp);
		             tmp	=	Util.getTempV(olist,4);//service_sla
		             o_gcss_service_level  = LevelCompare("gcss_service_level", tmp, o_gcss_service_level);
		             tmp	=	Util.getTempV(olist,5);//service_region
		             gcss_service_region  = appendStr(gcss_service_region,tmp);
		             // 云专线资源字段接入
		             tmp	=	Util.getTempV(olist,6);// gcss_service_sub_type
		             o_gcss_service_sub_type  = appendStr(o_gcss_service_sub_type,tmp);
		             // 集客业务编码字段
		             tmp	=	Util.getTempV(olist,7);// gcss_service_sub_type
		             o_gcss_service_code  = appendStr(o_gcss_service_code,tmp);
		         }
		         o_gcss_service_num=this.distinceNum(o_gcss_service);
		         log.info(o_fp0+" "+task+":int_id["+int_id+"],o_gcss_service["+o_gcss_service+"],o_gcss_service_num["+o_gcss_service_num+"],o_gcss_service_type["+o_gcss_service_type+"],o_gcss_service_level["+o_gcss_service_level+"],gcss_service_region["+gcss_service_region+"],o_gcss_service_sub_type["+o_gcss_service_sub_type+"],o_gcss_service_code["+o_gcss_service_code+"]");
		     }
		 }

		 /**
		  * 通过province_name查找地区信息
		  * @param province_name
		  */
		 private void addOtherProvinceInfo(String province_name,String province_id)
		 {
		   if(StringUtils.isNotBlank(province_name)){
		     this.getOtherProvinceInfoWithMap(province_name);
		     if(!otherProvinceMap.isEmpty()){
		         o_province_id   = otherProvinceMap.get("province_id");
		         o_province_name = otherProvinceMap.get("province_name");
		     }
		   }
		   else
		   {
				 if (StringUtils.isNotBlank(province_id)) {
					 this.getOtherProvinceInfoWithMap(province_id);
			     if(!otherProvinceMap.isEmpty()){
			         o_province_id   = otherProvinceMap.get("province_id");
			         o_province_name = otherProvinceMap.get("province_name");
			     }
				 }
		   }
		 }

		 // 其他省份映射逻辑
		 private void getOtherProvinceInfoWithMap(String province){
		   switch(province)
		   {
		     case "979979892":
		     case "广西":
	                  otherProvinceMap = ["province_name":"广西","province_id":"979979892"];
	                  break;

		     case "72791720":
		     case "海南":
	                  otherProvinceMap = ["province_name":"海南","province_id":"72791720"];
	                  break;

		     case "-640755821":
		     case "河南":
	                  otherProvinceMap = ["province_name":"河南","province_id":"-640755821"];
	                  break;

		     case "1711400496":
		     case "湖南":
	                  otherProvinceMap = ["province_name":"湖南","province_id":"1711400496"];
	                  break;

		     case "58374238":
		     case "湖北":
	                  otherProvinceMap = ["province_name":"湖北","province_id":"58374238"];
	                  break;
		     default:
		 	          // 以上省份外，默认保持原有信息
	              otherProvinceMap = ["province_name":o_province_name,"province_id":o_province_id];
	              break;
		   }
		 }

		 /**
		  * 通过group_id添加组名称group_name
		  * @param group_id
		  */
		 private void addGroupName(String group_id) {
		   if (StringUtils.isBlank(group_id)) {
		     return;
		   }

		   String group_name = "";
		   String tmp_group_name = "";
		   String[] ids = group_id.split(",");
		   for (String id : ids) {
				 String key = "tai_network_group_define:" + id;
		     List<?> list = Util.getCache(util, CUSTOMCACHE, key, "tai_network_group_define");
		     if (list != null && list.size() > 0) {
		       tmp_group_name = Util.getTempV(list, 1); // group_name
		     }
		     group_name = group_name + "," + tmp_group_name;
		   }

		   if(StringUtils.isNotBlank(group_name)){
		     o_group_name = group_name;
		     // log.debug("addGroupName-fp0={}, group_name={}", o_fp0, o_group_name);
		   }
		 }

}
